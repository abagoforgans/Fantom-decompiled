contract main {




// =====================  Runtime code  =====================


#
#  - sub_23b12d4b(?)
#
address owner;
array of address add;
array of struct sub_6cbb1b68;
address mdxAddress;
address sub_1d801decAddress;

function add(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < add.length
    return add[arg1]
}

function sub_1d801dec(?) {
    return sub_1d801decAddress
}

function mdx() {
    return mdxAddress
}

function sub_6cbb1b68(?) {
    require calldata.size - 4 >= 32
    require arg1 < sub_6cbb1b68.length
    return sub_6cbb1b68[arg1].field_0, sub_6cbb1b68[arg1].field_256, sub_6cbb1b68[arg1].field_512, sub_6cbb1b68[arg1].field_768
}

function owner() {
    return owner
}

function _fallback() payable {
  stop
}

function sub_1cace039(?) {
    require calldata.size - 4 >= 128
    require (arg4 * arg1) + (10000 * arg2)
    return (arg4 * arg1 * arg3 / (arg4 * arg1) + (10000 * arg2))
}

function getAmountOut(uint256 arg1, uint256 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require (997 * arg1) + (1000 * arg2)
    return (997 * arg1 * arg3 / (997 * arg1) + (1000 * arg2))
}

function sub_8209b7e0(?) {
    require ext_code.size(sub_1d801decAddress)
    call sub_1d801decAddress.takerWithdraw() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function renounceOwnership() {
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sortTokens(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if arg1 == arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
    if arg1 < arg2:
        if not arg1:
            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
        return address(arg1), arg2
    if not arg2:
        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
    return address(arg2), arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_2976350d(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if arg1:
        call msg.sender with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
    else:
        call msg.sender with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawall() {
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83)
    staticcall 0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83.balanceOf(address rg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83)
        call 0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function withdraw(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    if arg2:
        call arg1.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, arg2
    else:
        staticcall arg1.balanceOf(address rg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        call arg1.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.decimals() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.allowance(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        call arg1.approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.decimals() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.allowance(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        staticcall arg1.decimals() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        require ext_code.size(arg1)
        call arg1.approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), arg3 * 10^uint8(ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_33293526(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == Mask(32, 224, arg2)
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if arg4:
        if arg4 != 1:
            if 2 == arg4:
                mem[196 len 96] = uint32(arg2), msg.sender, arg3, mem[196 len 28]
                call address(arg1).mem[196 len 4] with:
                     gas gas_remaining wei
                    args mem[200 len 64]
        else:
            mem[164 len 64] = uint32(arg2), arg3, mem[164 len 28]
            call address(arg1).mem[164 len 4] with:
                 gas gas_remaining wei
                args mem[168]
            if not return_data.size:
                if 2 == arg4:
                    mem[264 len 96] = uint32(arg2), msg.sender, arg3, mem[264 len 28]
                    call address(arg1).mem[264 len 4] with:
                         gas gas_remaining wei
                        args mem[268 len 64]
            else:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 265 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 265 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 265 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 269 len 64]
    else:
        mem[132] = uint32(arg2), mem[132 len 28]
        call address(arg1).mem[132 len 4] with:
             gas gas_remaining wei
        if not return_data.size:
            if arg4 != 1:
                if 2 == arg4:
                    mem[232 len 96] = uint32(arg2), msg.sender, arg3, mem[232 len 28]
                    call address(arg1).mem[232 len 4] with:
                         gas gas_remaining wei
                        args mem[236 len 64]
            else:
                mem[200 len 64] = uint32(arg2), arg3, mem[200 len 28]
                call address(arg1).mem[200 len 4] with:
                     gas gas_remaining wei
                    args mem[204]
                if not return_data.size:
                    if 2 == arg4:
                        mem[300 len 96] = uint32(arg2), msg.sender, arg3, mem[300 len 28]
                        call address(arg1).mem[300 len 4] with:
                             gas gas_remaining wei
                            args mem[304 len 64]
                else:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
        else:
            if arg4 != 1:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 233 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 233 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 233 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 237 len 64]
            else:
                mem[ceil32(return_data.size) + 201 len 64] = uint32(arg2), arg3, mem[ceil32(return_data.size) + 201 len 28]
                call address(arg1).mem[ceil32(return_data.size) + 201 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(return_data.size) + 205]
                if not return_data.size:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
                else:
                    if 2 == arg4:
                        mem[(2 * ceil32(return_data.size)) + 302 len 96] = uint32(arg2), msg.sender, arg3, mem[(2 * ceil32(return_data.size)) + 302 len 28]
                        call address(arg1).mem[(2 * ceil32(return_data.size)) + 302 len 4] with:
                             gas gas_remaining wei
                            args mem[(2 * ceil32(return_data.size)) + 306 len 64]
}

function sub_0b7cbaa6(?) {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 36).length / 2 <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length / 2
    mem[64] = (32 * ('cd', 36).length) + (16 * Mask(251, 1, ('cd', 36).length)) + 160
    if not Mask(255, 1, ('cd', 36).length):
        idx = ('cd', 36).length / 2
        s = 0
        s = cd[4]
        while idx < ('cd', 36).length - 1:
            require idx - (('cd', 36).length / 2) < mem[96]
            require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
            staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _192 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _197 = mem[_192]
            require mem[_192] == mem[_192 + 12 len 20]
            require idx < mem[96]
            require idx + 1 < mem[96]
            _206 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_206)
            require ext_code.size(address(_197))
            staticcall address(_197).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_206)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _212 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _214 = mem[_212]
            require mem[_212] == mem[_212 + 12 len 20]
            require ext_code.size(mem[_212 + 12 len 20])
            staticcall mem[_212 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _220 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _222 = mem[_220]
            require mem[_220] == mem[_220 + 18 len 14]
            _224 = mem[_220 + 32]
            require mem[_220 + 32] == mem[_220 + 50 len 14]
            require mem[_220 + 64] == mem[_220 + 92 len 4]
            require idx < mem[96]
            require idx + 1 < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            require (997 * s) + (1000 * mem[_220 + 50 len 14])
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
            mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 18 len 14] / (997 * s) + (1000 * mem[_220 + 50 len 14])
            idx = idx + 1
            s = _214
            s = 997 * s * Mask(112, 0, _222) / (997 * s) + (1000 * Mask(112, 0, _224))
            continue 
        mem[mem[64]] = 32
        _190 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _190] = mem[(32 * ('cd', 36).length) + 160 len 32 * _190]
        return 32, mem[mem[64] + 32 len (32 * _190) + 32]
    mem[(32 * ('cd', 36).length) + 160 len 16 * Mask(251, 1, ('cd', 36).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 36).length)]
    idx = ('cd', 36).length / 2
    s = 0
    s = cd[4]
    while idx < ('cd', 36).length - 1:
        require idx - (('cd', 36).length / 2) < mem[96]
        require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
        staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _193 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _199 = mem[_193]
        require mem[_193] == mem[_193 + 12 len 20]
        require idx < mem[96]
        require idx + 1 < mem[96]
        _208 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_208)
        require ext_code.size(address(_199))
        staticcall address(_199).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_208)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _213 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _215 = mem[_213]
        require mem[_213] == mem[_213 + 12 len 20]
        require ext_code.size(mem[_213 + 12 len 20])
        staticcall mem[_213 + 12 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _221 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _223 = mem[_221]
        require mem[_221] == mem[_221 + 18 len 14]
        _225 = mem[_221 + 32]
        require mem[_221 + 32] == mem[_221 + 50 len 14]
        require mem[_221 + 64] == mem[_221 + 92 len 4]
        require idx < mem[96]
        require idx + 1 < mem[96]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        require (997 * s) + (1000 * mem[_221 + 50 len 14])
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
        mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 18 len 14] / (997 * s) + (1000 * mem[_221 + 50 len 14])
        idx = idx + 1
        s = _215
        s = 997 * s * Mask(112, 0, _223) / (997 * s) + (1000 * Mask(112, 0, _225))
        continue 
    mem[mem[64]] = 32
    _191 = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 64 len 32 * _191] = mem[(32 * ('cd', 36).length) + 160 len 32 * _191]
    return 32, mem[mem[64] + 32 len (32 * _191) + 32]
}

function sub_31da019d(?) {
    require calldata.size - 4 >= 96
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 160 >= 128 and (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160 <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 36).length) + 160
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 36).length / 2 <= test266151307()
    mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160] = ('cd', 36).length / 2
    mem[64] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 36).length)) + 192
    if not Mask(255, 1, ('cd', 36).length):
        idx = ('cd', 36).length / 2
        s = 0
        s = cd[4]
        while idx < ('cd', 36).length - 1:
            require idx - (('cd', 36).length / 2) < mem[96]
            _249 = mem[(32 * idx - (('cd', 36).length / 2)) + 128]
            require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
            staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _258 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _264 = mem[_258]
            require mem[_258] == mem[_258 + 18 len 14]
            _266 = mem[_258 + 32]
            require mem[_258 + 32] == mem[_258 + 50 len 14]
            require mem[_258 + 64] == mem[_258 + 92 len 4]
            require idx < mem[96]
            require idx + 1 < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    idx = idx + 1
                    s = _249
                    s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _266) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _264))
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    idx = idx + 1
                    s = _249
                    s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _266) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _264))
                    continue 
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
            require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 50 len 14])
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
            mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 18 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 50 len 14])
            idx = idx + 1
            s = _249
            s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _264) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _266))
            continue 
        mem[mem[64]] = 32
        _256 = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[mem[64] + 64 len 32 * _256] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 32 * _256]
        return 32, mem[mem[64] + 32 len (32 * _256) + 32]
    mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 16 * Mask(251, 1, ('cd', 36).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 36).length)]
    idx = ('cd', 36).length / 2
    s = 0
    s = cd[4]
    while idx < ('cd', 36).length - 1:
        require idx - (('cd', 36).length / 2) < mem[96]
        _253 = mem[(32 * idx - (('cd', 36).length / 2)) + 128]
        require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
        staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _259 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _265 = mem[_259]
        require mem[_259] == mem[_259 + 18 len 14]
        _267 = mem[_259 + 32]
        require mem[_259 + 32] == mem[_259 + 50 len 14]
        require mem[_259 + 64] == mem[_259 + 92 len 4]
        require idx < mem[96]
        require idx + 1 < mem[96]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                idx = idx + 1
                s = _253
                s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _267) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _265))
                continue 
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                idx = idx + 1
                s = _253
                s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _267) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _265))
                continue 
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
        require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 50 len 14])
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 18 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 50 len 14])
        idx = idx + 1
        s = _253
        s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _265) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _267))
        continue 
    mem[mem[64]] = 32
    _257 = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
    mem[mem[64] + 64 len 32 * _257] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 32 * _257]
    return 32, mem[mem[64] + 32 len (32 * _257) + 32]
}

function sub_bdeae178(?) {
    require calldata.size - 4 >= 192
    require calldata.size - 68 >= 128
    require arg3 == address(arg3)
    mem[96] = arg3
    require arg4 == address(arg4)
    mem[128] = arg4
    require arg5 == address(arg5)
    mem[160] = arg5
    require arg6 == address(arg6)
    mem[192] = arg6
    if msg.sender == owner:
        mem[224] = 2
        mem[256] = address(arg5)
        mem[288] = address(arg6)
        mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[324] = arg1
        mem[356] = 64
        mem[388] = 2
        idx = 0
        s = 256
        t = 420
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require ext_code.size(address(arg3))
        staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                gas gas_remaining wei
               args arg1, Array(len=2, data=mem[420 len 64])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 320
        require return_data.size >= 32
        _794 = mem[320 len 4], Mask(224, 32, arg1) >> 32
        require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
        require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
        _797 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
        require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
        require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
        mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
        mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
        require return_data.size >= _794 + (32 * _797) + 32
        mem[ceil32(return_data.size) + 352 len 32 * _797] = mem[_794 + 352 len 32 * _797]
        mem[256] = address(arg6)
        mem[288] = address(arg5)
        require 1 < _797
        _1559 = mem[ceil32(return_data.size) + 384]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _1559
        mem[mem[64] + 36] = 64
        mem[mem[64] + 68] = 2
        idx = 0
        s = 256
        t = mem[64] + 100
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require ext_code.size(address(arg4))
        staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                gas gas_remaining wei
               args _1559, Array(len=2, data=mem[mem[64] + 100 len 64])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2279 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2282 = mem[_2279]
        require mem[_2279] <= test266151307()
        require _2279 + return_data.size > _2279 + mem[_2279] + 31
        _2285 = mem[_2279 + mem[_2279]]
        require mem[_2279 + mem[_2279]] <= test266151307()
        require (32 * mem[_2279 + mem[_2279]]) + 32 >= 0 and _2279 + ceil32(return_data.size) + (32 * mem[_2279 + mem[_2279]]) + 32 <= test266151307()
        mem[64] = _2279 + ceil32(return_data.size) + (32 * mem[_2279 + mem[_2279]]) + 32
        mem[_2279 + ceil32(return_data.size)] = _2285
        require return_data.size >= _2282 + (32 * _2285) + 32
        mem[_2279 + ceil32(return_data.size) + 32 len 32 * _2285] = mem[_2279 + _2282 + 32 len 32 * _2285]
        require 1 < _2285
        if mem[_2279 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
            revert with 0, 'e1'
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(arg5))
        staticcall address(arg5).balanceOf(address rg1) with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3002 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3005 = mem[_3002]
        require ext_code.size(address(arg3))
        staticcall address(arg3).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3017 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3020 = mem[_3017]
        require mem[_3017] == mem[_3017 + 12 len 20]
        _3024 = mem[192]
        mem[mem[64] + 4] = address(arg5)
        mem[mem[64] + 36] = address(_3024)
        require ext_code.size(address(_3020))
        staticcall address(_3020).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args address(arg5), address(_3024)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3035 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3038 = mem[_3035]
        require mem[_3035] == mem[_3035 + 12 len 20]
        mem[mem[64] + 4] = mem[_3035 + 12 len 20]
        mem[mem[64] + 36] = arg1
        require ext_code.size(address(arg5))
        call address(arg5).transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args mem[mem[64] + 4], arg1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3050 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3050] == bool(mem[_3050])
        require ext_code.size(address(_3038))
        staticcall address(_3038).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3062 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3065 = mem[_3062]
        require mem[_3062] == mem[_3062 + 12 len 20]
        require 1 < mem[ceil32(return_data.size) + 320]
        _3071 = mem[ceil32(return_data.size) + 384]
        require ext_code.size(address(arg4))
        staticcall address(arg4).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if address(arg5) == mem[_3062 + 12 len 20]:
            _3095 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3101 = mem[_3095]
            require mem[_3095] == mem[_3095 + 12 len 20]
            _3108 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3108)
            require ext_code.size(address(_3101))
            staticcall address(_3101).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3108)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3131 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3137 = mem[_3131]
            require mem[_3131] == mem[_3131 + 12 len 20]
            _3143 = mem[64]
            mem[mem[64]] = 0
            mem[64] = mem[64] + 32
            mem[_3143 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
            mem[_3143 + 36] = 0
            mem[_3143 + 68] = _3071
            mem[_3143 + 100] = address(_3137)
            mem[_3143 + 132] = 128
            mem[_3143 + 164] = mem[_3143]
            mem[_3143 + 196 len ceil32(mem[_3143])] = mem[_3143 + 32 len ceil32(mem[_3143])]
            if ceil32(mem[_3143]) <= mem[_3143]:
                require ext_code.size(address(_3038))
                call address(_3038).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args 0, _3071, address(_3137), 128, mem[_3143], mem[_3143 + 196 len ceil32(mem[_3143])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                require ext_code.size(address(_3137))
                if mem[204 len 20] == address(_3065):
                    call address(_3137) with:
                         gas gas_remaining wei
                        args 0, mem[_2279 + ceil32(return_data.size) + 64], address(this.address), 128, 0
                else:
                    call address(_3137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args mem[_2279 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0, None
            else:
                mem[mem[_3143] + _3143 + 196] = 0
                require ext_code.size(address(_3038))
                call address(_3038).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args 0, _3071, address(_3137), 128, mem[_3143], mem[_3143 + 196 len ceil32(mem[_3143])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                require ext_code.size(address(_3137))
                if mem[204 len 20] == address(_3065):
                    call address(_3137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, mem[_2279 + ceil32(return_data.size) + 64], address(this.address), 128, 0, None
                else:
                    call address(_3137) with:
                         gas gas_remaining wei
                        args mem[_2279 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < _3005 - arg1 + (arg1 * arg2 / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            _3096 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3102 = mem[_3096]
            require mem[_3096] == mem[_3096 + 12 len 20]
            _3111 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3111)
            require ext_code.size(address(_3102))
            staticcall address(_3102).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3111)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3132 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3138 = mem[_3132]
            require mem[_3132] == mem[_3132 + 12 len 20]
            _3144 = mem[64]
            mem[mem[64]] = 0
            mem[64] = mem[64] + 32
            mem[_3144 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
            mem[_3144 + 36] = _3071
            mem[_3144 + 68] = 0
            mem[_3144 + 100] = address(_3138)
            mem[_3144 + 132] = 128
            mem[_3144 + 164] = mem[_3144]
            mem[_3144 + 196 len ceil32(mem[_3144])] = mem[_3144 + 32 len ceil32(mem[_3144])]
            if ceil32(mem[_3144]) <= mem[_3144]:
                require ext_code.size(address(_3038))
                call address(_3038) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3144]) + _3144 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                _3699 = mem[_2279 + ceil32(return_data.size) + 64]
                if mem[204 len 20] == address(_3065):
                    _3723 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3723 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3723 + 36] = 0
                    mem[_3723 + 68] = _3699
                    mem[_3723 + 100] = this.address
                    mem[_3723 + 132] = 128
                    mem[_3723 + 164] = mem[_3723]
                    mem[_3723 + 196 len ceil32(mem[_3723])] = mem[_3723 + 32 len ceil32(mem[_3723])]
                    if ceil32(mem[_3723]) > mem[_3723]:
                        mem[mem[_3723] + _3723 + 196] = 0
                    require ext_code.size(address(_3138))
                    call address(_3138).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3699, address(this.address), 128, mem[_3723], mem[_3723 + 196 len ceil32(mem[_3723])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(address(arg5))
                    staticcall address(arg5).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < _3005 - arg1 + (arg1 * arg2 / 10000):
                        revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    _3724 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3724 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3724 + 36] = _3699
                    mem[_3724 + 68] = 0
                    mem[_3724 + 100] = this.address
                    mem[_3724 + 132] = 128
                    mem[_3724 + 164] = mem[_3724]
                    mem[_3724 + 196 len ceil32(mem[_3724])] = mem[_3724 + 32 len ceil32(mem[_3724])]
                    if ceil32(mem[_3724]) <= mem[_3724]:
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3724]) + _3724 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4401 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4401] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        mem[mem[_3724] + _3724 + 196] = 0
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3724]) + _3724 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4402] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[mem[_3144] + _3144 + 196] = 0
                require ext_code.size(address(_3038))
                call address(_3038) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3144]) + _3144 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                _3701 = mem[_2279 + ceil32(return_data.size) + 64]
                if mem[204 len 20] == address(_3065):
                    _3725 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3725 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3725 + 36] = 0
                    mem[_3725 + 68] = _3701
                    mem[_3725 + 100] = this.address
                    mem[_3725 + 132] = 128
                    mem[_3725 + 164] = mem[_3725]
                    mem[_3725 + 196 len ceil32(mem[_3725])] = mem[_3725 + 32 len ceil32(mem[_3725])]
                    if ceil32(mem[_3725]) <= mem[_3725]:
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3725]) + _3725 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4403 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4403] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        mem[mem[_3725] + _3725 + 196] = 0
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3725]) + _3725 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4404] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    _3726 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3726 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3726 + 36] = _3701
                    mem[_3726 + 68] = 0
                    mem[_3726 + 100] = this.address
                    mem[_3726 + 132] = 128
                    mem[_3726 + 164] = mem[_3726]
                    mem[_3726 + 196 len ceil32(mem[_3726])] = mem[_3726 + 32 len ceil32(mem[_3726])]
                    if ceil32(mem[_3726]) <= mem[_3726]:
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3726]) + _3726 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4405 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4405] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        mem[mem[_3726] + _3726 + 196] = 0
                        require ext_code.size(address(_3138))
                        call address(_3138) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3726]) + _3726 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4406] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            mem[224] = 2
            mem[256] = address(arg5)
            mem[288] = address(arg6)
            mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[324] = arg1
            mem[356] = 64
            mem[388] = 2
            idx = 0
            s = 256
            t = 420
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg3))
            staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args arg1, Array(len=2, data=mem[420 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 320
            require return_data.size >= 32
            _795 = mem[320 len 4], Mask(224, 32, arg1) >> 32
            require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
            require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
            _798 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
            require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
            mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
            mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require return_data.size >= _795 + (32 * _798) + 32
            mem[ceil32(return_data.size) + 352 len 32 * _798] = mem[_795 + 352 len 32 * _798]
            mem[256] = address(arg6)
            mem[288] = address(arg5)
            require 1 < _798
            _1561 = mem[ceil32(return_data.size) + 384]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _1561
            mem[mem[64] + 36] = 64
            mem[mem[64] + 68] = 2
            idx = 0
            s = 256
            t = mem[64] + 100
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg4))
            staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args _1561, Array(len=2, data=mem[mem[64] + 100 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2280 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2283 = mem[_2280]
            require mem[_2280] <= test266151307()
            require _2280 + return_data.size > _2280 + mem[_2280] + 31
            _2286 = mem[_2280 + mem[_2280]]
            require mem[_2280 + mem[_2280]] <= test266151307()
            require (32 * mem[_2280 + mem[_2280]]) + 32 >= 0 and _2280 + ceil32(return_data.size) + (32 * mem[_2280 + mem[_2280]]) + 32 <= test266151307()
            mem[64] = _2280 + ceil32(return_data.size) + (32 * mem[_2280 + mem[_2280]]) + 32
            mem[_2280 + ceil32(return_data.size)] = _2286
            require return_data.size >= _2283 + (32 * _2286) + 32
            mem[_2280 + ceil32(return_data.size) + 32 len 32 * _2286] = mem[_2280 + _2283 + 32 len 32 * _2286]
            require 1 < _2286
            if mem[_2280 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
                revert with 0, 'e1'
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3003 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3006 = mem[_3003]
            require ext_code.size(address(arg3))
            staticcall address(arg3).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3018 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3021 = mem[_3018]
            require mem[_3018] == mem[_3018 + 12 len 20]
            _3027 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3027)
            require ext_code.size(address(_3021))
            staticcall address(_3021).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3027)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3036 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3039 = mem[_3036]
            require mem[_3036] == mem[_3036 + 12 len 20]
            mem[mem[64] + 4] = mem[_3036 + 12 len 20]
            mem[mem[64] + 36] = arg1
            require ext_code.size(address(arg5))
            call address(arg5).transfer(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4], arg1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3051 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3051] == bool(mem[_3051])
            require ext_code.size(address(_3039))
            staticcall address(_3039).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3063 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3066 = mem[_3063]
            require mem[_3063] == mem[_3063 + 12 len 20]
            require 1 < mem[ceil32(return_data.size) + 320]
            _3073 = mem[ceil32(return_data.size) + 384]
            require ext_code.size(address(arg4))
            staticcall address(arg4).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if address(arg5) == mem[_3063 + 12 len 20]:
                _3097 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3103 = mem[_3097]
                require mem[_3097] == mem[_3097 + 12 len 20]
                _3114 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3114)
                require ext_code.size(address(_3103))
                staticcall address(_3103).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3114)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3133 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3139 = mem[_3133]
                require mem[_3133] == mem[_3133 + 12 len 20]
                _3145 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3145 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3145 + 36] = 0
                mem[_3145 + 68] = _3073
                mem[_3145 + 100] = address(_3139)
                mem[_3145 + 132] = 128
                mem[_3145 + 164] = mem[_3145]
                mem[_3145 + 196 len ceil32(mem[_3145])] = mem[_3145 + 32 len ceil32(mem[_3145])]
                if ceil32(mem[_3145]) <= mem[_3145]:
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3145]) + _3145 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3703 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3727 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3727 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3727 + 36] = 0
                        mem[_3727 + 68] = _3703
                        mem[_3727 + 100] = this.address
                        mem[_3727 + 132] = 128
                        mem[_3727 + 164] = mem[_3727]
                        mem[_3727 + 196 len ceil32(mem[_3727])] = mem[_3727 + 32 len ceil32(mem[_3727])]
                        if ceil32(mem[_3727]) > mem[_3727]:
                            mem[mem[_3727] + _3727 + 196] = 0
                        require ext_code.size(address(_3139))
                        call address(_3139).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3703, address(this.address), 128, mem[_3727], mem[_3727 + 196 len ceil32(mem[_3727])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < _3006 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3728 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3728 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3728 + 36] = _3703
                        mem[_3728 + 68] = 0
                        mem[_3728 + 100] = this.address
                        mem[_3728 + 132] = 128
                        mem[_3728 + 164] = mem[_3728]
                        mem[_3728 + 196 len ceil32(mem[_3728])] = mem[_3728 + 32 len ceil32(mem[_3728])]
                        if ceil32(mem[_3728]) <= mem[_3728]:
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3728]) + _3728 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4409 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4409] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3728] + _3728 + 196] = 0
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3728]) + _3728 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4410 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4410] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    mem[mem[_3145] + _3145 + 196] = 0
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3145]) + _3145 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3705 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3729 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3729 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3729 + 36] = 0
                        mem[_3729 + 68] = _3705
                        mem[_3729 + 100] = this.address
                        mem[_3729 + 132] = 128
                        mem[_3729 + 164] = mem[_3729]
                        mem[_3729 + 196 len ceil32(mem[_3729])] = mem[_3729 + 32 len ceil32(mem[_3729])]
                        if ceil32(mem[_3729]) <= mem[_3729]:
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3729]) + _3729 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4411 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4411] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3729] + _3729 + 196] = 0
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3729]) + _3729 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4412 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4412] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3730 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3730 + 36] = _3705
                        mem[_3730 + 68] = 0
                        mem[_3730 + 100] = this.address
                        mem[_3730 + 132] = 128
                        mem[_3730 + 164] = mem[_3730]
                        mem[_3730 + 196 len ceil32(mem[_3730])] = mem[_3730 + 32 len ceil32(mem[_3730])]
                        if ceil32(mem[_3730]) <= mem[_3730]:
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3730]) + _3730 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4413 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4413] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3730] + _3730 + 196] = 0
                            require ext_code.size(address(_3139))
                            call address(_3139) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3730]) + _3730 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4414 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4414] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                _3098 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3104 = mem[_3098]
                require mem[_3098] == mem[_3098 + 12 len 20]
                _3117 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3117)
                require ext_code.size(address(_3104))
                staticcall address(_3104).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3117)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3134 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3140 = mem[_3134]
                require mem[_3134] == mem[_3134 + 12 len 20]
                _3146 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3146 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3146 + 36] = _3073
                mem[_3146 + 68] = 0
                mem[_3146 + 100] = address(_3140)
                mem[_3146 + 132] = 128
                mem[_3146 + 164] = mem[_3146]
                mem[_3146 + 196 len ceil32(mem[_3146])] = mem[_3146 + 32 len ceil32(mem[_3146])]
                if ceil32(mem[_3146]) <= mem[_3146]:
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3146]) + _3146 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3707 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3731 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3731 + 36] = 0
                        mem[_3731 + 68] = _3707
                        mem[_3731 + 100] = this.address
                        mem[_3731 + 132] = 128
                        mem[_3731 + 164] = mem[_3731]
                        mem[_3731 + 196 len ceil32(mem[_3731])] = mem[_3731 + 32 len ceil32(mem[_3731])]
                        if ceil32(mem[_3731]) <= mem[_3731]:
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3731]) + _3731 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4415 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4415] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3731] + _3731 + 196] = 0
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3731]) + _3731 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4416 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4416] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3732 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3732 + 36] = _3707
                        mem[_3732 + 68] = 0
                        mem[_3732 + 100] = this.address
                        mem[_3732 + 132] = 128
                        mem[_3732 + 164] = mem[_3732]
                        mem[_3732 + 196 len ceil32(mem[_3732])] = mem[_3732 + 32 len ceil32(mem[_3732])]
                        if ceil32(mem[_3732]) <= mem[_3732]:
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3732]) + _3732 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4417 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4417] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3732] + _3732 + 196] = 0
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3732]) + _3732 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4418 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4418] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    mem[mem[_3146] + _3146 + 196] = 0
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3146]) + _3146 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3709 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3733 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3733 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3733 + 36] = 0
                        mem[_3733 + 68] = _3709
                        mem[_3733 + 100] = this.address
                        mem[_3733 + 132] = 128
                        mem[_3733 + 164] = mem[_3733]
                        mem[_3733 + 196 len ceil32(mem[_3733])] = mem[_3733 + 32 len ceil32(mem[_3733])]
                        if ceil32(mem[_3733]) > mem[_3733]:
                            mem[mem[_3733] + _3733 + 196] = 0
                        require ext_code.size(address(_3140))
                        call address(_3140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3709, address(this.address), 128, mem[_3733], mem[_3733 + 196 len ceil32(mem[_3733])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < _3006 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3734 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3734 + 36] = _3709
                        mem[_3734 + 68] = 0
                        mem[_3734 + 100] = this.address
                        mem[_3734 + 132] = 128
                        mem[_3734 + 164] = mem[_3734]
                        mem[_3734 + 196 len ceil32(mem[_3734])] = mem[_3734 + 32 len ceil32(mem[_3734])]
                        if ceil32(mem[_3734]) <= mem[_3734]:
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3734]) + _3734 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4421 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4421] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3734] + _3734 + 196] = 0
                            require ext_code.size(address(_3140))
                            call address(_3140) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3734]) + _3734 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4422 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4422] < _3006 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            mem[224] = 2
            mem[256] = address(arg5)
            mem[288] = address(arg6)
            mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[324] = arg1
            mem[356] = 64
            mem[388] = 2
            idx = 0
            s = 256
            t = 420
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg3))
            staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args arg1, Array(len=2, data=mem[420 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 320
            require return_data.size >= 32
            _796 = mem[320 len 4], Mask(224, 32, arg1) >> 32
            require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
            require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
            _799 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
            require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
            mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
            mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require return_data.size >= _796 + (32 * _799) + 32
            mem[ceil32(return_data.size) + 352 len 32 * _799] = mem[_796 + 352 len 32 * _799]
            mem[256] = address(arg6)
            mem[288] = address(arg5)
            require 1 < _799
            _1563 = mem[ceil32(return_data.size) + 384]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _1563
            mem[mem[64] + 36] = 64
            mem[mem[64] + 68] = 2
            idx = 0
            s = 256
            t = mem[64] + 100
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg4))
            staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args _1563, Array(len=2, data=mem[mem[64] + 100 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2281 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2284 = mem[_2281]
            require mem[_2281] <= test266151307()
            require _2281 + return_data.size > _2281 + mem[_2281] + 31
            _2287 = mem[_2281 + mem[_2281]]
            require mem[_2281 + mem[_2281]] <= test266151307()
            require (32 * mem[_2281 + mem[_2281]]) + 32 >= 0 and _2281 + ceil32(return_data.size) + (32 * mem[_2281 + mem[_2281]]) + 32 <= test266151307()
            mem[64] = _2281 + ceil32(return_data.size) + (32 * mem[_2281 + mem[_2281]]) + 32
            mem[_2281 + ceil32(return_data.size)] = _2287
            require return_data.size >= _2284 + (32 * _2287) + 32
            mem[_2281 + ceil32(return_data.size) + 32 len 32 * _2287] = mem[_2281 + _2284 + 32 len 32 * _2287]
            require 1 < _2287
            if mem[_2281 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
                revert with 0, 'e1'
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3004 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3007 = mem[_3004]
            require ext_code.size(address(arg3))
            staticcall address(arg3).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3019 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3022 = mem[_3019]
            require mem[_3019] == mem[_3019 + 12 len 20]
            _3030 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3030)
            require ext_code.size(address(_3022))
            staticcall address(_3022).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3030)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3037 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3040 = mem[_3037]
            require mem[_3037] == mem[_3037 + 12 len 20]
            mem[mem[64] + 4] = mem[_3037 + 12 len 20]
            mem[mem[64] + 36] = arg1
            require ext_code.size(address(arg5))
            call address(arg5).transfer(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4], arg1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3052 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3052] == bool(mem[_3052])
            require ext_code.size(address(_3040))
            staticcall address(_3040).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3064 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3067 = mem[_3064]
            require mem[_3064] == mem[_3064 + 12 len 20]
            require 1 < mem[ceil32(return_data.size) + 320]
            _3075 = mem[ceil32(return_data.size) + 384]
            require ext_code.size(address(arg4))
            staticcall address(arg4).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if address(arg5) == mem[_3064 + 12 len 20]:
                _3099 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3105 = mem[_3099]
                require mem[_3099] == mem[_3099 + 12 len 20]
                _3120 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3120)
                require ext_code.size(address(_3105))
                staticcall address(_3105).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3120)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3135 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3141 = mem[_3135]
                require mem[_3135] == mem[_3135 + 12 len 20]
                _3147 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3147 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3147 + 36] = 0
                mem[_3147 + 68] = _3075
                mem[_3147 + 100] = address(_3141)
                mem[_3147 + 132] = 128
                mem[_3147 + 164] = mem[_3147]
                mem[_3147 + 196 len ceil32(mem[_3147])] = mem[_3147 + 32 len ceil32(mem[_3147])]
                if ceil32(mem[_3147]) <= mem[_3147]:
                    require ext_code.size(address(_3040))
                    call address(_3040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3075, address(_3141), 128, mem[_3147], mem[_3147 + 196 len ceil32(mem[_3147])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    require ext_code.size(address(_3141))
                    if mem[204 len 20] == address(_3067):
                        call address(_3141) with:
                             gas gas_remaining wei
                            args 0, mem[_2281 + ceil32(return_data.size) + 64], address(this.address), 128, 0
                    else:
                        call address(_3141).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args mem[_2281 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0, None
                else:
                    mem[mem[_3147] + _3147 + 196] = 0
                    require ext_code.size(address(_3040))
                    call address(_3040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3075, address(_3141), 128, mem[_3147], mem[_3147 + 196 len ceil32(mem[_3147])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    require ext_code.size(address(_3141))
                    if mem[204 len 20] == address(_3067):
                        call address(_3141) with:
                             gas gas_remaining wei
                            args 0, mem[_2281 + ceil32(return_data.size) + 64], address(this.address), 128, 0
                    else:
                        call address(_3141) with:
                             gas gas_remaining wei
                            args mem[_2281 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(arg5))
                staticcall address(arg5).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < _3007 - arg1 + (arg1 * arg2 / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                _3100 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3106 = mem[_3100]
                require mem[_3100] == mem[_3100 + 12 len 20]
                _3123 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3123)
                require ext_code.size(address(_3106))
                staticcall address(_3106).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3123)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3136 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3142 = mem[_3136]
                require mem[_3136] == mem[_3136 + 12 len 20]
                _3148 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3148 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3148 + 36] = _3075
                mem[_3148 + 68] = 0
                mem[_3148 + 100] = address(_3142)
                mem[_3148 + 132] = 128
                mem[_3148 + 164] = mem[_3148]
                mem[_3148 + 196 len ceil32(mem[_3148])] = mem[_3148 + 32 len ceil32(mem[_3148])]
                if ceil32(mem[_3148]) <= mem[_3148]:
                    require ext_code.size(address(_3040))
                    call address(_3040) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3148]) + _3148 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    _3715 = mem[_2281 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] != address(_3067):
                        _3740 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3740 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3740 + 36] = _3715
                        mem[_3740 + 68] = 0
                        mem[_3740 + 100] = this.address
                        mem[_3740 + 132] = 128
                        mem[_3740 + 164] = mem[_3740]
                        mem[_3740 + 196 len ceil32(mem[_3740])] = mem[_3740 + 32 len ceil32(mem[_3740])]
                        if ceil32(mem[_3740]) > mem[_3740]:
                            mem[mem[_3740] + _3740 + 196] = 0
                        require ext_code.size(address(_3142))
                        call address(_3142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3715, 0, address(this.address), 128, mem[_3740], mem[_3740 + 196 len ceil32(mem[_3740])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < _3007 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3739 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3739 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3739 + 36] = 0
                        mem[_3739 + 68] = _3715
                        mem[_3739 + 100] = this.address
                        mem[_3739 + 132] = 128
                        mem[_3739 + 164] = mem[_3739]
                        mem[_3739 + 196 len ceil32(mem[_3739])] = mem[_3739 + 32 len ceil32(mem[_3739])]
                        if ceil32(mem[_3739]) <= mem[_3739]:
                            require ext_code.size(address(_3142))
                            call address(_3142) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3739]) + _3739 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4431 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4431] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3739] + _3739 + 196] = 0
                            require ext_code.size(address(_3142))
                            call address(_3142) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3739]) + _3739 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4432 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4432] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    mem[mem[_3148] + _3148 + 196] = 0
                    require ext_code.size(address(_3040))
                    call address(_3040) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3148]) + _3148 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    _3717 = mem[_2281 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] != address(_3067):
                        _3742 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3742 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3742 + 36] = _3717
                        mem[_3742 + 68] = 0
                        mem[_3742 + 100] = this.address
                        mem[_3742 + 132] = 128
                        mem[_3742 + 164] = mem[_3742]
                        mem[_3742 + 196 len ceil32(mem[_3742])] = mem[_3742 + 32 len ceil32(mem[_3742])]
                        if ceil32(mem[_3742]) > mem[_3742]:
                            mem[mem[_3742] + _3742 + 196] = 0
                        require ext_code.size(address(_3142))
                        call address(_3142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3717, 0, address(this.address), 128, mem[_3742], mem[_3742 + 196 len ceil32(mem[_3742])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < _3007 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3741 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3741 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3741 + 36] = 0
                        mem[_3741 + 68] = _3717
                        mem[_3741 + 100] = this.address
                        mem[_3741 + 132] = 128
                        mem[_3741 + 164] = mem[_3741]
                        mem[_3741 + 196 len ceil32(mem[_3741])] = mem[_3741 + 32 len ceil32(mem[_3741])]
                        if ceil32(mem[_3741]) <= mem[_3741]:
                            require ext_code.size(address(_3142))
                            call address(_3142) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3741]) + _3741 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4435 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4435] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3741] + _3741 + 196] = 0
                            require ext_code.size(address(_3142))
                            call address(_3142) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3741]) + _3741 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4436 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4436] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_2a6ec55f(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2556 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2593 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2638 = mem[_2593]
                require mem[_2593] == mem[_2593 + 18 len 14]
                _2651 = mem[_2593 + 32]
                require mem[_2593 + 32] == mem[_2593 + 50 len 14]
                require mem[_2593 + 64] == mem[_2593 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2593 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 18 len 14])
                        idx = idx + 1
                        s = _2556
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2651) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2638))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2593 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 18 len 14])
                        idx = idx + 1
                        s = _2556
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2651) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2638))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2593 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2593 + 50 len 14])
                idx = idx + 1
                s = _2556
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2638) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2651))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2590 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2591 = mem[96]
            require mem[96] / 2 < mem[96]
            _2620 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2620))
            staticcall address(_2620).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3376 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3376 - 1:
                require idx < mem[96]
                require 0 < mem[_2590]
                mem[_2590 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2590]
                mem[_2590 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2591 / 2) < mem[96]
                _3449 = mem[(32 * idx - (_2591 / 2)) + 128]
                if idx != _2591 / 2:
                    require ext_code.size(mem[(32 * idx - (_2591 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2591 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3496 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3496] == mem[_3496 + 12 len 20]
                    require idx - (_2591 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3544 = mem[(32 * idx - (_2591 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2590]
                    if mem[_2590 + 44 len 20] == mem[_3496 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3604 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3604 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3604 + 36] = 0
                            mem[_3604 + 68] = _3544
                            mem[_3604 + 100] = this.address
                            mem[_3604 + 132] = 128
                            mem[_3604 + 164] = mem[_3604]
                            s = 0
                            while s < mem[_3604]:
                                mem[s + _3604 + 196] = mem[s + _3604 + 32]
                                _3376 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3604]) > mem[_3604]:
                                mem[mem[_3604] + _3604 + 196] = 0
                            require ext_code.size(address(_3449))
                            call address(_3449).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3604]) + _3604 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3376 = mem[96]
                            idx = idx + 1
                            s = _3449
                            s = this.address
                            s = _3544
                            continue 
                        require idx + -(_2591 / 2) + 1 < mem[96]
                        _3605 = mem[(32 * idx + -(_2591 / 2) + 1) + 128]
                        _3634 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3634 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3634 + 36] = 0
                        mem[_3634 + 68] = _3544
                        mem[_3634 + 100] = address(_3605)
                        mem[_3634 + 132] = 128
                        mem[_3634 + 164] = mem[_3634]
                        s = 0
                        while s < mem[_3634]:
                            mem[s + _3634 + 196] = mem[s + _3634 + 32]
                            _3376 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3634]) > mem[_3634]:
                            mem[mem[_3634] + _3634 + 196] = 0
                        require ext_code.size(address(_3449))
                        call address(_3449).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3634]) + _3634 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3376 = mem[96]
                        idx = idx + 1
                        s = _3449
                        s = _3605
                        s = _3544
                        continue 
                    if idx + 2 >= mem[96]:
                        _3606 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3606 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3606 + 36] = _3544
                        mem[_3606 + 68] = 0
                        mem[_3606 + 100] = this.address
                        mem[_3606 + 132] = 128
                        mem[_3606 + 164] = mem[_3606]
                        s = 0
                        while s < mem[_3606]:
                            mem[s + _3606 + 196] = mem[s + _3606 + 32]
                            _3376 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3606]) > mem[_3606]:
                            mem[mem[_3606] + _3606 + 196] = 0
                        require ext_code.size(address(_3449))
                        call address(_3449).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3606]) + _3606 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3376 = mem[96]
                        idx = idx + 1
                        s = _3449
                        s = this.address
                        s = _3544
                        continue 
                    require idx + -(_2591 / 2) + 1 < mem[96]
                    _3607 = mem[(32 * idx + -(_2591 / 2) + 1) + 128]
                    _3635 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3635 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3635 + 36] = _3544
                    mem[_3635 + 68] = 0
                    mem[_3635 + 100] = address(_3607)
                    mem[_3635 + 132] = 128
                    mem[_3635 + 164] = mem[_3635]
                    s = 0
                    while s < mem[_3635]:
                        mem[s + _3635 + 196] = mem[s + _3635 + 32]
                        _3376 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3635]) > mem[_3635]:
                        mem[mem[_3635] + _3635 + 196] = 0
                    require ext_code.size(address(_3449))
                    call address(_3449).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3635]) + _3635 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3376 = mem[96]
                    idx = idx + 1
                    s = _3449
                    s = _3607
                    s = _3544
                    continue 
                require 0 < mem[_2590]
                _3479 = mem[_2590 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2591 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3479))
                call address(_3479).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3521 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3521] == bool(mem[_3521])
                require ext_code.size(address(_3449))
                staticcall address(_3449).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3576 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3576] == mem[_3576 + 12 len 20]
                require idx - (_2591 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3678 = mem[(32 * idx - (_2591 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2590]
                if mem[_2590 + 44 len 20] == mem[_3576 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3770 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3770 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3770 + 36] = 0
                        mem[_3770 + 68] = _3678
                        mem[_3770 + 100] = this.address
                        mem[_3770 + 132] = 128
                        mem[_3770 + 164] = mem[_3770]
                        s = 0
                        while s < mem[_3770]:
                            mem[s + _3770 + 196] = mem[s + _3770 + 32]
                            _3376 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3770]) > mem[_3770]:
                            mem[mem[_3770] + _3770 + 196] = 0
                        require ext_code.size(address(_3449))
                        call address(_3449).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3770]) + _3770 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3376 = mem[96]
                        idx = idx + 1
                        s = _3449
                        s = this.address
                        s = _3678
                        continue 
                    require idx + -(_2591 / 2) + 1 < mem[96]
                    _3771 = mem[(32 * idx + -(_2591 / 2) + 1) + 128]
                    _3814 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3814 + 36] = 0
                    mem[_3814 + 68] = _3678
                    mem[_3814 + 100] = address(_3771)
                    mem[_3814 + 132] = 128
                    mem[_3814 + 164] = mem[_3814]
                    s = 0
                    while s < mem[_3814]:
                        mem[s + _3814 + 196] = mem[s + _3814 + 32]
                        _3376 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3814]) > mem[_3814]:
                        mem[mem[_3814] + _3814 + 196] = 0
                    require ext_code.size(address(_3449))
                    call address(_3449).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3814]) + _3814 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3376 = mem[96]
                    idx = idx + 1
                    s = _3449
                    s = _3771
                    s = _3678
                    continue 
                if idx + 2 >= mem[96]:
                    _3772 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3772 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3772 + 36] = _3678
                    mem[_3772 + 68] = 0
                    mem[_3772 + 100] = this.address
                    mem[_3772 + 132] = 128
                    mem[_3772 + 164] = mem[_3772]
                    s = 0
                    while s < mem[_3772]:
                        mem[s + _3772 + 196] = mem[s + _3772 + 32]
                        _3376 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3772]) > mem[_3772]:
                        mem[mem[_3772] + _3772 + 196] = 0
                    require ext_code.size(address(_3449))
                    call address(_3449).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3678, 0, address(this.address), 128, mem[_3772], mem[_3772 + 196 len ceil32(mem[_3772])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3376 = mem[96]
                    idx = idx + 1
                    s = _3449
                    s = this.address
                    s = _3678
                    continue 
                require idx + -(_2591 / 2) + 1 < mem[96]
                _3773 = mem[(32 * idx + -(_2591 / 2) + 1) + 128]
                _3815 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3815 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3815 + 36] = _3678
                mem[_3815 + 68] = 0
                mem[_3815 + 100] = address(_3773)
                mem[_3815 + 132] = 128
                mem[_3815 + 164] = mem[_3815]
                s = 0
                while s < mem[_3815]:
                    mem[s + _3815 + 196] = mem[s + _3815 + 32]
                    _3376 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3815]) > mem[_3815]:
                    mem[mem[_3815] + _3815 + 196] = 0
                require ext_code.size(address(_3449))
                call address(_3449).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args _3678, 0, address(_3773), 128, mem[_3815], mem[_3815 + 196 len ceil32(mem[_3815])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3376 = mem[96]
                idx = idx + 1
                s = _3449
                s = _3773
                s = _3678
                continue 
            require _2591 / 2 < mem[96]
            _3394 = mem[(16 * Mask(251, 1, _2591)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3394))
            staticcall address(_3394).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3448 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3448] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2561 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2597 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2639 = mem[_2597]
                require mem[_2597] == mem[_2597 + 18 len 14]
                _2653 = mem[_2597 + 32]
                require mem[_2597 + 32] == mem[_2597 + 50 len 14]
                require mem[_2597 + 64] == mem[_2597 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2597 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 18 len 14])
                        idx = idx + 1
                        s = _2561
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2653) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2639))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2597 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 18 len 14])
                        idx = idx + 1
                        s = _2561
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2653) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2639))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2597 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2597 + 50 len 14])
                idx = idx + 1
                s = _2561
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2639) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2653))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2594 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2595 = mem[96]
            require mem[96] / 2 < mem[96]
            _2623 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2623))
            staticcall address(_2623).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3377 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3377 - 1:
                require idx < mem[96]
                require 0 < mem[_2594]
                mem[_2594 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2594]
                mem[_2594 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2595 / 2) < mem[96]
                _3451 = mem[(32 * idx - (_2595 / 2)) + 128]
                if idx != _2595 / 2:
                    require ext_code.size(mem[(32 * idx - (_2595 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2595 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3497 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3497] == mem[_3497 + 12 len 20]
                    require idx - (_2595 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3546 = mem[(32 * idx - (_2595 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2594]
                    if mem[_2594 + 44 len 20] == mem[_3497 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3609 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3609 + 36] = 0
                            mem[_3609 + 68] = _3546
                            mem[_3609 + 100] = this.address
                            mem[_3609 + 132] = 128
                            mem[_3609 + 164] = mem[_3609]
                            s = 0
                            while s < mem[_3609]:
                                mem[s + _3609 + 196] = mem[s + _3609 + 32]
                                _3377 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3609]) > mem[_3609]:
                                mem[mem[_3609] + _3609 + 196] = 0
                            require ext_code.size(address(_3451))
                            call address(_3451).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3609]) + _3609 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3377 = mem[96]
                            idx = idx + 1
                            s = _3451
                            s = this.address
                            s = _3546
                            continue 
                        require idx + -(_2595 / 2) + 1 < mem[96]
                        _3610 = mem[(32 * idx + -(_2595 / 2) + 1) + 128]
                        _3636 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3636 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3636 + 36] = 0
                        mem[_3636 + 68] = _3546
                        mem[_3636 + 100] = address(_3610)
                        mem[_3636 + 132] = 128
                        mem[_3636 + 164] = mem[_3636]
                        s = 0
                        while s < mem[_3636]:
                            mem[s + _3636 + 196] = mem[s + _3636 + 32]
                            _3377 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3636]) > mem[_3636]:
                            mem[mem[_3636] + _3636 + 196] = 0
                        require ext_code.size(address(_3451))
                        call address(_3451).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3546, address(_3610), 128, mem[_3636], mem[_3636 + 196 len ceil32(mem[_3636])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3377 = mem[96]
                        idx = idx + 1
                        s = _3451
                        s = _3610
                        s = _3546
                        continue 
                    if idx + 2 >= mem[96]:
                        _3611 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3611 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3611 + 36] = _3546
                        mem[_3611 + 68] = 0
                        mem[_3611 + 100] = this.address
                        mem[_3611 + 132] = 128
                        mem[_3611 + 164] = mem[_3611]
                        s = 0
                        while s < mem[_3611]:
                            mem[s + _3611 + 196] = mem[s + _3611 + 32]
                            _3377 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3611]) > mem[_3611]:
                            mem[mem[_3611] + _3611 + 196] = 0
                        require ext_code.size(address(_3451))
                        call address(_3451).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3611]) + _3611 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3377 = mem[96]
                        idx = idx + 1
                        s = _3451
                        s = this.address
                        s = _3546
                        continue 
                    require idx + -(_2595 / 2) + 1 < mem[96]
                    _3612 = mem[(32 * idx + -(_2595 / 2) + 1) + 128]
                    _3637 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3637 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3637 + 36] = _3546
                    mem[_3637 + 68] = 0
                    mem[_3637 + 100] = address(_3612)
                    mem[_3637 + 132] = 128
                    mem[_3637 + 164] = mem[_3637]
                    s = 0
                    while s < mem[_3637]:
                        mem[s + _3637 + 196] = mem[s + _3637 + 32]
                        _3377 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3637]) > mem[_3637]:
                        mem[mem[_3637] + _3637 + 196] = 0
                    require ext_code.size(address(_3451))
                    call address(_3451).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3637]) + _3637 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3377 = mem[96]
                    idx = idx + 1
                    s = _3451
                    s = _3612
                    s = _3546
                    continue 
                require 0 < mem[_2594]
                _3482 = mem[_2594 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2595 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3482))
                call address(_3482).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3523 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3523] == bool(mem[_3523])
                require ext_code.size(address(_3451))
                staticcall address(_3451).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3579] == mem[_3579 + 12 len 20]
                require idx - (_2595 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3682 = mem[(32 * idx - (_2595 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2594]
                if mem[_2594 + 44 len 20] == mem[_3579 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3778 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3778 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3778 + 36] = 0
                        mem[_3778 + 68] = _3682
                        mem[_3778 + 100] = this.address
                        mem[_3778 + 132] = 128
                        mem[_3778 + 164] = mem[_3778]
                        s = 0
                        while s < mem[_3778]:
                            mem[s + _3778 + 196] = mem[s + _3778 + 32]
                            _3377 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3778]) > mem[_3778]:
                            mem[mem[_3778] + _3778 + 196] = 0
                        require ext_code.size(address(_3451))
                        call address(_3451).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3778]) + _3778 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3377 = mem[96]
                        idx = idx + 1
                        s = _3451
                        s = this.address
                        s = _3682
                        continue 
                    require idx + -(_2595 / 2) + 1 < mem[96]
                    _3779 = mem[(32 * idx + -(_2595 / 2) + 1) + 128]
                    _3816 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3816 + 36] = 0
                    mem[_3816 + 68] = _3682
                    mem[_3816 + 100] = address(_3779)
                    mem[_3816 + 132] = 128
                    mem[_3816 + 164] = mem[_3816]
                    s = 0
                    while s < mem[_3816]:
                        mem[s + _3816 + 196] = mem[s + _3816 + 32]
                        _3377 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3816]) > mem[_3816]:
                        mem[mem[_3816] + _3816 + 196] = 0
                    require ext_code.size(address(_3451))
                    call address(_3451).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3816]) + _3816 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3377 = mem[96]
                    idx = idx + 1
                    s = _3451
                    s = _3779
                    s = _3682
                    continue 
                if idx + 2 >= mem[96]:
                    _3780 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3780 + 36] = _3682
                    mem[_3780 + 68] = 0
                    mem[_3780 + 100] = this.address
                    mem[_3780 + 132] = 128
                    mem[_3780 + 164] = mem[_3780]
                    s = 0
                    while s < mem[_3780]:
                        mem[s + _3780 + 196] = mem[s + _3780 + 32]
                        _3377 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3780]) > mem[_3780]:
                        mem[mem[_3780] + _3780 + 196] = 0
                    require ext_code.size(address(_3451))
                    call address(_3451).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3682, 0, address(this.address), 128, mem[_3780], mem[_3780 + 196 len ceil32(mem[_3780])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3377 = mem[96]
                    idx = idx + 1
                    s = _3451
                    s = this.address
                    s = _3682
                    continue 
                require idx + -(_2595 / 2) + 1 < mem[96]
                _3781 = mem[(32 * idx + -(_2595 / 2) + 1) + 128]
                _3817 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3817 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3817 + 36] = _3682
                mem[_3817 + 68] = 0
                mem[_3817 + 100] = address(_3781)
                mem[_3817 + 132] = 128
                mem[_3817 + 164] = mem[_3817]
                s = 0
                while s < mem[_3817]:
                    mem[s + _3817 + 196] = mem[s + _3817 + 32]
                    _3377 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3817]) > mem[_3817]:
                    mem[mem[_3817] + _3817 + 196] = 0
                require ext_code.size(address(_3451))
                call address(_3451).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3817]) + _3817 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3377 = mem[96]
                idx = idx + 1
                s = _3451
                s = _3781
                s = _3682
                continue 
            require _2595 / 2 < mem[96]
            _3398 = mem[(16 * Mask(251, 1, _2595)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3398))
            staticcall address(_3398).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3450 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3450] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2566 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2601 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2640 = mem[_2601]
                    require mem[_2601] == mem[_2601 + 18 len 14]
                    _2655 = mem[_2601 + 32]
                    require mem[_2601 + 32] == mem[_2601 + 50 len 14]
                    require mem[_2601 + 64] == mem[_2601 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2601 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 18 len 14])
                            idx = idx + 1
                            s = _2566
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2655) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2640))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2601 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 18 len 14])
                            idx = idx + 1
                            s = _2566
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2655) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2640))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2601 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2601 + 50 len 14])
                    idx = idx + 1
                    s = _2566
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2640) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2655))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2598 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2599 = mem[96]
                require mem[96] / 2 < mem[96]
                _2626 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2626))
                staticcall address(_2626).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3378 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3378 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2598]
                    mem[_2598 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2598]
                    mem[_2598 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2599 / 2) < mem[96]
                    _3453 = mem[(32 * idx - (_2599 / 2)) + 128]
                    if idx != _2599 / 2:
                        require ext_code.size(mem[(32 * idx - (_2599 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2599 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3498] == mem[_3498 + 12 len 20]
                        require idx - (_2599 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3548 = mem[(32 * idx - (_2599 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2598]
                        if mem[_2598 + 44 len 20] == mem[_3498 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3614 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3614 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3614 + 36] = 0
                                mem[_3614 + 68] = _3548
                                mem[_3614 + 100] = this.address
                                mem[_3614 + 132] = 128
                                mem[_3614 + 164] = mem[_3614]
                                s = 0
                                while s < mem[_3614]:
                                    mem[s + _3614 + 196] = mem[s + _3614 + 32]
                                    _3378 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3614]) > mem[_3614]:
                                    mem[mem[_3614] + _3614 + 196] = 0
                                require ext_code.size(address(_3453))
                                call address(_3453).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3614]) + _3614 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3378 = mem[96]
                                idx = idx + 1
                                s = _3453
                                s = this.address
                                s = _3548
                                continue 
                            require idx + -(_2599 / 2) + 1 < mem[96]
                            _3615 = mem[(32 * idx + -(_2599 / 2) + 1) + 128]
                            _3638 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3638 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3638 + 36] = 0
                            mem[_3638 + 68] = _3548
                            mem[_3638 + 100] = address(_3615)
                            mem[_3638 + 132] = 128
                            mem[_3638 + 164] = mem[_3638]
                            s = 0
                            while s < mem[_3638]:
                                mem[s + _3638 + 196] = mem[s + _3638 + 32]
                                _3378 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3638]) > mem[_3638]:
                                mem[mem[_3638] + _3638 + 196] = 0
                            require ext_code.size(address(_3453))
                            call address(_3453).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3548, address(_3615), 128, mem[_3638], mem[_3638 + 196 len ceil32(mem[_3638])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3378 = mem[96]
                            idx = idx + 1
                            s = _3453
                            s = _3615
                            s = _3548
                            continue 
                        if idx + 2 >= mem[96]:
                            _3616 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3616 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3616 + 36] = _3548
                            mem[_3616 + 68] = 0
                            mem[_3616 + 100] = this.address
                            mem[_3616 + 132] = 128
                            mem[_3616 + 164] = mem[_3616]
                            s = 0
                            while s < mem[_3616]:
                                mem[s + _3616 + 196] = mem[s + _3616 + 32]
                                _3378 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3616]) > mem[_3616]:
                                mem[mem[_3616] + _3616 + 196] = 0
                            require ext_code.size(address(_3453))
                            call address(_3453).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3616]) + _3616 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3378 = mem[96]
                            idx = idx + 1
                            s = _3453
                            s = this.address
                            s = _3548
                            continue 
                        require idx + -(_2599 / 2) + 1 < mem[96]
                        _3617 = mem[(32 * idx + -(_2599 / 2) + 1) + 128]
                        _3639 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3639 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3639 + 36] = _3548
                        mem[_3639 + 68] = 0
                        mem[_3639 + 100] = address(_3617)
                        mem[_3639 + 132] = 128
                        mem[_3639 + 164] = mem[_3639]
                        s = 0
                        while s < mem[_3639]:
                            mem[s + _3639 + 196] = mem[s + _3639 + 32]
                            _3378 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3639]) > mem[_3639]:
                            mem[mem[_3639] + _3639 + 196] = 0
                        require ext_code.size(address(_3453))
                        call address(_3453).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3548, 0, address(_3617), 128, mem[_3639], mem[_3639 + 196 len ceil32(mem[_3639])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3378 = mem[96]
                        idx = idx + 1
                        s = _3453
                        s = _3617
                        s = _3548
                        continue 
                    require 0 < mem[_2598]
                    _3485 = mem[_2598 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2599 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3485))
                    call address(_3485).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3525 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3525] == bool(mem[_3525])
                    require ext_code.size(address(_3453))
                    staticcall address(_3453).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3582 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3582] == mem[_3582 + 12 len 20]
                    require idx - (_2599 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3686 = mem[(32 * idx - (_2599 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2598]
                    if mem[_2598 + 44 len 20] == mem[_3582 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3786 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3786 + 36] = 0
                            mem[_3786 + 68] = _3686
                            mem[_3786 + 100] = this.address
                            mem[_3786 + 132] = 128
                            mem[_3786 + 164] = mem[_3786]
                            s = 0
                            while s < mem[_3786]:
                                mem[s + _3786 + 196] = mem[s + _3786 + 32]
                                _3378 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3786]) > mem[_3786]:
                                mem[mem[_3786] + _3786 + 196] = 0
                            require ext_code.size(address(_3453))
                            call address(_3453).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3686, address(this.address), 128, mem[_3786], mem[_3786 + 196 len ceil32(mem[_3786])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3378 = mem[96]
                            idx = idx + 1
                            s = _3453
                            s = this.address
                            s = _3686
                            continue 
                        require idx + -(_2599 / 2) + 1 < mem[96]
                        _3787 = mem[(32 * idx + -(_2599 / 2) + 1) + 128]
                        _3818 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3818 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3818 + 36] = 0
                        mem[_3818 + 68] = _3686
                        mem[_3818 + 100] = address(_3787)
                        mem[_3818 + 132] = 128
                        mem[_3818 + 164] = mem[_3818]
                        s = 0
                        while s < mem[_3818]:
                            mem[s + _3818 + 196] = mem[s + _3818 + 32]
                            _3378 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3818]) > mem[_3818]:
                            mem[mem[_3818] + _3818 + 196] = 0
                        require ext_code.size(address(_3453))
                        call address(_3453).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3686, address(_3787), 128, mem[_3818], mem[_3818 + 196 len ceil32(mem[_3818])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3378 = mem[96]
                        idx = idx + 1
                        s = _3453
                        s = _3787
                        s = _3686
                        continue 
                    if idx + 2 >= mem[96]:
                        _3788 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3788 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3788 + 36] = _3686
                        mem[_3788 + 68] = 0
                        mem[_3788 + 100] = this.address
                        mem[_3788 + 132] = 128
                        mem[_3788 + 164] = mem[_3788]
                        s = 0
                        while s < mem[_3788]:
                            mem[s + _3788 + 196] = mem[s + _3788 + 32]
                            _3378 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3788]) > mem[_3788]:
                            mem[mem[_3788] + _3788 + 196] = 0
                        require ext_code.size(address(_3453))
                        call address(_3453).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3788]) + _3788 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3378 = mem[96]
                        idx = idx + 1
                        s = _3453
                        s = this.address
                        s = _3686
                        continue 
                    require idx + -(_2599 / 2) + 1 < mem[96]
                    _3789 = mem[(32 * idx + -(_2599 / 2) + 1) + 128]
                    _3819 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3819 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3819 + 36] = _3686
                    mem[_3819 + 68] = 0
                    mem[_3819 + 100] = address(_3789)
                    mem[_3819 + 132] = 128
                    mem[_3819 + 164] = mem[_3819]
                    s = 0
                    while s < mem[_3819]:
                        mem[s + _3819 + 196] = mem[s + _3819 + 32]
                        _3378 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3819]) > mem[_3819]:
                        mem[mem[_3819] + _3819 + 196] = 0
                    require ext_code.size(address(_3453))
                    call address(_3453).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3819]) + _3819 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3378 = mem[96]
                    idx = idx + 1
                    s = _3453
                    s = _3789
                    s = _3686
                    continue 
                require _2599 / 2 < mem[96]
                _3402 = mem[(16 * Mask(251, 1, _2599)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3402))
                staticcall address(_3402).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3452 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3452] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2571 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2605 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2641 = mem[_2605]
                    require mem[_2605] == mem[_2605 + 18 len 14]
                    _2657 = mem[_2605 + 32]
                    require mem[_2605 + 32] == mem[_2605 + 50 len 14]
                    require mem[_2605 + 64] == mem[_2605 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2605 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 18 len 14])
                            idx = idx + 1
                            s = _2571
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2657) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2641))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2605 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 18 len 14])
                            idx = idx + 1
                            s = _2571
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2657) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2641))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2605 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2605 + 50 len 14])
                    idx = idx + 1
                    s = _2571
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2641) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2657))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2602 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2603 = mem[96]
                require mem[96] / 2 < mem[96]
                _2629 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2629))
                staticcall address(_2629).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3379 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3379 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2602]
                    mem[_2602 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2602]
                    mem[_2602 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2603 / 2) < mem[96]
                    _3455 = mem[(32 * idx - (_2603 / 2)) + 128]
                    if idx != _2603 / 2:
                        require ext_code.size(mem[(32 * idx - (_2603 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2603 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3499 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3499] == mem[_3499 + 12 len 20]
                        require idx - (_2603 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3550 = mem[(32 * idx - (_2603 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2602]
                        if mem[_2602 + 44 len 20] == mem[_3499 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3619 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3619 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3619 + 36] = 0
                                mem[_3619 + 68] = _3550
                                mem[_3619 + 100] = this.address
                                mem[_3619 + 132] = 128
                                mem[_3619 + 164] = mem[_3619]
                                s = 0
                                while s < mem[_3619]:
                                    mem[s + _3619 + 196] = mem[s + _3619 + 32]
                                    _3379 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3619]) > mem[_3619]:
                                    mem[mem[_3619] + _3619 + 196] = 0
                                require ext_code.size(address(_3455))
                                call address(_3455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3550, address(this.address), 128, mem[_3619], mem[_3619 + 196 len ceil32(mem[_3619])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3379 = mem[96]
                                idx = idx + 1
                                s = _3455
                                s = this.address
                                s = _3550
                                continue 
                            require idx + -(_2603 / 2) + 1 < mem[96]
                            _3620 = mem[(32 * idx + -(_2603 / 2) + 1) + 128]
                            _3640 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3640 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3640 + 36] = 0
                            mem[_3640 + 68] = _3550
                            mem[_3640 + 100] = address(_3620)
                            mem[_3640 + 132] = 128
                            mem[_3640 + 164] = mem[_3640]
                            s = 0
                            while s < mem[_3640]:
                                mem[s + _3640 + 196] = mem[s + _3640 + 32]
                                _3379 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3640]) > mem[_3640]:
                                mem[mem[_3640] + _3640 + 196] = 0
                            require ext_code.size(address(_3455))
                            call address(_3455).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3640]) + _3640 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3379 = mem[96]
                            idx = idx + 1
                            s = _3455
                            s = _3620
                            s = _3550
                            continue 
                        if idx + 2 >= mem[96]:
                            _3621 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3621 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3621 + 36] = _3550
                            mem[_3621 + 68] = 0
                            mem[_3621 + 100] = this.address
                            mem[_3621 + 132] = 128
                            mem[_3621 + 164] = mem[_3621]
                            s = 0
                            while s < mem[_3621]:
                                mem[s + _3621 + 196] = mem[s + _3621 + 32]
                                _3379 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3621]) > mem[_3621]:
                                mem[mem[_3621] + _3621 + 196] = 0
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3550, 0, address(this.address), 128, mem[_3621], mem[_3621 + 196 len ceil32(mem[_3621])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3379 = mem[96]
                            idx = idx + 1
                            s = _3455
                            s = this.address
                            s = _3550
                            continue 
                        require idx + -(_2603 / 2) + 1 < mem[96]
                        _3622 = mem[(32 * idx + -(_2603 / 2) + 1) + 128]
                        _3641 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3641 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3641 + 36] = _3550
                        mem[_3641 + 68] = 0
                        mem[_3641 + 100] = address(_3622)
                        mem[_3641 + 132] = 128
                        mem[_3641 + 164] = mem[_3641]
                        s = 0
                        while s < mem[_3641]:
                            mem[s + _3641 + 196] = mem[s + _3641 + 32]
                            _3379 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3641]) > mem[_3641]:
                            mem[mem[_3641] + _3641 + 196] = 0
                        require ext_code.size(address(_3455))
                        call address(_3455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3550, 0, address(_3622), 128, mem[_3641], mem[_3641 + 196 len ceil32(mem[_3641])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3379 = mem[96]
                        idx = idx + 1
                        s = _3455
                        s = _3622
                        s = _3550
                        continue 
                    require 0 < mem[_2602]
                    _3488 = mem[_2602 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2603 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3488))
                    call address(_3488).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3527 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3527] == bool(mem[_3527])
                    require ext_code.size(address(_3455))
                    staticcall address(_3455).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3585 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3585] == mem[_3585 + 12 len 20]
                    require idx - (_2603 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3690 = mem[(32 * idx - (_2603 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2602]
                    if mem[_2602 + 44 len 20] == mem[_3585 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3794 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3794 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3794 + 36] = 0
                            mem[_3794 + 68] = _3690
                            mem[_3794 + 100] = this.address
                            mem[_3794 + 132] = 128
                            mem[_3794 + 164] = mem[_3794]
                            s = 0
                            while s < mem[_3794]:
                                mem[s + _3794 + 196] = mem[s + _3794 + 32]
                                _3379 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3794]) > mem[_3794]:
                                mem[mem[_3794] + _3794 + 196] = 0
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3690, address(this.address), 128, mem[_3794], mem[_3794 + 196 len ceil32(mem[_3794])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3379 = mem[96]
                            idx = idx + 1
                            s = _3455
                            s = this.address
                            s = _3690
                            continue 
                        require idx + -(_2603 / 2) + 1 < mem[96]
                        _3795 = mem[(32 * idx + -(_2603 / 2) + 1) + 128]
                        _3820 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3820 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3820 + 36] = 0
                        mem[_3820 + 68] = _3690
                        mem[_3820 + 100] = address(_3795)
                        mem[_3820 + 132] = 128
                        mem[_3820 + 164] = mem[_3820]
                        s = 0
                        while s < mem[_3820]:
                            mem[s + _3820 + 196] = mem[s + _3820 + 32]
                            _3379 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3820]) > mem[_3820]:
                            mem[mem[_3820] + _3820 + 196] = 0
                        require ext_code.size(address(_3455))
                        call address(_3455).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3820]) + _3820 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3379 = mem[96]
                        idx = idx + 1
                        s = _3455
                        s = _3795
                        s = _3690
                        continue 
                    if idx + 2 >= mem[96]:
                        _3796 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3796 + 36] = _3690
                        mem[_3796 + 68] = 0
                        mem[_3796 + 100] = this.address
                        mem[_3796 + 132] = 128
                        mem[_3796 + 164] = mem[_3796]
                        s = 0
                        while s < mem[_3796]:
                            mem[s + _3796 + 196] = mem[s + _3796 + 32]
                            _3379 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3796]) > mem[_3796]:
                            mem[mem[_3796] + _3796 + 196] = 0
                        require ext_code.size(address(_3455))
                        call address(_3455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3690, 0, address(this.address), 128, mem[_3796], mem[_3796 + 196 len ceil32(mem[_3796])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3379 = mem[96]
                        idx = idx + 1
                        s = _3455
                        s = this.address
                        s = _3690
                        continue 
                    require idx + -(_2603 / 2) + 1 < mem[96]
                    _3797 = mem[(32 * idx + -(_2603 / 2) + 1) + 128]
                    _3821 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3821 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3821 + 36] = _3690
                    mem[_3821 + 68] = 0
                    mem[_3821 + 100] = address(_3797)
                    mem[_3821 + 132] = 128
                    mem[_3821 + 164] = mem[_3821]
                    s = 0
                    while s < mem[_3821]:
                        mem[s + _3821 + 196] = mem[s + _3821 + 32]
                        _3379 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3821]) > mem[_3821]:
                        mem[mem[_3821] + _3821 + 196] = 0
                    require ext_code.size(address(_3455))
                    call address(_3455).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3821]) + _3821 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3379 = mem[96]
                    idx = idx + 1
                    s = _3455
                    s = _3797
                    s = _3690
                    continue 
                require _2603 / 2 < mem[96]
                _3406 = mem[(16 * Mask(251, 1, _2603)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3406))
                staticcall address(_3406).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3454 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3454] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2576 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2609 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2642 = mem[_2609]
                    require mem[_2609] == mem[_2609 + 18 len 14]
                    _2659 = mem[_2609 + 32]
                    require mem[_2609 + 32] == mem[_2609 + 50 len 14]
                    require mem[_2609 + 64] == mem[_2609 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2609 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 18 len 14])
                            idx = idx + 1
                            s = _2576
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2659) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2642))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2609 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 18 len 14])
                            idx = idx + 1
                            s = _2576
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2659) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2642))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2609 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2609 + 50 len 14])
                    idx = idx + 1
                    s = _2576
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2642) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2659))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2606 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2607 = mem[96]
                require mem[96] / 2 < mem[96]
                _2632 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2632))
                staticcall address(_2632).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3380 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3380 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2606]
                    mem[_2606 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2606]
                    mem[_2606 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2607 / 2) < mem[96]
                    _3457 = mem[(32 * idx - (_2607 / 2)) + 128]
                    if idx != _2607 / 2:
                        require ext_code.size(mem[(32 * idx - (_2607 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2607 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3500 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3500] == mem[_3500 + 12 len 20]
                        require idx - (_2607 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3552 = mem[(32 * idx - (_2607 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2606]
                        if mem[_2606 + 44 len 20] == mem[_3500 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3624 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3624 + 36] = 0
                                mem[_3624 + 68] = _3552
                                mem[_3624 + 100] = this.address
                                mem[_3624 + 132] = 128
                                mem[_3624 + 164] = mem[_3624]
                                s = 0
                                while s < mem[_3624]:
                                    mem[s + _3624 + 196] = mem[s + _3624 + 32]
                                    _3380 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3624]) > mem[_3624]:
                                    mem[mem[_3624] + _3624 + 196] = 0
                                require ext_code.size(address(_3457))
                                call address(_3457).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3624]) + _3624 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3380 = mem[96]
                                idx = idx + 1
                                s = _3457
                                s = this.address
                                s = _3552
                                continue 
                            require idx + -(_2607 / 2) + 1 < mem[96]
                            _3625 = mem[(32 * idx + -(_2607 / 2) + 1) + 128]
                            _3642 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3642 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3642 + 36] = 0
                            mem[_3642 + 68] = _3552
                            mem[_3642 + 100] = address(_3625)
                            mem[_3642 + 132] = 128
                            mem[_3642 + 164] = mem[_3642]
                            s = 0
                            while s < mem[_3642]:
                                mem[s + _3642 + 196] = mem[s + _3642 + 32]
                                _3380 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3642]) > mem[_3642]:
                                mem[mem[_3642] + _3642 + 196] = 0
                            require ext_code.size(address(_3457))
                            call address(_3457).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3552, address(_3625), 128, mem[_3642], mem[_3642 + 196 len ceil32(mem[_3642])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3380 = mem[96]
                            idx = idx + 1
                            s = _3457
                            s = _3625
                            s = _3552
                            continue 
                        if idx + 2 >= mem[96]:
                            _3626 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3626 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3626 + 36] = _3552
                            mem[_3626 + 68] = 0
                            mem[_3626 + 100] = this.address
                            mem[_3626 + 132] = 128
                            mem[_3626 + 164] = mem[_3626]
                            s = 0
                            while s < mem[_3626]:
                                mem[s + _3626 + 196] = mem[s + _3626 + 32]
                                _3380 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3626]) > mem[_3626]:
                                mem[mem[_3626] + _3626 + 196] = 0
                            require ext_code.size(address(_3457))
                            call address(_3457).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3552, 0, address(this.address), 128, mem[_3626], mem[_3626 + 196 len ceil32(mem[_3626])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3380 = mem[96]
                            idx = idx + 1
                            s = _3457
                            s = this.address
                            s = _3552
                            continue 
                        require idx + -(_2607 / 2) + 1 < mem[96]
                        _3627 = mem[(32 * idx + -(_2607 / 2) + 1) + 128]
                        _3643 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3643 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3643 + 36] = _3552
                        mem[_3643 + 68] = 0
                        mem[_3643 + 100] = address(_3627)
                        mem[_3643 + 132] = 128
                        mem[_3643 + 164] = mem[_3643]
                        s = 0
                        while s < mem[_3643]:
                            mem[s + _3643 + 196] = mem[s + _3643 + 32]
                            _3380 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3643]) > mem[_3643]:
                            mem[mem[_3643] + _3643 + 196] = 0
                        require ext_code.size(address(_3457))
                        call address(_3457).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3643]) + _3643 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3380 = mem[96]
                        idx = idx + 1
                        s = _3457
                        s = _3627
                        s = _3552
                        continue 
                    require 0 < mem[_2606]
                    _3491 = mem[_2606 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2607 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3491))
                    call address(_3491).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3529] == bool(mem[_3529])
                    require ext_code.size(address(_3457))
                    staticcall address(_3457).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3588 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3588] == mem[_3588 + 12 len 20]
                    require idx - (_2607 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3694 = mem[(32 * idx - (_2607 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2606]
                    if mem[_2606 + 44 len 20] == mem[_3588 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3802 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3802 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3802 + 36] = 0
                            mem[_3802 + 68] = _3694
                            mem[_3802 + 100] = this.address
                            mem[_3802 + 132] = 128
                            mem[_3802 + 164] = mem[_3802]
                            s = 0
                            while s < mem[_3802]:
                                mem[s + _3802 + 196] = mem[s + _3802 + 32]
                                _3380 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3802]) > mem[_3802]:
                                mem[mem[_3802] + _3802 + 196] = 0
                            require ext_code.size(address(_3457))
                            call address(_3457).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3802]) + _3802 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3380 = mem[96]
                            idx = idx + 1
                            s = _3457
                            s = this.address
                            s = _3694
                            continue 
                        require idx + -(_2607 / 2) + 1 < mem[96]
                        _3803 = mem[(32 * idx + -(_2607 / 2) + 1) + 128]
                        _3822 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3822 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3822 + 36] = 0
                        mem[_3822 + 68] = _3694
                        mem[_3822 + 100] = address(_3803)
                        mem[_3822 + 132] = 128
                        mem[_3822 + 164] = mem[_3822]
                        s = 0
                        while s < mem[_3822]:
                            mem[s + _3822 + 196] = mem[s + _3822 + 32]
                            _3380 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3822]) > mem[_3822]:
                            mem[mem[_3822] + _3822 + 196] = 0
                        require ext_code.size(address(_3457))
                        call address(_3457).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3822]) + _3822 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3380 = mem[96]
                        idx = idx + 1
                        s = _3457
                        s = _3803
                        s = _3694
                        continue 
                    if idx + 2 >= mem[96]:
                        _3804 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3804 + 36] = _3694
                        mem[_3804 + 68] = 0
                        mem[_3804 + 100] = this.address
                        mem[_3804 + 132] = 128
                        mem[_3804 + 164] = mem[_3804]
                        s = 0
                        while s < mem[_3804]:
                            mem[s + _3804 + 196] = mem[s + _3804 + 32]
                            _3380 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3804]) > mem[_3804]:
                            mem[mem[_3804] + _3804 + 196] = 0
                        require ext_code.size(address(_3457))
                        call address(_3457).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3694, 0, address(this.address), 128, mem[_3804], mem[_3804 + 196 len ceil32(mem[_3804])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3380 = mem[96]
                        idx = idx + 1
                        s = _3457
                        s = this.address
                        s = _3694
                        continue 
                    require idx + -(_2607 / 2) + 1 < mem[96]
                    _3805 = mem[(32 * idx + -(_2607 / 2) + 1) + 128]
                    _3823 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3823 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3823 + 36] = _3694
                    mem[_3823 + 68] = 0
                    mem[_3823 + 100] = address(_3805)
                    mem[_3823 + 132] = 128
                    mem[_3823 + 164] = mem[_3823]
                    s = 0
                    while s < mem[_3823]:
                        mem[s + _3823 + 196] = mem[s + _3823 + 32]
                        _3380 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3823]) > mem[_3823]:
                        mem[mem[_3823] + _3823 + 196] = 0
                    require ext_code.size(address(_3457))
                    call address(_3457).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3823]) + _3823 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3380 = mem[96]
                    idx = idx + 1
                    s = _3457
                    s = _3805
                    s = _3694
                    continue 
                require _2607 / 2 < mem[96]
                _3410 = mem[(16 * Mask(251, 1, _2607)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3410))
                staticcall address(_3410).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3456 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3456] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2581 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2613 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2643 = mem[_2613]
                    require mem[_2613] == mem[_2613 + 18 len 14]
                    _2661 = mem[_2613 + 32]
                    require mem[_2613 + 32] == mem[_2613 + 50 len 14]
                    require mem[_2613 + 64] == mem[_2613 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2613 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 18 len 14])
                            idx = idx + 1
                            s = _2581
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2661) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2643))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2613 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 18 len 14])
                            idx = idx + 1
                            s = _2581
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2661) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2643))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2613 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2613 + 50 len 14])
                    idx = idx + 1
                    s = _2581
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2643) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2661))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2610 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2611 = mem[96]
                require mem[96] / 2 < mem[96]
                _2635 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2635))
                staticcall address(_2635).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3381 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3381 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2610]
                    mem[_2610 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2610]
                    mem[_2610 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2611 / 2) < mem[96]
                    _3459 = mem[(32 * idx - (_2611 / 2)) + 128]
                    if idx != _2611 / 2:
                        require ext_code.size(mem[(32 * idx - (_2611 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2611 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3501 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3501] == mem[_3501 + 12 len 20]
                        require idx - (_2611 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3554 = mem[(32 * idx - (_2611 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2610]
                        if mem[_2610 + 44 len 20] == mem[_3501 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3629 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3629 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3629 + 36] = 0
                                mem[_3629 + 68] = _3554
                                mem[_3629 + 100] = this.address
                                mem[_3629 + 132] = 128
                                mem[_3629 + 164] = mem[_3629]
                                s = 0
                                while s < mem[_3629]:
                                    mem[s + _3629 + 196] = mem[s + _3629 + 32]
                                    _3381 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3629]) > mem[_3629]:
                                    mem[mem[_3629] + _3629 + 196] = 0
                                require ext_code.size(address(_3459))
                                call address(_3459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3554, address(this.address), 128, mem[_3629], mem[_3629 + 196 len ceil32(mem[_3629])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3381 = mem[96]
                                idx = idx + 1
                                s = _3459
                                s = this.address
                                s = _3554
                                continue 
                            require idx + -(_2611 / 2) + 1 < mem[96]
                            _3630 = mem[(32 * idx + -(_2611 / 2) + 1) + 128]
                            _3644 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3644 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3644 + 36] = 0
                            mem[_3644 + 68] = _3554
                            mem[_3644 + 100] = address(_3630)
                            mem[_3644 + 132] = 128
                            mem[_3644 + 164] = mem[_3644]
                            s = 0
                            while s < mem[_3644]:
                                mem[s + _3644 + 196] = mem[s + _3644 + 32]
                                _3381 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3644]) > mem[_3644]:
                                mem[mem[_3644] + _3644 + 196] = 0
                            require ext_code.size(address(_3459))
                            call address(_3459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3554, address(_3630), 128, mem[_3644], mem[_3644 + 196 len ceil32(mem[_3644])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3381 = mem[96]
                            idx = idx + 1
                            s = _3459
                            s = _3630
                            s = _3554
                            continue 
                        if idx + 2 >= mem[96]:
                            _3631 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3631 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3631 + 36] = _3554
                            mem[_3631 + 68] = 0
                            mem[_3631 + 100] = this.address
                            mem[_3631 + 132] = 128
                            mem[_3631 + 164] = mem[_3631]
                            s = 0
                            while s < mem[_3631]:
                                mem[s + _3631 + 196] = mem[s + _3631 + 32]
                                _3381 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3631]) > mem[_3631]:
                                mem[mem[_3631] + _3631 + 196] = 0
                            require ext_code.size(address(_3459))
                            call address(_3459).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3631]) + _3631 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3381 = mem[96]
                            idx = idx + 1
                            s = _3459
                            s = this.address
                            s = _3554
                            continue 
                        require idx + -(_2611 / 2) + 1 < mem[96]
                        _3632 = mem[(32 * idx + -(_2611 / 2) + 1) + 128]
                        _3645 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3645 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3645 + 36] = _3554
                        mem[_3645 + 68] = 0
                        mem[_3645 + 100] = address(_3632)
                        mem[_3645 + 132] = 128
                        mem[_3645 + 164] = mem[_3645]
                        s = 0
                        while s < mem[_3645]:
                            mem[s + _3645 + 196] = mem[s + _3645 + 32]
                            _3381 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3645]) > mem[_3645]:
                            mem[mem[_3645] + _3645 + 196] = 0
                        require ext_code.size(address(_3459))
                        call address(_3459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3554, 0, address(_3632), 128, mem[_3645], mem[_3645 + 196 len ceil32(mem[_3645])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3381 = mem[96]
                        idx = idx + 1
                        s = _3459
                        s = _3632
                        s = _3554
                        continue 
                    require 0 < mem[_2610]
                    _3494 = mem[_2610 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2611 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3494))
                    call address(_3494).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3531 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3531] == bool(mem[_3531])
                    require ext_code.size(address(_3459))
                    staticcall address(_3459).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3591 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3591] == mem[_3591 + 12 len 20]
                    require idx - (_2611 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3698 = mem[(32 * idx - (_2611 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2610]
                    if mem[_2610 + 44 len 20] == mem[_3591 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3810 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3810 + 36] = 0
                            mem[_3810 + 68] = _3698
                            mem[_3810 + 100] = this.address
                            mem[_3810 + 132] = 128
                            mem[_3810 + 164] = mem[_3810]
                            s = 0
                            while s < mem[_3810]:
                                mem[s + _3810 + 196] = mem[s + _3810 + 32]
                                _3381 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3810]) > mem[_3810]:
                                mem[mem[_3810] + _3810 + 196] = 0
                            require ext_code.size(address(_3459))
                            call address(_3459).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3810]) + _3810 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3381 = mem[96]
                            idx = idx + 1
                            s = _3459
                            s = this.address
                            s = _3698
                            continue 
                        require idx + -(_2611 / 2) + 1 < mem[96]
                        _3811 = mem[(32 * idx + -(_2611 / 2) + 1) + 128]
                        _3824 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3824 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3824 + 36] = 0
                        mem[_3824 + 68] = _3698
                        mem[_3824 + 100] = address(_3811)
                        mem[_3824 + 132] = 128
                        mem[_3824 + 164] = mem[_3824]
                        s = 0
                        while s < mem[_3824]:
                            mem[s + _3824 + 196] = mem[s + _3824 + 32]
                            _3381 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3824]) > mem[_3824]:
                            mem[mem[_3824] + _3824 + 196] = 0
                        require ext_code.size(address(_3459))
                        call address(_3459).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3824]) + _3824 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3381 = mem[96]
                        idx = idx + 1
                        s = _3459
                        s = _3811
                        s = _3698
                        continue 
                    if idx + 2 >= mem[96]:
                        _3812 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3812 + 36] = _3698
                        mem[_3812 + 68] = 0
                        mem[_3812 + 100] = this.address
                        mem[_3812 + 132] = 128
                        mem[_3812 + 164] = mem[_3812]
                        s = 0
                        while s < mem[_3812]:
                            mem[s + _3812 + 196] = mem[s + _3812 + 32]
                            _3381 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3812]) > mem[_3812]:
                            mem[mem[_3812] + _3812 + 196] = 0
                        require ext_code.size(address(_3459))
                        call address(_3459).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3812]) + _3812 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3381 = mem[96]
                        idx = idx + 1
                        s = _3459
                        s = this.address
                        s = _3698
                        continue 
                    require idx + -(_2611 / 2) + 1 < mem[96]
                    _3813 = mem[(32 * idx + -(_2611 / 2) + 1) + 128]
                    _3825 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3825 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3825 + 36] = _3698
                    mem[_3825 + 68] = 0
                    mem[_3825 + 100] = address(_3813)
                    mem[_3825 + 132] = 128
                    mem[_3825 + 164] = mem[_3825]
                    s = 0
                    while s < mem[_3825]:
                        mem[s + _3825 + 196] = mem[s + _3825 + 32]
                        _3381 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3825]) > mem[_3825]:
                        mem[mem[_3825] + _3825 + 196] = 0
                    require ext_code.size(address(_3459))
                    call address(_3459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3698, 0, address(_3813), 128, mem[_3825], mem[_3825 + 196 len ceil32(mem[_3825])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3381 = mem[96]
                    idx = idx + 1
                    s = _3459
                    s = _3813
                    s = _3698
                    continue 
                require _2611 / 2 < mem[96]
                _3414 = mem[(16 * Mask(251, 1, _2611)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3414))
                staticcall address(_3414).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3458 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3458] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_d519be55(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2610 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2647 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2692 = mem[_2647]
                require mem[_2647] == mem[_2647 + 18 len 14]
                _2705 = mem[_2647 + 32]
                require mem[_2647 + 32] == mem[_2647 + 50 len 14]
                require mem[_2647 + 64] == mem[_2647 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2647 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 18 len 14])
                        idx = idx + 1
                        s = _2610
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2705) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2692))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2647 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 18 len 14])
                        idx = idx + 1
                        s = _2610
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2705) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2692))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2647 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2647 + 50 len 14])
                idx = idx + 1
                s = _2610
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2692) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2705))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2644 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2645 = mem[96]
            require mem[96] / 2 < mem[96]
            _2674 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2674))
            staticcall address(_2674).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3448 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3448 - 1:
                require idx < mem[96]
                require 0 < mem[_2644]
                mem[_2644 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2644]
                mem[_2644 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2645 / 2) < mem[96]
                _3538 = mem[(32 * idx - (_2645 / 2)) + 128]
                if idx != _2645 / 2:
                    require ext_code.size(mem[(32 * idx - (_2645 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2645 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3581 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3581] == mem[_3581 + 12 len 20]
                    require idx - (_2645 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3634 = mem[(32 * idx - (_2645 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2644]
                    if mem[_2644 + 44 len 20] == mem[_3581 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3694 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3694 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3694 + 36] = 0
                            mem[_3694 + 68] = _3634
                            mem[_3694 + 100] = this.address
                            mem[_3694 + 132] = 128
                            mem[_3694 + 164] = mem[_3694]
                            s = 0
                            while s < mem[_3694]:
                                mem[s + _3694 + 196] = mem[s + _3694 + 32]
                                _3448 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3694]) > mem[_3694]:
                                mem[mem[_3694] + _3694 + 196] = 0
                            require ext_code.size(address(_3538))
                            call address(_3538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3634, address(this.address), 128, mem[_3694], mem[_3694 + 196 len ceil32(mem[_3694])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3448 = mem[96]
                            idx = idx + 1
                            s = _3538
                            s = this.address
                            s = _3634
                            continue 
                        require idx + -(_2645 / 2) + 1 < mem[96]
                        _3695 = mem[(32 * idx + -(_2645 / 2) + 1) + 128]
                        _3724 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3724 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3724 + 36] = 0
                        mem[_3724 + 68] = _3634
                        mem[_3724 + 100] = address(_3695)
                        mem[_3724 + 132] = 128
                        mem[_3724 + 164] = mem[_3724]
                        s = 0
                        while s < mem[_3724]:
                            mem[s + _3724 + 196] = mem[s + _3724 + 32]
                            _3448 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3724]) > mem[_3724]:
                            mem[mem[_3724] + _3724 + 196] = 0
                        require ext_code.size(address(_3538))
                        call address(_3538).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3724]) + _3724 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3448 = mem[96]
                        idx = idx + 1
                        s = _3538
                        s = _3695
                        s = _3634
                        continue 
                    if idx + 2 >= mem[96]:
                        _3696 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3696 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3696 + 36] = _3634
                        mem[_3696 + 68] = 0
                        mem[_3696 + 100] = this.address
                        mem[_3696 + 132] = 128
                        mem[_3696 + 164] = mem[_3696]
                        s = 0
                        while s < mem[_3696]:
                            mem[s + _3696 + 196] = mem[s + _3696 + 32]
                            _3448 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3696]) > mem[_3696]:
                            mem[mem[_3696] + _3696 + 196] = 0
                        require ext_code.size(address(_3538))
                        call address(_3538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3634, 0, address(this.address), 128, mem[_3696], mem[_3696 + 196 len ceil32(mem[_3696])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3448 = mem[96]
                        idx = idx + 1
                        s = _3538
                        s = this.address
                        s = _3634
                        continue 
                    require idx + -(_2645 / 2) + 1 < mem[96]
                    _3697 = mem[(32 * idx + -(_2645 / 2) + 1) + 128]
                    _3725 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3725 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3725 + 36] = _3634
                    mem[_3725 + 68] = 0
                    mem[_3725 + 100] = address(_3697)
                    mem[_3725 + 132] = 128
                    mem[_3725 + 164] = mem[_3725]
                    s = 0
                    while s < mem[_3725]:
                        mem[s + _3725 + 196] = mem[s + _3725 + 32]
                        _3448 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3725]) > mem[_3725]:
                        mem[mem[_3725] + _3725 + 196] = 0
                    require ext_code.size(address(_3538))
                    call address(_3538).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3725]) + _3725 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3448 = mem[96]
                    idx = idx + 1
                    s = _3538
                    s = _3697
                    s = _3634
                    continue 
                require 0 < mem[_2644]
                _3568 = mem[_2644 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2645 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3568))
                call address(_3568).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3610 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3610] == bool(mem[_3610])
                require ext_code.size(address(_3538))
                staticcall address(_3538).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3666 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3666] == mem[_3666 + 12 len 20]
                require idx - (_2645 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3768 = mem[(32 * idx - (_2645 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2644]
                if mem[_2644 + 44 len 20] == mem[_3666 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3860 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3860 + 36] = 0
                        mem[_3860 + 68] = _3768
                        mem[_3860 + 100] = this.address
                        mem[_3860 + 132] = 128
                        mem[_3860 + 164] = mem[_3860]
                        s = 0
                        while s < mem[_3860]:
                            mem[s + _3860 + 196] = mem[s + _3860 + 32]
                            _3448 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3860]) > mem[_3860]:
                            mem[mem[_3860] + _3860 + 196] = 0
                        require ext_code.size(address(_3538))
                        call address(_3538).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3860]) + _3860 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3448 = mem[96]
                        idx = idx + 1
                        s = _3538
                        s = this.address
                        s = _3768
                        continue 
                    require idx + -(_2645 / 2) + 1 < mem[96]
                    _3861 = mem[(32 * idx + -(_2645 / 2) + 1) + 128]
                    _3904 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3904 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3904 + 36] = 0
                    mem[_3904 + 68] = _3768
                    mem[_3904 + 100] = address(_3861)
                    mem[_3904 + 132] = 128
                    mem[_3904 + 164] = mem[_3904]
                    s = 0
                    while s < mem[_3904]:
                        mem[s + _3904 + 196] = mem[s + _3904 + 32]
                        _3448 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3904]) > mem[_3904]:
                        mem[mem[_3904] + _3904 + 196] = 0
                    require ext_code.size(address(_3538))
                    call address(_3538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3768, address(_3861), 128, mem[_3904], mem[_3904 + 196 len ceil32(mem[_3904])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3448 = mem[96]
                    idx = idx + 1
                    s = _3538
                    s = _3861
                    s = _3768
                    continue 
                if idx + 2 >= mem[96]:
                    _3862 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3862 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3862 + 36] = _3768
                    mem[_3862 + 68] = 0
                    mem[_3862 + 100] = this.address
                    mem[_3862 + 132] = 128
                    mem[_3862 + 164] = mem[_3862]
                    s = 0
                    while s < mem[_3862]:
                        mem[s + _3862 + 196] = mem[s + _3862 + 32]
                        _3448 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3862]) > mem[_3862]:
                        mem[mem[_3862] + _3862 + 196] = 0
                    require ext_code.size(address(_3538))
                    call address(_3538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3768, 0, address(this.address), 128, mem[_3862], mem[_3862 + 196 len ceil32(mem[_3862])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3448 = mem[96]
                    idx = idx + 1
                    s = _3538
                    s = this.address
                    s = _3768
                    continue 
                require idx + -(_2645 / 2) + 1 < mem[96]
                _3863 = mem[(32 * idx + -(_2645 / 2) + 1) + 128]
                _3905 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3905 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3905 + 36] = _3768
                mem[_3905 + 68] = 0
                mem[_3905 + 100] = address(_3863)
                mem[_3905 + 132] = 128
                mem[_3905 + 164] = mem[_3905]
                s = 0
                while s < mem[_3905]:
                    mem[s + _3905 + 196] = mem[s + _3905 + 32]
                    _3448 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3905]) > mem[_3905]:
                    mem[mem[_3905] + _3905 + 196] = 0
                require ext_code.size(address(_3538))
                call address(_3538).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3905]) + _3905 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3448 = mem[96]
                idx = idx + 1
                s = _3538
                s = _3863
                s = _3768
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _3472 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _2645 / 2 < mem[96]
            _3496 = mem[(16 * Mask(251, 1, _2645)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3496))
            staticcall address(_3496).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3544 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3544] < ext_call.return_data[0] - cd[4] + _3472:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2615 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2651 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2693 = mem[_2651]
                require mem[_2651] == mem[_2651 + 18 len 14]
                _2707 = mem[_2651 + 32]
                require mem[_2651 + 32] == mem[_2651 + 50 len 14]
                require mem[_2651 + 64] == mem[_2651 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2651 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 18 len 14])
                        idx = idx + 1
                        s = _2615
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2707) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2693))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2651 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 18 len 14])
                        idx = idx + 1
                        s = _2615
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2707) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2693))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2651 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2651 + 50 len 14])
                idx = idx + 1
                s = _2615
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2693) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2707))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2648 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2649 = mem[96]
            require mem[96] / 2 < mem[96]
            _2677 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2677))
            staticcall address(_2677).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3449 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3449 - 1:
                require idx < mem[96]
                require 0 < mem[_2648]
                mem[_2648 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2648]
                mem[_2648 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2649 / 2) < mem[96]
                _3539 = mem[(32 * idx - (_2649 / 2)) + 128]
                if idx != _2649 / 2:
                    require ext_code.size(mem[(32 * idx - (_2649 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2649 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3583 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3583] == mem[_3583 + 12 len 20]
                    require idx - (_2649 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3636 = mem[(32 * idx - (_2649 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2648]
                    if mem[_2648 + 44 len 20] == mem[_3583 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3699 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3699 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3699 + 36] = 0
                            mem[_3699 + 68] = _3636
                            mem[_3699 + 100] = this.address
                            mem[_3699 + 132] = 128
                            mem[_3699 + 164] = mem[_3699]
                            s = 0
                            while s < mem[_3699]:
                                mem[s + _3699 + 196] = mem[s + _3699 + 32]
                                _3449 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3699]) > mem[_3699]:
                                mem[mem[_3699] + _3699 + 196] = 0
                            require ext_code.size(address(_3539))
                            call address(_3539).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3636, address(this.address), 128, mem[_3699], mem[_3699 + 196 len ceil32(mem[_3699])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3449 = mem[96]
                            idx = idx + 1
                            s = _3539
                            s = this.address
                            s = _3636
                            continue 
                        require idx + -(_2649 / 2) + 1 < mem[96]
                        _3700 = mem[(32 * idx + -(_2649 / 2) + 1) + 128]
                        _3726 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3726 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3726 + 36] = 0
                        mem[_3726 + 68] = _3636
                        mem[_3726 + 100] = address(_3700)
                        mem[_3726 + 132] = 128
                        mem[_3726 + 164] = mem[_3726]
                        s = 0
                        while s < mem[_3726]:
                            mem[s + _3726 + 196] = mem[s + _3726 + 32]
                            _3449 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3726]) > mem[_3726]:
                            mem[mem[_3726] + _3726 + 196] = 0
                        require ext_code.size(address(_3539))
                        call address(_3539).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3726]) + _3726 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3449 = mem[96]
                        idx = idx + 1
                        s = _3539
                        s = _3700
                        s = _3636
                        continue 
                    if idx + 2 >= mem[96]:
                        _3701 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3701 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3701 + 36] = _3636
                        mem[_3701 + 68] = 0
                        mem[_3701 + 100] = this.address
                        mem[_3701 + 132] = 128
                        mem[_3701 + 164] = mem[_3701]
                        s = 0
                        while s < mem[_3701]:
                            mem[s + _3701 + 196] = mem[s + _3701 + 32]
                            _3449 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3701]) > mem[_3701]:
                            mem[mem[_3701] + _3701 + 196] = 0
                        require ext_code.size(address(_3539))
                        call address(_3539).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3701]) + _3701 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3449 = mem[96]
                        idx = idx + 1
                        s = _3539
                        s = this.address
                        s = _3636
                        continue 
                    require idx + -(_2649 / 2) + 1 < mem[96]
                    _3702 = mem[(32 * idx + -(_2649 / 2) + 1) + 128]
                    _3727 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3727 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3727 + 36] = _3636
                    mem[_3727 + 68] = 0
                    mem[_3727 + 100] = address(_3702)
                    mem[_3727 + 132] = 128
                    mem[_3727 + 164] = mem[_3727]
                    s = 0
                    while s < mem[_3727]:
                        mem[s + _3727 + 196] = mem[s + _3727 + 32]
                        _3449 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3727]) > mem[_3727]:
                        mem[mem[_3727] + _3727 + 196] = 0
                    require ext_code.size(address(_3539))
                    call address(_3539).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3636, 0, address(_3702), 128, mem[_3727], mem[_3727 + 196 len ceil32(mem[_3727])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3449 = mem[96]
                    idx = idx + 1
                    s = _3539
                    s = _3702
                    s = _3636
                    continue 
                require 0 < mem[_2648]
                _3570 = mem[_2648 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2649 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3570))
                call address(_3570).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3611 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3611] == bool(mem[_3611])
                require ext_code.size(address(_3539))
                staticcall address(_3539).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3669] == mem[_3669 + 12 len 20]
                require idx - (_2649 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3772 = mem[(32 * idx - (_2649 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2648]
                if mem[_2648 + 44 len 20] == mem[_3669 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3868 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3868 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3868 + 36] = 0
                        mem[_3868 + 68] = _3772
                        mem[_3868 + 100] = this.address
                        mem[_3868 + 132] = 128
                        mem[_3868 + 164] = mem[_3868]
                        s = 0
                        while s < mem[_3868]:
                            mem[s + _3868 + 196] = mem[s + _3868 + 32]
                            _3449 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3868]) > mem[_3868]:
                            mem[mem[_3868] + _3868 + 196] = 0
                        require ext_code.size(address(_3539))
                        call address(_3539).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3772, address(this.address), 128, mem[_3868], mem[_3868 + 196 len ceil32(mem[_3868])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3449 = mem[96]
                        idx = idx + 1
                        s = _3539
                        s = this.address
                        s = _3772
                        continue 
                    require idx + -(_2649 / 2) + 1 < mem[96]
                    _3869 = mem[(32 * idx + -(_2649 / 2) + 1) + 128]
                    _3906 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3906 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3906 + 36] = 0
                    mem[_3906 + 68] = _3772
                    mem[_3906 + 100] = address(_3869)
                    mem[_3906 + 132] = 128
                    mem[_3906 + 164] = mem[_3906]
                    s = 0
                    while s < mem[_3906]:
                        mem[s + _3906 + 196] = mem[s + _3906 + 32]
                        _3449 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3906]) > mem[_3906]:
                        mem[mem[_3906] + _3906 + 196] = 0
                    require ext_code.size(address(_3539))
                    call address(_3539).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3906]) + _3906 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3449 = mem[96]
                    idx = idx + 1
                    s = _3539
                    s = _3869
                    s = _3772
                    continue 
                if idx + 2 >= mem[96]:
                    _3870 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3870 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3870 + 36] = _3772
                    mem[_3870 + 68] = 0
                    mem[_3870 + 100] = this.address
                    mem[_3870 + 132] = 128
                    mem[_3870 + 164] = mem[_3870]
                    s = 0
                    while s < mem[_3870]:
                        mem[s + _3870 + 196] = mem[s + _3870 + 32]
                        _3449 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3870]) > mem[_3870]:
                        mem[mem[_3870] + _3870 + 196] = 0
                    require ext_code.size(address(_3539))
                    call address(_3539).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3870]) + _3870 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3449 = mem[96]
                    idx = idx + 1
                    s = _3539
                    s = this.address
                    s = _3772
                    continue 
                require idx + -(_2649 / 2) + 1 < mem[96]
                _3871 = mem[(32 * idx + -(_2649 / 2) + 1) + 128]
                _3907 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3907 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3907 + 36] = _3772
                mem[_3907 + 68] = 0
                mem[_3907 + 100] = address(_3871)
                mem[_3907 + 132] = 128
                mem[_3907 + 164] = mem[_3907]
                s = 0
                while s < mem[_3907]:
                    mem[s + _3907 + 196] = mem[s + _3907 + 32]
                    _3449 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3907]) > mem[_3907]:
                    mem[mem[_3907] + _3907 + 196] = 0
                require ext_code.size(address(_3539))
                call address(_3539).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args _3772, 0, address(_3871), 128, mem[_3907], mem[_3907 + 196 len ceil32(mem[_3907])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3449 = mem[96]
                idx = idx + 1
                s = _3539
                s = _3871
                s = _3772
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _3476 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _2649 / 2 < mem[96]
            _3499 = mem[(16 * Mask(251, 1, _2649)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3499))
            staticcall address(_3499).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3548 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3548] < ext_call.return_data[0] - cd[4] + _3476:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2620 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2655 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2694 = mem[_2655]
                    require mem[_2655] == mem[_2655 + 18 len 14]
                    _2709 = mem[_2655 + 32]
                    require mem[_2655 + 32] == mem[_2655 + 50 len 14]
                    require mem[_2655 + 64] == mem[_2655 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2655 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 18 len 14])
                            idx = idx + 1
                            s = _2620
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2709) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2694))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2655 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 18 len 14])
                            idx = idx + 1
                            s = _2620
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2709) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2694))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2655 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2655 + 50 len 14])
                    idx = idx + 1
                    s = _2620
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2694) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2709))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2652 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2653 = mem[96]
                require mem[96] / 2 < mem[96]
                _2680 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2680))
                staticcall address(_2680).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3450 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3450 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2652]
                    mem[_2652 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2652]
                    mem[_2652 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2653 / 2) < mem[96]
                    _3540 = mem[(32 * idx - (_2653 / 2)) + 128]
                    if idx != _2653 / 2:
                        require ext_code.size(mem[(32 * idx - (_2653 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2653 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3585] == mem[_3585 + 12 len 20]
                        require idx - (_2653 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3638 = mem[(32 * idx - (_2653 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2652]
                        if mem[_2652 + 44 len 20] == mem[_3585 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3704 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3704 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3704 + 36] = 0
                                mem[_3704 + 68] = _3638
                                mem[_3704 + 100] = this.address
                                mem[_3704 + 132] = 128
                                mem[_3704 + 164] = mem[_3704]
                                s = 0
                                while s < mem[_3704]:
                                    mem[s + _3704 + 196] = mem[s + _3704 + 32]
                                    _3450 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3704]) > mem[_3704]:
                                    mem[mem[_3704] + _3704 + 196] = 0
                                require ext_code.size(address(_3540))
                                call address(_3540).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3704]) + _3704 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3450 = mem[96]
                                idx = idx + 1
                                s = _3540
                                s = this.address
                                s = _3638
                                continue 
                            require idx + -(_2653 / 2) + 1 < mem[96]
                            _3705 = mem[(32 * idx + -(_2653 / 2) + 1) + 128]
                            _3728 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3728 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3728 + 36] = 0
                            mem[_3728 + 68] = _3638
                            mem[_3728 + 100] = address(_3705)
                            mem[_3728 + 132] = 128
                            mem[_3728 + 164] = mem[_3728]
                            s = 0
                            while s < mem[_3728]:
                                mem[s + _3728 + 196] = mem[s + _3728 + 32]
                                _3450 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3728]) > mem[_3728]:
                                mem[mem[_3728] + _3728 + 196] = 0
                            require ext_code.size(address(_3540))
                            call address(_3540).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3728]) + _3728 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3450 = mem[96]
                            idx = idx + 1
                            s = _3540
                            s = _3705
                            s = _3638
                            continue 
                        if idx + 2 >= mem[96]:
                            _3706 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3706 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3706 + 36] = _3638
                            mem[_3706 + 68] = 0
                            mem[_3706 + 100] = this.address
                            mem[_3706 + 132] = 128
                            mem[_3706 + 164] = mem[_3706]
                            s = 0
                            while s < mem[_3706]:
                                mem[s + _3706 + 196] = mem[s + _3706 + 32]
                                _3450 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3706]) > mem[_3706]:
                                mem[mem[_3706] + _3706 + 196] = 0
                            require ext_code.size(address(_3540))
                            call address(_3540).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3638, 0, address(this.address), 128, mem[_3706], mem[_3706 + 196 len ceil32(mem[_3706])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3450 = mem[96]
                            idx = idx + 1
                            s = _3540
                            s = this.address
                            s = _3638
                            continue 
                        require idx + -(_2653 / 2) + 1 < mem[96]
                        _3707 = mem[(32 * idx + -(_2653 / 2) + 1) + 128]
                        _3729 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3729 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3729 + 36] = _3638
                        mem[_3729 + 68] = 0
                        mem[_3729 + 100] = address(_3707)
                        mem[_3729 + 132] = 128
                        mem[_3729 + 164] = mem[_3729]
                        s = 0
                        while s < mem[_3729]:
                            mem[s + _3729 + 196] = mem[s + _3729 + 32]
                            _3450 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3729]) > mem[_3729]:
                            mem[mem[_3729] + _3729 + 196] = 0
                        require ext_code.size(address(_3540))
                        call address(_3540).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3729]) + _3729 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3450 = mem[96]
                        idx = idx + 1
                        s = _3540
                        s = _3707
                        s = _3638
                        continue 
                    require 0 < mem[_2652]
                    _3572 = mem[_2652 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2653 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3572))
                    call address(_3572).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3612 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3612] == bool(mem[_3612])
                    require ext_code.size(address(_3540))
                    staticcall address(_3540).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3672 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3672] == mem[_3672 + 12 len 20]
                    require idx - (_2653 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3776 = mem[(32 * idx - (_2653 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2652]
                    if mem[_2652 + 44 len 20] == mem[_3672 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3876 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3876 + 36] = 0
                            mem[_3876 + 68] = _3776
                            mem[_3876 + 100] = this.address
                            mem[_3876 + 132] = 128
                            mem[_3876 + 164] = mem[_3876]
                            s = 0
                            while s < mem[_3876]:
                                mem[s + _3876 + 196] = mem[s + _3876 + 32]
                                _3450 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3876]) > mem[_3876]:
                                mem[mem[_3876] + _3876 + 196] = 0
                            require ext_code.size(address(_3540))
                            call address(_3540).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3776, address(this.address), 128, mem[_3876], mem[_3876 + 196 len ceil32(mem[_3876])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3450 = mem[96]
                            idx = idx + 1
                            s = _3540
                            s = this.address
                            s = _3776
                            continue 
                        require idx + -(_2653 / 2) + 1 < mem[96]
                        _3877 = mem[(32 * idx + -(_2653 / 2) + 1) + 128]
                        _3908 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3908 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3908 + 36] = 0
                        mem[_3908 + 68] = _3776
                        mem[_3908 + 100] = address(_3877)
                        mem[_3908 + 132] = 128
                        mem[_3908 + 164] = mem[_3908]
                        s = 0
                        while s < mem[_3908]:
                            mem[s + _3908 + 196] = mem[s + _3908 + 32]
                            _3450 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3908]) > mem[_3908]:
                            mem[mem[_3908] + _3908 + 196] = 0
                        require ext_code.size(address(_3540))
                        call address(_3540).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3908]) + _3908 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3450 = mem[96]
                        idx = idx + 1
                        s = _3540
                        s = _3877
                        s = _3776
                        continue 
                    if idx + 2 >= mem[96]:
                        _3878 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3878 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3878 + 36] = _3776
                        mem[_3878 + 68] = 0
                        mem[_3878 + 100] = this.address
                        mem[_3878 + 132] = 128
                        mem[_3878 + 164] = mem[_3878]
                        s = 0
                        while s < mem[_3878]:
                            mem[s + _3878 + 196] = mem[s + _3878 + 32]
                            _3450 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3878]) > mem[_3878]:
                            mem[mem[_3878] + _3878 + 196] = 0
                        require ext_code.size(address(_3540))
                        call address(_3540).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3776, 0, address(this.address), 128, mem[_3878], mem[_3878 + 196 len ceil32(mem[_3878])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3450 = mem[96]
                        idx = idx + 1
                        s = _3540
                        s = this.address
                        s = _3776
                        continue 
                    require idx + -(_2653 / 2) + 1 < mem[96]
                    _3879 = mem[(32 * idx + -(_2653 / 2) + 1) + 128]
                    _3909 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3909 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3909 + 36] = _3776
                    mem[_3909 + 68] = 0
                    mem[_3909 + 100] = address(_3879)
                    mem[_3909 + 132] = 128
                    mem[_3909 + 164] = mem[_3909]
                    s = 0
                    while s < mem[_3909]:
                        mem[s + _3909 + 196] = mem[s + _3909 + 32]
                        _3450 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3909]) > mem[_3909]:
                        mem[mem[_3909] + _3909 + 196] = 0
                    require ext_code.size(address(_3540))
                    call address(_3540).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3909]) + _3909 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3450 = mem[96]
                    idx = idx + 1
                    s = _3540
                    s = _3879
                    s = _3776
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3480 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require _2653 / 2 < mem[96]
                _3502 = mem[(16 * Mask(251, 1, _2653)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3502))
                staticcall address(_3502).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3552 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3552] < ext_call.return_data[0] - cd[4] + _3480:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2625 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2659 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2695 = mem[_2659]
                    require mem[_2659] == mem[_2659 + 18 len 14]
                    _2711 = mem[_2659 + 32]
                    require mem[_2659 + 32] == mem[_2659 + 50 len 14]
                    require mem[_2659 + 64] == mem[_2659 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2659 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 18 len 14])
                            idx = idx + 1
                            s = _2625
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2711) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2695))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2659 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 18 len 14])
                            idx = idx + 1
                            s = _2625
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2711) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2695))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2659 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2659 + 50 len 14])
                    idx = idx + 1
                    s = _2625
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2695) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2711))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2656 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2657 = mem[96]
                require mem[96] / 2 < mem[96]
                _2683 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2683))
                staticcall address(_2683).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3451 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3451 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2656]
                    mem[_2656 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2656]
                    mem[_2656 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2657 / 2) < mem[96]
                    _3541 = mem[(32 * idx - (_2657 / 2)) + 128]
                    if idx != _2657 / 2:
                        require ext_code.size(mem[(32 * idx - (_2657 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2657 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3587 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3587] == mem[_3587 + 12 len 20]
                        require idx - (_2657 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3640 = mem[(32 * idx - (_2657 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2656]
                        if mem[_2656 + 44 len 20] == mem[_3587 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3709 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3709 + 36] = 0
                                mem[_3709 + 68] = _3640
                                mem[_3709 + 100] = this.address
                                mem[_3709 + 132] = 128
                                mem[_3709 + 164] = mem[_3709]
                                s = 0
                                while s < mem[_3709]:
                                    mem[s + _3709 + 196] = mem[s + _3709 + 32]
                                    _3451 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3709]) > mem[_3709]:
                                    mem[mem[_3709] + _3709 + 196] = 0
                                require ext_code.size(address(_3541))
                                call address(_3541).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3640, address(this.address), 128, mem[_3709], mem[_3709 + 196 len ceil32(mem[_3709])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3451 = mem[96]
                                idx = idx + 1
                                s = _3541
                                s = this.address
                                s = _3640
                                continue 
                            require idx + -(_2657 / 2) + 1 < mem[96]
                            _3710 = mem[(32 * idx + -(_2657 / 2) + 1) + 128]
                            _3730 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3730 + 36] = 0
                            mem[_3730 + 68] = _3640
                            mem[_3730 + 100] = address(_3710)
                            mem[_3730 + 132] = 128
                            mem[_3730 + 164] = mem[_3730]
                            s = 0
                            while s < mem[_3730]:
                                mem[s + _3730 + 196] = mem[s + _3730 + 32]
                                _3451 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3730]) > mem[_3730]:
                                mem[mem[_3730] + _3730 + 196] = 0
                            require ext_code.size(address(_3541))
                            call address(_3541).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3730]) + _3730 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3451 = mem[96]
                            idx = idx + 1
                            s = _3541
                            s = _3710
                            s = _3640
                            continue 
                        if idx + 2 >= mem[96]:
                            _3711 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3711 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3711 + 36] = _3640
                            mem[_3711 + 68] = 0
                            mem[_3711 + 100] = this.address
                            mem[_3711 + 132] = 128
                            mem[_3711 + 164] = mem[_3711]
                            s = 0
                            while s < mem[_3711]:
                                mem[s + _3711 + 196] = mem[s + _3711 + 32]
                                _3451 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3711]) > mem[_3711]:
                                mem[mem[_3711] + _3711 + 196] = 0
                            require ext_code.size(address(_3541))
                            call address(_3541).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3640, 0, address(this.address), 128, mem[_3711], mem[_3711 + 196 len ceil32(mem[_3711])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3451 = mem[96]
                            idx = idx + 1
                            s = _3541
                            s = this.address
                            s = _3640
                            continue 
                        require idx + -(_2657 / 2) + 1 < mem[96]
                        _3712 = mem[(32 * idx + -(_2657 / 2) + 1) + 128]
                        _3731 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3731 + 36] = _3640
                        mem[_3731 + 68] = 0
                        mem[_3731 + 100] = address(_3712)
                        mem[_3731 + 132] = 128
                        mem[_3731 + 164] = mem[_3731]
                        s = 0
                        while s < mem[_3731]:
                            mem[s + _3731 + 196] = mem[s + _3731 + 32]
                            _3451 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3731]) > mem[_3731]:
                            mem[mem[_3731] + _3731 + 196] = 0
                        require ext_code.size(address(_3541))
                        call address(_3541).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3731]) + _3731 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3451 = mem[96]
                        idx = idx + 1
                        s = _3541
                        s = _3712
                        s = _3640
                        continue 
                    require 0 < mem[_2656]
                    _3574 = mem[_2656 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2657 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3574))
                    call address(_3574).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3613 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3613] == bool(mem[_3613])
                    require ext_code.size(address(_3541))
                    staticcall address(_3541).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3675 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3675] == mem[_3675 + 12 len 20]
                    require idx - (_2657 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3780 = mem[(32 * idx - (_2657 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2656]
                    if mem[_2656 + 44 len 20] == mem[_3675 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3884 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3884 + 36] = 0
                            mem[_3884 + 68] = _3780
                            mem[_3884 + 100] = this.address
                            mem[_3884 + 132] = 128
                            mem[_3884 + 164] = mem[_3884]
                            s = 0
                            while s < mem[_3884]:
                                mem[s + _3884 + 196] = mem[s + _3884 + 32]
                                _3451 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3884]) > mem[_3884]:
                                mem[mem[_3884] + _3884 + 196] = 0
                            require ext_code.size(address(_3541))
                            call address(_3541).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3884]) + _3884 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3451 = mem[96]
                            idx = idx + 1
                            s = _3541
                            s = this.address
                            s = _3780
                            continue 
                        require idx + -(_2657 / 2) + 1 < mem[96]
                        _3885 = mem[(32 * idx + -(_2657 / 2) + 1) + 128]
                        _3910 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3910 + 36] = 0
                        mem[_3910 + 68] = _3780
                        mem[_3910 + 100] = address(_3885)
                        mem[_3910 + 132] = 128
                        mem[_3910 + 164] = mem[_3910]
                        s = 0
                        while s < mem[_3910]:
                            mem[s + _3910 + 196] = mem[s + _3910 + 32]
                            _3451 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3910]) > mem[_3910]:
                            mem[mem[_3910] + _3910 + 196] = 0
                        require ext_code.size(address(_3541))
                        call address(_3541).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3910]) + _3910 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3451 = mem[96]
                        idx = idx + 1
                        s = _3541
                        s = _3885
                        s = _3780
                        continue 
                    if idx + 2 >= mem[96]:
                        _3886 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3886 + 36] = _3780
                        mem[_3886 + 68] = 0
                        mem[_3886 + 100] = this.address
                        mem[_3886 + 132] = 128
                        mem[_3886 + 164] = mem[_3886]
                        s = 0
                        while s < mem[_3886]:
                            mem[s + _3886 + 196] = mem[s + _3886 + 32]
                            _3451 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3886]) > mem[_3886]:
                            mem[mem[_3886] + _3886 + 196] = 0
                        require ext_code.size(address(_3541))
                        call address(_3541).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3780, 0, address(this.address), 128, mem[_3886], mem[_3886 + 196 len ceil32(mem[_3886])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3451 = mem[96]
                        idx = idx + 1
                        s = _3541
                        s = this.address
                        s = _3780
                        continue 
                    require idx + -(_2657 / 2) + 1 < mem[96]
                    _3887 = mem[(32 * idx + -(_2657 / 2) + 1) + 128]
                    _3911 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3911 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3911 + 36] = _3780
                    mem[_3911 + 68] = 0
                    mem[_3911 + 100] = address(_3887)
                    mem[_3911 + 132] = 128
                    mem[_3911 + 164] = mem[_3911]
                    s = 0
                    while s < mem[_3911]:
                        mem[s + _3911 + 196] = mem[s + _3911 + 32]
                        _3451 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3911]) > mem[_3911]:
                        mem[mem[_3911] + _3911 + 196] = 0
                    require ext_code.size(address(_3541))
                    call address(_3541).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3780, 0, address(_3887), 128, mem[_3911], mem[_3911 + 196 len ceil32(mem[_3911])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3451 = mem[96]
                    idx = idx + 1
                    s = _3541
                    s = _3887
                    s = _3780
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3484 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require _2657 / 2 < mem[96]
                _3505 = mem[(16 * Mask(251, 1, _2657)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3505))
                staticcall address(_3505).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3556 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3556] < ext_call.return_data[0] - cd[4] + _3484:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2630 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2696 = mem[_2663]
                    require mem[_2663] == mem[_2663 + 18 len 14]
                    _2713 = mem[_2663 + 32]
                    require mem[_2663 + 32] == mem[_2663 + 50 len 14]
                    require mem[_2663 + 64] == mem[_2663 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2663 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 18 len 14])
                            idx = idx + 1
                            s = _2630
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2713) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2696))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2663 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 18 len 14])
                            idx = idx + 1
                            s = _2630
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2713) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2696))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2663 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2663 + 50 len 14])
                    idx = idx + 1
                    s = _2630
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2696) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2713))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2660 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2661 = mem[96]
                require mem[96] / 2 < mem[96]
                _2686 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2686))
                staticcall address(_2686).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3452 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3452 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2660]
                    mem[_2660 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2660]
                    mem[_2660 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2661 / 2) < mem[96]
                    _3542 = mem[(32 * idx - (_2661 / 2)) + 128]
                    if idx != _2661 / 2:
                        require ext_code.size(mem[(32 * idx - (_2661 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2661 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3589 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3589] == mem[_3589 + 12 len 20]
                        require idx - (_2661 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3642 = mem[(32 * idx - (_2661 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2660]
                        if mem[_2660 + 44 len 20] == mem[_3589 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3714 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3714 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3714 + 36] = 0
                                mem[_3714 + 68] = _3642
                                mem[_3714 + 100] = this.address
                                mem[_3714 + 132] = 128
                                mem[_3714 + 164] = mem[_3714]
                                s = 0
                                while s < mem[_3714]:
                                    mem[s + _3714 + 196] = mem[s + _3714 + 32]
                                    _3452 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3714]) > mem[_3714]:
                                    mem[mem[_3714] + _3714 + 196] = 0
                                require ext_code.size(address(_3542))
                                call address(_3542).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3714]) + _3714 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3452 = mem[96]
                                idx = idx + 1
                                s = _3542
                                s = this.address
                                s = _3642
                                continue 
                            require idx + -(_2661 / 2) + 1 < mem[96]
                            _3715 = mem[(32 * idx + -(_2661 / 2) + 1) + 128]
                            _3732 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3732 + 36] = 0
                            mem[_3732 + 68] = _3642
                            mem[_3732 + 100] = address(_3715)
                            mem[_3732 + 132] = 128
                            mem[_3732 + 164] = mem[_3732]
                            s = 0
                            while s < mem[_3732]:
                                mem[s + _3732 + 196] = mem[s + _3732 + 32]
                                _3452 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3732]) > mem[_3732]:
                                mem[mem[_3732] + _3732 + 196] = 0
                            require ext_code.size(address(_3542))
                            call address(_3542).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3732]) + _3732 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3452 = mem[96]
                            idx = idx + 1
                            s = _3542
                            s = _3715
                            s = _3642
                            continue 
                        if idx + 2 >= mem[96]:
                            _3716 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3716 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3716 + 36] = _3642
                            mem[_3716 + 68] = 0
                            mem[_3716 + 100] = this.address
                            mem[_3716 + 132] = 128
                            mem[_3716 + 164] = mem[_3716]
                            s = 0
                            while s < mem[_3716]:
                                mem[s + _3716 + 196] = mem[s + _3716 + 32]
                                _3452 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3716]) > mem[_3716]:
                                mem[mem[_3716] + _3716 + 196] = 0
                            require ext_code.size(address(_3542))
                            call address(_3542).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3716]) + _3716 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3452 = mem[96]
                            idx = idx + 1
                            s = _3542
                            s = this.address
                            s = _3642
                            continue 
                        require idx + -(_2661 / 2) + 1 < mem[96]
                        _3717 = mem[(32 * idx + -(_2661 / 2) + 1) + 128]
                        _3733 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3733 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3733 + 36] = _3642
                        mem[_3733 + 68] = 0
                        mem[_3733 + 100] = address(_3717)
                        mem[_3733 + 132] = 128
                        mem[_3733 + 164] = mem[_3733]
                        s = 0
                        while s < mem[_3733]:
                            mem[s + _3733 + 196] = mem[s + _3733 + 32]
                            _3452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3733]) > mem[_3733]:
                            mem[mem[_3733] + _3733 + 196] = 0
                        require ext_code.size(address(_3542))
                        call address(_3542).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3642, 0, address(_3717), 128, mem[_3733], mem[_3733 + 196 len ceil32(mem[_3733])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3452 = mem[96]
                        idx = idx + 1
                        s = _3542
                        s = _3717
                        s = _3642
                        continue 
                    require 0 < mem[_2660]
                    _3576 = mem[_2660 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2661 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3576))
                    call address(_3576).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3614 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3614] == bool(mem[_3614])
                    require ext_code.size(address(_3542))
                    staticcall address(_3542).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3678 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3678] == mem[_3678 + 12 len 20]
                    require idx - (_2661 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3784 = mem[(32 * idx - (_2661 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2660]
                    if mem[_2660 + 44 len 20] == mem[_3678 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3892 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3892 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3892 + 36] = 0
                            mem[_3892 + 68] = _3784
                            mem[_3892 + 100] = this.address
                            mem[_3892 + 132] = 128
                            mem[_3892 + 164] = mem[_3892]
                            s = 0
                            while s < mem[_3892]:
                                mem[s + _3892 + 196] = mem[s + _3892 + 32]
                                _3452 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3892]) > mem[_3892]:
                                mem[mem[_3892] + _3892 + 196] = 0
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3784, address(this.address), 128, mem[_3892], mem[_3892 + 196 len ceil32(mem[_3892])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3452 = mem[96]
                            idx = idx + 1
                            s = _3542
                            s = this.address
                            s = _3784
                            continue 
                        require idx + -(_2661 / 2) + 1 < mem[96]
                        _3893 = mem[(32 * idx + -(_2661 / 2) + 1) + 128]
                        _3912 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3912 + 36] = 0
                        mem[_3912 + 68] = _3784
                        mem[_3912 + 100] = address(_3893)
                        mem[_3912 + 132] = 128
                        mem[_3912 + 164] = mem[_3912]
                        s = 0
                        while s < mem[_3912]:
                            mem[s + _3912 + 196] = mem[s + _3912 + 32]
                            _3452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3912]) > mem[_3912]:
                            mem[mem[_3912] + _3912 + 196] = 0
                        require ext_code.size(address(_3542))
                        call address(_3542).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3784, address(_3893), 128, mem[_3912], mem[_3912 + 196 len ceil32(mem[_3912])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3452 = mem[96]
                        idx = idx + 1
                        s = _3542
                        s = _3893
                        s = _3784
                        continue 
                    if idx + 2 >= mem[96]:
                        _3894 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3894 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3894 + 36] = _3784
                        mem[_3894 + 68] = 0
                        mem[_3894 + 100] = this.address
                        mem[_3894 + 132] = 128
                        mem[_3894 + 164] = mem[_3894]
                        s = 0
                        while s < mem[_3894]:
                            mem[s + _3894 + 196] = mem[s + _3894 + 32]
                            _3452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3894]) > mem[_3894]:
                            mem[mem[_3894] + _3894 + 196] = 0
                        require ext_code.size(address(_3542))
                        call address(_3542).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3784, 0, address(this.address), 128, mem[_3894], mem[_3894 + 196 len ceil32(mem[_3894])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3452 = mem[96]
                        idx = idx + 1
                        s = _3542
                        s = this.address
                        s = _3784
                        continue 
                    require idx + -(_2661 / 2) + 1 < mem[96]
                    _3895 = mem[(32 * idx + -(_2661 / 2) + 1) + 128]
                    _3913 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3913 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3913 + 36] = _3784
                    mem[_3913 + 68] = 0
                    mem[_3913 + 100] = address(_3895)
                    mem[_3913 + 132] = 128
                    mem[_3913 + 164] = mem[_3913]
                    s = 0
                    while s < mem[_3913]:
                        mem[s + _3913 + 196] = mem[s + _3913 + 32]
                        _3452 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3913]) > mem[_3913]:
                        mem[mem[_3913] + _3913 + 196] = 0
                    require ext_code.size(address(_3542))
                    call address(_3542).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3913]) + _3913 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3452 = mem[96]
                    idx = idx + 1
                    s = _3542
                    s = _3895
                    s = _3784
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3488 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require _2661 / 2 < mem[96]
                _3508 = mem[(16 * Mask(251, 1, _2661)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3508))
                staticcall address(_3508).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3560 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3560] < ext_call.return_data[0] - cd[4] + _3488:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    _2635 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2697 = mem[_2667]
                    require mem[_2667] == mem[_2667 + 18 len 14]
                    _2715 = mem[_2667 + 32]
                    require mem[_2667 + 32] == mem[_2667 + 50 len 14]
                    require mem[_2667 + 64] == mem[_2667 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2667 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 18 len 14])
                            idx = idx + 1
                            s = _2635
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2715) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2697))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2667 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 18 len 14])
                            idx = idx + 1
                            s = _2635
                            s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2715) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2697))
                            continue 
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2667 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2667 + 50 len 14])
                    idx = idx + 1
                    s = _2635
                    s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2697) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2715))
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2664 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2665 = mem[96]
                require mem[96] / 2 < mem[96]
                _2689 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2689))
                staticcall address(_2689).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3453 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3453 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2664]
                    mem[_2664 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2664]
                    mem[_2664 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2665 / 2) < mem[96]
                    _3543 = mem[(32 * idx - (_2665 / 2)) + 128]
                    if idx != _2665 / 2:
                        require ext_code.size(mem[(32 * idx - (_2665 / 2)) + 140 len 20])
                        staticcall mem[(32 * idx - (_2665 / 2)) + 140 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3591 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3591] == mem[_3591 + 12 len 20]
                        require idx - (_2665 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _3644 = mem[(32 * idx - (_2665 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        require 0 < mem[_2664]
                        if mem[_2664 + 44 len 20] == mem[_3591 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3719 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3719 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3719 + 36] = 0
                                mem[_3719 + 68] = _3644
                                mem[_3719 + 100] = this.address
                                mem[_3719 + 132] = 128
                                mem[_3719 + 164] = mem[_3719]
                                s = 0
                                while s < mem[_3719]:
                                    mem[s + _3719 + 196] = mem[s + _3719 + 32]
                                    _3453 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3719]) > mem[_3719]:
                                    mem[mem[_3719] + _3719 + 196] = 0
                                require ext_code.size(address(_3543))
                                call address(_3543).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3719]) + _3719 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3453 = mem[96]
                                idx = idx + 1
                                s = _3543
                                s = this.address
                                s = _3644
                                continue 
                            require idx + -(_2665 / 2) + 1 < mem[96]
                            _3720 = mem[(32 * idx + -(_2665 / 2) + 1) + 128]
                            _3734 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3734 + 36] = 0
                            mem[_3734 + 68] = _3644
                            mem[_3734 + 100] = address(_3720)
                            mem[_3734 + 132] = 128
                            mem[_3734 + 164] = mem[_3734]
                            s = 0
                            while s < mem[_3734]:
                                mem[s + _3734 + 196] = mem[s + _3734 + 32]
                                _3453 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3734]) > mem[_3734]:
                                mem[mem[_3734] + _3734 + 196] = 0
                            require ext_code.size(address(_3543))
                            call address(_3543).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3734]) + _3734 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3453 = mem[96]
                            idx = idx + 1
                            s = _3543
                            s = _3720
                            s = _3644
                            continue 
                        if idx + 2 >= mem[96]:
                            _3721 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3721 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3721 + 36] = _3644
                            mem[_3721 + 68] = 0
                            mem[_3721 + 100] = this.address
                            mem[_3721 + 132] = 128
                            mem[_3721 + 164] = mem[_3721]
                            s = 0
                            while s < mem[_3721]:
                                mem[s + _3721 + 196] = mem[s + _3721 + 32]
                                _3453 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3721]) > mem[_3721]:
                                mem[mem[_3721] + _3721 + 196] = 0
                            require ext_code.size(address(_3543))
                            call address(_3543).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3644, 0, address(this.address), 128, mem[_3721], mem[_3721 + 196 len ceil32(mem[_3721])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3453 = mem[96]
                            idx = idx + 1
                            s = _3543
                            s = this.address
                            s = _3644
                            continue 
                        require idx + -(_2665 / 2) + 1 < mem[96]
                        _3722 = mem[(32 * idx + -(_2665 / 2) + 1) + 128]
                        _3735 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3735 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3735 + 36] = _3644
                        mem[_3735 + 68] = 0
                        mem[_3735 + 100] = address(_3722)
                        mem[_3735 + 132] = 128
                        mem[_3735 + 164] = mem[_3735]
                        s = 0
                        while s < mem[_3735]:
                            mem[s + _3735 + 196] = mem[s + _3735 + 32]
                            _3453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3735]) > mem[_3735]:
                            mem[mem[_3735] + _3735 + 196] = 0
                        require ext_code.size(address(_3543))
                        call address(_3543).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3735]) + _3735 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3453 = mem[96]
                        idx = idx + 1
                        s = _3543
                        s = _3722
                        s = _3644
                        continue 
                    require 0 < mem[_2664]
                    _3578 = mem[_2664 + 32]
                    mem[mem[64] + 4] = mem[(32 * idx - (_2665 / 2)) + 140 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3578))
                    call address(_3578).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3615 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3615] == bool(mem[_3615])
                    require ext_code.size(address(_3543))
                    staticcall address(_3543).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3681] == mem[_3681 + 12 len 20]
                    require idx - (_2665 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3788 = mem[(32 * idx - (_2665 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2664]
                    if mem[_2664 + 44 len 20] == mem[_3681 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3900 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3900 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3900 + 36] = 0
                            mem[_3900 + 68] = _3788
                            mem[_3900 + 100] = this.address
                            mem[_3900 + 132] = 128
                            mem[_3900 + 164] = mem[_3900]
                            s = 0
                            while s < mem[_3900]:
                                mem[s + _3900 + 196] = mem[s + _3900 + 32]
                                _3453 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3900]) > mem[_3900]:
                                mem[mem[_3900] + _3900 + 196] = 0
                            require ext_code.size(address(_3543))
                            call address(_3543).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3788, address(this.address), 128, mem[_3900], mem[_3900 + 196 len ceil32(mem[_3900])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3453 = mem[96]
                            idx = idx + 1
                            s = _3543
                            s = this.address
                            s = _3788
                            continue 
                        require idx + -(_2665 / 2) + 1 < mem[96]
                        _3901 = mem[(32 * idx + -(_2665 / 2) + 1) + 128]
                        _3914 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3914 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3914 + 36] = 0
                        mem[_3914 + 68] = _3788
                        mem[_3914 + 100] = address(_3901)
                        mem[_3914 + 132] = 128
                        mem[_3914 + 164] = mem[_3914]
                        s = 0
                        while s < mem[_3914]:
                            mem[s + _3914 + 196] = mem[s + _3914 + 32]
                            _3453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3914]) > mem[_3914]:
                            mem[mem[_3914] + _3914 + 196] = 0
                        require ext_code.size(address(_3543))
                        call address(_3543).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3914]) + _3914 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3453 = mem[96]
                        idx = idx + 1
                        s = _3543
                        s = _3901
                        s = _3788
                        continue 
                    if idx + 2 >= mem[96]:
                        _3902 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3902 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3902 + 36] = _3788
                        mem[_3902 + 68] = 0
                        mem[_3902 + 100] = this.address
                        mem[_3902 + 132] = 128
                        mem[_3902 + 164] = mem[_3902]
                        s = 0
                        while s < mem[_3902]:
                            mem[s + _3902 + 196] = mem[s + _3902 + 32]
                            _3453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3902]) > mem[_3902]:
                            mem[mem[_3902] + _3902 + 196] = 0
                        require ext_code.size(address(_3543))
                        call address(_3543).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3788, 0, address(this.address), 128, mem[_3902], mem[_3902 + 196 len ceil32(mem[_3902])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3453 = mem[96]
                        idx = idx + 1
                        s = _3543
                        s = this.address
                        s = _3788
                        continue 
                    require idx + -(_2665 / 2) + 1 < mem[96]
                    _3903 = mem[(32 * idx + -(_2665 / 2) + 1) + 128]
                    _3915 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3915 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3915 + 36] = _3788
                    mem[_3915 + 68] = 0
                    mem[_3915 + 100] = address(_3903)
                    mem[_3915 + 132] = 128
                    mem[_3915 + 164] = mem[_3915]
                    s = 0
                    while s < mem[_3915]:
                        mem[s + _3915 + 196] = mem[s + _3915 + 32]
                        _3453 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3915]) > mem[_3915]:
                        mem[mem[_3915] + _3915 + 196] = 0
                    require ext_code.size(address(_3543))
                    call address(_3543).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3915]) + _3915 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3453 = mem[96]
                    idx = idx + 1
                    s = _3543
                    s = _3903
                    s = _3788
                    continue 
                require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3492 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require _2665 / 2 < mem[96]
                _3511 = mem[(16 * Mask(251, 1, _2665)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3511))
                staticcall address(_3511).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3564 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3564] < ext_call.return_data[0] - cd[4] + _3492:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_03919452(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2513 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2543 = mem[_2513]
                require mem[_2513] == mem[_2513 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2595 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2595)
                require ext_code.size(address(_2543))
                staticcall address(_2543).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2595)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2640 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2675 = mem[_2640]
                require mem[_2640] == mem[_2640 + 12 len 20]
                require ext_code.size(mem[_2640 + 12 len 20])
                staticcall mem[_2640 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2752 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2774 = mem[_2752]
                require mem[_2752] == mem[_2752 + 18 len 14]
                _2800 = mem[_2752 + 32]
                require mem[_2752 + 32] == mem[_2752 + 50 len 14]
                require mem[_2752 + 64] == mem[_2752 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 50 len 14] / (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        idx = idx + 1
                        s = _2675
                        s = 997 * s * Mask(112, 0, _2800) / (997 * s) + (1000 * Mask(112, 0, _2774))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 50 len 14] / (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        idx = idx + 1
                        s = _2675
                        s = 997 * s * Mask(112, 0, _2800) / (997 * s) + (1000 * Mask(112, 0, _2774))
                        continue 
                require (997 * s) + (1000 * mem[_2752 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 18 len 14] / (997 * s) + (1000 * mem[_2752 + 50 len 14])
                idx = idx + 1
                s = _2675
                s = 997 * s * Mask(112, 0, _2774) / (997 * s) + (1000 * Mask(112, 0, _2800))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2510 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2511 = mem[96]
            require mem[96] / 2 < mem[96]
            _2540 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2540))
            staticcall address(_2540).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3680 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3680 - 1:
                require idx < mem[96]
                require 0 < mem[_2510]
                mem[_2510 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2510]
                mem[_2510 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2511 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2511 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2511 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3777 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3789 = mem[_3777]
                require mem[_3777] == mem[_3777 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3824 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3824)
                require ext_code.size(address(_3789))
                staticcall address(_3789).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3824)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3842 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3848 = mem[_3842]
                require mem[_3842] == mem[_3842 + 12 len 20]
                if idx != _2511 / 2:
                    require ext_code.size(mem[_3842 + 12 len 20])
                    staticcall mem[_3842 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3884 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3884] == mem[_3884 + 12 len 20]
                    require idx - (_2511 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _3920 = mem[(32 * idx - (_2511 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2510]
                    if mem[_2510 + 44 len 20] == mem[_3884 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3980 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3980 + 36] = 0
                            mem[_3980 + 68] = _3920
                            mem[_3980 + 100] = this.address
                            mem[_3980 + 132] = 128
                            mem[_3980 + 164] = mem[_3980]
                            s = 0
                            while s < mem[_3980]:
                                mem[s + _3980 + 196] = mem[s + _3980 + 32]
                                _3680 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3980]) > mem[_3980]:
                                mem[mem[_3980] + _3980 + 196] = 0
                            require ext_code.size(address(_3848))
                            call address(_3848).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3980]) + _3980 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3680 = mem[96]
                            idx = idx + 1
                            s = _3848
                            s = this.address
                            s = _3920
                            continue 
                        require idx + -(_2511 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4058 = mem[_4035]
                        require mem[_4035] == mem[_4035 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4190 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4190)
                        require ext_code.size(address(_4058))
                        staticcall address(_4058).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4190)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4298 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4334 = mem[_4298]
                        require mem[_4298] == mem[_4298 + 12 len 20]
                        _4430 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4430 + 36] = 0
                        mem[_4430 + 68] = _3920
                        mem[_4430 + 100] = address(_4334)
                        mem[_4430 + 132] = 128
                        mem[_4430 + 164] = mem[_4430]
                        s = 0
                        while s < mem[_4430]:
                            mem[s + _4430 + 196] = mem[s + _4430 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4430]) > mem[_4430]:
                            mem[mem[_4430] + _4430 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3920, address(_4334), 128, mem[_4430], mem[_4430 + 196 len ceil32(mem[_4430])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = _4334
                        s = _3920
                        continue 
                    if idx + 2 >= mem[96]:
                        _3984 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3984 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3984 + 36] = _3920
                        mem[_3984 + 68] = 0
                        mem[_3984 + 100] = this.address
                        mem[_3984 + 132] = 128
                        mem[_3984 + 164] = mem[_3984]
                        s = 0
                        while s < mem[_3984]:
                            mem[s + _3984 + 196] = mem[s + _3984 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3984]) > mem[_3984]:
                            mem[mem[_3984] + _3984 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3920, 0, address(this.address), 128, mem[_3984], mem[_3984 + 196 len ceil32(mem[_3984])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = this.address
                        s = _3920
                        continue 
                    require idx + -(_2511 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4059 = mem[_4037]
                    require mem[_4037] == mem[_4037 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4192 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4192)
                    require ext_code.size(address(_4059))
                    staticcall address(_4059).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4192)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4335 = mem[_4299]
                    require mem[_4299] == mem[_4299 + 12 len 20]
                    _4431 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4431 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4431 + 36] = _3920
                    mem[_4431 + 68] = 0
                    mem[_4431 + 100] = address(_4335)
                    mem[_4431 + 132] = 128
                    mem[_4431 + 164] = mem[_4431]
                    s = 0
                    while s < mem[_4431]:
                        mem[s + _4431 + 196] = mem[s + _4431 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4431]) > mem[_4431]:
                        mem[mem[_4431] + _4431 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4431]) + _4431 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = _4335
                    s = _3920
                    continue 
                require 0 < mem[_2510]
                _3872 = mem[_2510 + 32]
                mem[mem[64] + 4] = mem[_3842 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3872))
                call address(_3872).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3902 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3902] == bool(mem[_3902])
                require ext_code.size(address(_3848))
                staticcall address(_3848).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3952 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3952] == mem[_3952 + 12 len 20]
                require idx - (_2511 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _4078 = mem[(32 * idx - (_2511 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_2510]
                if mem[_2510 + 44 len 20] == mem[_3952 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _4194 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4194 + 36] = 0
                        mem[_4194 + 68] = _4078
                        mem[_4194 + 100] = this.address
                        mem[_4194 + 132] = 128
                        mem[_4194 + 164] = mem[_4194]
                        s = 0
                        while s < mem[_4194]:
                            mem[s + _4194 + 196] = mem[s + _4194 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4194]) > mem[_4194]:
                            mem[mem[_4194] + _4194 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4078, address(this.address), 128, mem[_4194], mem[_4194 + 196 len ceil32(mem[_4194])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = this.address
                        s = _4078
                        continue 
                    require idx + -(_2511 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4265 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4300 = mem[_4265]
                    require mem[_4265] == mem[_4265 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4406 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4406)
                    require ext_code.size(address(_4300))
                    staticcall address(_4300).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4406)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4480 = mem[_4466]
                    require mem[_4466] == mem[_4466 + 12 len 20]
                    _4526 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4526 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4526 + 36] = 0
                    mem[_4526 + 68] = _4078
                    mem[_4526 + 100] = address(_4480)
                    mem[_4526 + 132] = 128
                    mem[_4526 + 164] = mem[_4526]
                    s = 0
                    while s < mem[_4526]:
                        mem[s + _4526 + 196] = mem[s + _4526 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4526]) > mem[_4526]:
                        mem[mem[_4526] + _4526 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4526]) + _4526 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = _4480
                    s = _4078
                    continue 
                if idx + 2 >= mem[96]:
                    _4198 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4198 + 36] = _4078
                    mem[_4198 + 68] = 0
                    mem[_4198 + 100] = this.address
                    mem[_4198 + 132] = 128
                    mem[_4198 + 164] = mem[_4198]
                    s = 0
                    while s < mem[_4198]:
                        mem[s + _4198 + 196] = mem[s + _4198 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4198]) > mem[_4198]:
                        mem[mem[_4198] + _4198 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4198]) + _4198 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = this.address
                    s = _4078
                    continue 
                require idx + -(_2511 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4267 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4301 = mem[_4267]
                require mem[_4267] == mem[_4267 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _4408 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_4408)
                require ext_code.size(address(_4301))
                staticcall address(_4301).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_4408)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4467 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4481 = mem[_4467]
                require mem[_4467] == mem[_4467 + 12 len 20]
                _4527 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_4527 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_4527 + 36] = _4078
                mem[_4527 + 68] = 0
                mem[_4527 + 100] = address(_4481)
                mem[_4527 + 132] = 128
                mem[_4527 + 164] = mem[_4527]
                s = 0
                while s < mem[_4527]:
                    mem[s + _4527 + 196] = mem[s + _4527 + 32]
                    _3680 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_4527]) > mem[_4527]:
                    mem[mem[_4527] + _4527 + 196] = 0
                require ext_code.size(address(_3848))
                call address(_3848).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_4527]) + _4527 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3680 = mem[96]
                idx = idx + 1
                s = _3848
                s = _4481
                s = _4078
                continue 
            require _2511 / 2 < mem[96]
            _3698 = mem[(16 * Mask(251, 1, _2511)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3698))
            staticcall address(_3698).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3752 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3752] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2517 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2547 = mem[_2517]
                require mem[_2517] == mem[_2517 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2598 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2598)
                require ext_code.size(address(_2547))
                staticcall address(_2547).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2598)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2645 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2679 = mem[_2645]
                require mem[_2645] == mem[_2645 + 12 len 20]
                require ext_code.size(mem[_2645 + 12 len 20])
                staticcall mem[_2645 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2755 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2775 = mem[_2755]
                require mem[_2755] == mem[_2755 + 18 len 14]
                _2803 = mem[_2755 + 32]
                require mem[_2755 + 32] == mem[_2755 + 50 len 14]
                require mem[_2755 + 64] == mem[_2755 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 50 len 14] / (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        idx = idx + 1
                        s = _2679
                        s = 997 * s * Mask(112, 0, _2803) / (997 * s) + (1000 * Mask(112, 0, _2775))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 50 len 14] / (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        idx = idx + 1
                        s = _2679
                        s = 997 * s * Mask(112, 0, _2803) / (997 * s) + (1000 * Mask(112, 0, _2775))
                        continue 
                require (997 * s) + (1000 * mem[_2755 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 18 len 14] / (997 * s) + (1000 * mem[_2755 + 50 len 14])
                idx = idx + 1
                s = _2679
                s = 997 * s * Mask(112, 0, _2775) / (997 * s) + (1000 * Mask(112, 0, _2803))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2514 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2515 = mem[96]
            require mem[96] / 2 < mem[96]
            _2544 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2544))
            staticcall address(_2544).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3681 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3681 - 1:
                require idx < mem[96]
                require 0 < mem[_2514]
                mem[_2514 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2514]
                mem[_2514 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2515 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2515 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2515 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3779 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3791 = mem[_3779]
                require mem[_3779] == mem[_3779 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3826 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3826)
                require ext_code.size(address(_3791))
                staticcall address(_3791).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3826)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3843 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3849 = mem[_3843]
                require mem[_3843] == mem[_3843 + 12 len 20]
                if idx != _2515 / 2:
                    require ext_code.size(mem[_3843 + 12 len 20])
                    staticcall mem[_3843 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3885] == mem[_3885 + 12 len 20]
                    require idx - (_2515 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _3922 = mem[(32 * idx - (_2515 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2514]
                    if mem[_2514 + 44 len 20] == mem[_3885 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3989 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3989 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3989 + 36] = 0
                            mem[_3989 + 68] = _3922
                            mem[_3989 + 100] = this.address
                            mem[_3989 + 132] = 128
                            mem[_3989 + 164] = mem[_3989]
                            s = 0
                            while s < mem[_3989]:
                                mem[s + _3989 + 196] = mem[s + _3989 + 32]
                                _3681 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3989]) > mem[_3989]:
                                mem[mem[_3989] + _3989 + 196] = 0
                            require ext_code.size(address(_3849))
                            call address(_3849).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3989]) + _3989 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3681 = mem[96]
                            idx = idx + 1
                            s = _3849
                            s = this.address
                            s = _3922
                            continue 
                        require idx + -(_2515 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4039 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4061 = mem[_4039]
                        require mem[_4039] == mem[_4039 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4202 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4202)
                        require ext_code.size(address(_4061))
                        staticcall address(_4061).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4202)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4336 = mem[_4302]
                        require mem[_4302] == mem[_4302 + 12 len 20]
                        _4432 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4432 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4432 + 36] = 0
                        mem[_4432 + 68] = _3922
                        mem[_4432 + 100] = address(_4336)
                        mem[_4432 + 132] = 128
                        mem[_4432 + 164] = mem[_4432]
                        s = 0
                        while s < mem[_4432]:
                            mem[s + _4432 + 196] = mem[s + _4432 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4432]) > mem[_4432]:
                            mem[mem[_4432] + _4432 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4432]) + _4432 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = _4336
                        s = _3922
                        continue 
                    if idx + 2 >= mem[96]:
                        _3993 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3993 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3993 + 36] = _3922
                        mem[_3993 + 68] = 0
                        mem[_3993 + 100] = this.address
                        mem[_3993 + 132] = 128
                        mem[_3993 + 164] = mem[_3993]
                        s = 0
                        while s < mem[_3993]:
                            mem[s + _3993 + 196] = mem[s + _3993 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3993]) > mem[_3993]:
                            mem[mem[_3993] + _3993 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3922, 0, address(this.address), 128, mem[_3993], mem[_3993 + 196 len ceil32(mem[_3993])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = this.address
                        s = _3922
                        continue 
                    require idx + -(_2515 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4041 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4062 = mem[_4041]
                    require mem[_4041] == mem[_4041 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4204 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4204)
                    require ext_code.size(address(_4062))
                    staticcall address(_4062).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4204)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4337 = mem[_4303]
                    require mem[_4303] == mem[_4303 + 12 len 20]
                    _4433 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4433 + 36] = _3922
                    mem[_4433 + 68] = 0
                    mem[_4433 + 100] = address(_4337)
                    mem[_4433 + 132] = 128
                    mem[_4433 + 164] = mem[_4433]
                    s = 0
                    while s < mem[_4433]:
                        mem[s + _4433 + 196] = mem[s + _4433 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4433]) > mem[_4433]:
                        mem[mem[_4433] + _4433 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3922, 0, address(_4337), 128, mem[_4433], mem[_4433 + 196 len ceil32(mem[_4433])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = _4337
                    s = _3922
                    continue 
                require 0 < mem[_2514]
                _3874 = mem[_2514 + 32]
                mem[mem[64] + 4] = mem[_3843 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3874))
                call address(_3874).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3903 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3903] == bool(mem[_3903])
                require ext_code.size(address(_3849))
                staticcall address(_3849).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3955 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3955] == mem[_3955 + 12 len 20]
                require idx - (_2515 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _4082 = mem[(32 * idx - (_2515 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_2514]
                if mem[_2514 + 44 len 20] == mem[_3955 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _4206 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4206 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4206 + 36] = 0
                        mem[_4206 + 68] = _4082
                        mem[_4206 + 100] = this.address
                        mem[_4206 + 132] = 128
                        mem[_4206 + 164] = mem[_4206]
                        s = 0
                        while s < mem[_4206]:
                            mem[s + _4206 + 196] = mem[s + _4206 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4206]) > mem[_4206]:
                            mem[mem[_4206] + _4206 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4082, address(this.address), 128, mem[_4206], mem[_4206 + 196 len ceil32(mem[_4206])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = this.address
                        s = _4082
                        continue 
                    require idx + -(_2515 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4304 = mem[_4271]
                    require mem[_4271] == mem[_4271 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4410 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4410)
                    require ext_code.size(address(_4304))
                    staticcall address(_4304).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4410)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4468 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4484 = mem[_4468]
                    require mem[_4468] == mem[_4468 + 12 len 20]
                    _4528 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4528 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4528 + 36] = 0
                    mem[_4528 + 68] = _4082
                    mem[_4528 + 100] = address(_4484)
                    mem[_4528 + 132] = 128
                    mem[_4528 + 164] = mem[_4528]
                    s = 0
                    while s < mem[_4528]:
                        mem[s + _4528 + 196] = mem[s + _4528 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4528]) > mem[_4528]:
                        mem[mem[_4528] + _4528 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4528]) + _4528 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = _4484
                    s = _4082
                    continue 
                if idx + 2 >= mem[96]:
                    _4210 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4210 + 36] = _4082
                    mem[_4210 + 68] = 0
                    mem[_4210 + 100] = this.address
                    mem[_4210 + 132] = 128
                    mem[_4210 + 164] = mem[_4210]
                    s = 0
                    while s < mem[_4210]:
                        mem[s + _4210 + 196] = mem[s + _4210 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4210]) > mem[_4210]:
                        mem[mem[_4210] + _4210 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4210]) + _4210 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = this.address
                    s = _4082
                    continue 
                require idx + -(_2515 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4273 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4305 = mem[_4273]
                require mem[_4273] == mem[_4273 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _4412 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_4412)
                require ext_code.size(address(_4305))
                staticcall address(_4305).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_4412)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4469 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4485 = mem[_4469]
                require mem[_4469] == mem[_4469 + 12 len 20]
                _4529 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_4529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_4529 + 36] = _4082
                mem[_4529 + 68] = 0
                mem[_4529 + 100] = address(_4485)
                mem[_4529 + 132] = 128
                mem[_4529 + 164] = mem[_4529]
                s = 0
                while s < mem[_4529]:
                    mem[s + _4529 + 196] = mem[s + _4529 + 32]
                    _3681 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_4529]) > mem[_4529]:
                    mem[mem[_4529] + _4529 + 196] = 0
                require ext_code.size(address(_3849))
                call address(_3849).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_4529]) + _4529 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3681 = mem[96]
                idx = idx + 1
                s = _3849
                s = _4485
                s = _4082
                continue 
            require _2515 / 2 < mem[96]
            _3702 = mem[(16 * Mask(251, 1, _2515)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3702))
            staticcall address(_3702).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3756 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3756] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2521 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2551 = mem[_2521]
                    require mem[_2521] == mem[_2521 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2601 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2601)
                    require ext_code.size(address(_2551))
                    staticcall address(_2551).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2601)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2683 = mem[_2650]
                    require mem[_2650] == mem[_2650 + 12 len 20]
                    require ext_code.size(mem[_2650 + 12 len 20])
                    staticcall mem[_2650 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2758 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2776 = mem[_2758]
                    require mem[_2758] == mem[_2758 + 18 len 14]
                    _2806 = mem[_2758 + 32]
                    require mem[_2758 + 32] == mem[_2758 + 50 len 14]
                    require mem[_2758 + 64] == mem[_2758 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 50 len 14] / (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            idx = idx + 1
                            s = _2683
                            s = 997 * s * Mask(112, 0, _2806) / (997 * s) + (1000 * Mask(112, 0, _2776))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 50 len 14] / (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            idx = idx + 1
                            s = _2683
                            s = 997 * s * Mask(112, 0, _2806) / (997 * s) + (1000 * Mask(112, 0, _2776))
                            continue 
                    require (997 * s) + (1000 * mem[_2758 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 18 len 14] / (997 * s) + (1000 * mem[_2758 + 50 len 14])
                    idx = idx + 1
                    s = _2683
                    s = 997 * s * Mask(112, 0, _2776) / (997 * s) + (1000 * Mask(112, 0, _2806))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2518 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2519 = mem[96]
                require mem[96] / 2 < mem[96]
                _2548 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2548))
                staticcall address(_2548).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3682 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3682 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2518]
                    mem[_2518 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2518]
                    mem[_2518 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2519 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2519 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2519 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3793 = mem[_3781]
                    require mem[_3781] == mem[_3781 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3828 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3828)
                    require ext_code.size(address(_3793))
                    staticcall address(_3793).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3828)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3844 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3850 = mem[_3844]
                    require mem[_3844] == mem[_3844 + 12 len 20]
                    if idx != _2519 / 2:
                        require ext_code.size(mem[_3844 + 12 len 20])
                        staticcall mem[_3844 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3886 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3886] == mem[_3886 + 12 len 20]
                        require idx - (_2519 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3924 = mem[(32 * idx - (_2519 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2518]
                        if mem[_2518 + 44 len 20] == mem[_3886 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3998 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3998 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3998 + 36] = 0
                                mem[_3998 + 68] = _3924
                                mem[_3998 + 100] = this.address
                                mem[_3998 + 132] = 128
                                mem[_3998 + 164] = mem[_3998]
                                s = 0
                                while s < mem[_3998]:
                                    mem[s + _3998 + 196] = mem[s + _3998 + 32]
                                    _3682 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3998]) > mem[_3998]:
                                    mem[mem[_3998] + _3998 + 196] = 0
                                require ext_code.size(address(_3850))
                                call address(_3850).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_3998]) + _3998 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3682 = mem[96]
                                idx = idx + 1
                                s = _3850
                                s = this.address
                                s = _3924
                                continue 
                            require idx + -(_2519 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4064 = mem[_4043]
                            require mem[_4043] == mem[_4043 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4214 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4214)
                            require ext_code.size(address(_4064))
                            staticcall address(_4064).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4214)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4306 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4338 = mem[_4306]
                            require mem[_4306] == mem[_4306 + 12 len 20]
                            _4434 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4434 + 36] = 0
                            mem[_4434 + 68] = _3924
                            mem[_4434 + 100] = address(_4338)
                            mem[_4434 + 132] = 128
                            mem[_4434 + 164] = mem[_4434]
                            s = 0
                            while s < mem[_4434]:
                                mem[s + _4434 + 196] = mem[s + _4434 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4434]) > mem[_4434]:
                                mem[mem[_4434] + _4434 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3924, address(_4338), 128, mem[_4434], mem[_4434 + 196 len ceil32(mem[_4434])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = _4338
                            s = _3924
                            continue 
                        if idx + 2 >= mem[96]:
                            _4002 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4002 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4002 + 36] = _3924
                            mem[_4002 + 68] = 0
                            mem[_4002 + 100] = this.address
                            mem[_4002 + 132] = 128
                            mem[_4002 + 164] = mem[_4002]
                            s = 0
                            while s < mem[_4002]:
                                mem[s + _4002 + 196] = mem[s + _4002 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4002]) > mem[_4002]:
                                mem[mem[_4002] + _4002 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3924, 0, address(this.address), 128, mem[_4002], mem[_4002 + 196 len ceil32(mem[_4002])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = this.address
                            s = _3924
                            continue 
                        require idx + -(_2519 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4045 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4065 = mem[_4045]
                        require mem[_4045] == mem[_4045 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4216 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4216)
                        require ext_code.size(address(_4065))
                        staticcall address(_4065).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4216)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4339 = mem[_4307]
                        require mem[_4307] == mem[_4307 + 12 len 20]
                        _4435 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4435 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4435 + 36] = _3924
                        mem[_4435 + 68] = 0
                        mem[_4435 + 100] = address(_4339)
                        mem[_4435 + 132] = 128
                        mem[_4435 + 164] = mem[_4435]
                        s = 0
                        while s < mem[_4435]:
                            mem[s + _4435 + 196] = mem[s + _4435 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4435]) > mem[_4435]:
                            mem[mem[_4435] + _4435 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4435]) + _4435 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = _4339
                        s = _3924
                        continue 
                    require 0 < mem[_2518]
                    _3876 = mem[_2518 + 32]
                    mem[mem[64] + 4] = mem[_3844 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3876))
                    call address(_3876).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3904 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3904] == bool(mem[_3904])
                    require ext_code.size(address(_3850))
                    staticcall address(_3850).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3958] == mem[_3958 + 12 len 20]
                    require idx - (_2519 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4086 = mem[(32 * idx - (_2519 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2518]
                    if mem[_2518 + 44 len 20] == mem[_3958 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4218 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4218 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4218 + 36] = 0
                            mem[_4218 + 68] = _4086
                            mem[_4218 + 100] = this.address
                            mem[_4218 + 132] = 128
                            mem[_4218 + 164] = mem[_4218]
                            s = 0
                            while s < mem[_4218]:
                                mem[s + _4218 + 196] = mem[s + _4218 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4218]) > mem[_4218]:
                                mem[mem[_4218] + _4218 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4218]) + _4218 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = this.address
                            s = _4086
                            continue 
                        require idx + -(_2519 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4308 = mem[_4277]
                        require mem[_4277] == mem[_4277 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4414 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4414)
                        require ext_code.size(address(_4308))
                        staticcall address(_4308).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4414)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4470 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4488 = mem[_4470]
                        require mem[_4470] == mem[_4470 + 12 len 20]
                        _4530 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4530 + 36] = 0
                        mem[_4530 + 68] = _4086
                        mem[_4530 + 100] = address(_4488)
                        mem[_4530 + 132] = 128
                        mem[_4530 + 164] = mem[_4530]
                        s = 0
                        while s < mem[_4530]:
                            mem[s + _4530 + 196] = mem[s + _4530 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4530]) > mem[_4530]:
                            mem[mem[_4530] + _4530 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4530]) + _4530 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = _4488
                        s = _4086
                        continue 
                    if idx + 2 >= mem[96]:
                        _4222 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4222 + 36] = _4086
                        mem[_4222 + 68] = 0
                        mem[_4222 + 100] = this.address
                        mem[_4222 + 132] = 128
                        mem[_4222 + 164] = mem[_4222]
                        s = 0
                        while s < mem[_4222]:
                            mem[s + _4222 + 196] = mem[s + _4222 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4222]) > mem[_4222]:
                            mem[mem[_4222] + _4222 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4222]) + _4222 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = this.address
                        s = _4086
                        continue 
                    require idx + -(_2519 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4309 = mem[_4279]
                    require mem[_4279] == mem[_4279 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4416 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4416)
                    require ext_code.size(address(_4309))
                    staticcall address(_4309).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4416)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4471 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4489 = mem[_4471]
                    require mem[_4471] == mem[_4471 + 12 len 20]
                    _4531 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4531 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4531 + 36] = _4086
                    mem[_4531 + 68] = 0
                    mem[_4531 + 100] = address(_4489)
                    mem[_4531 + 132] = 128
                    mem[_4531 + 164] = mem[_4531]
                    s = 0
                    while s < mem[_4531]:
                        mem[s + _4531 + 196] = mem[s + _4531 + 32]
                        _3682 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4531]) > mem[_4531]:
                        mem[mem[_4531] + _4531 + 196] = 0
                    require ext_code.size(address(_3850))
                    call address(_3850).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4531]) + _4531 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3682 = mem[96]
                    idx = idx + 1
                    s = _3850
                    s = _4489
                    s = _4086
                    continue 
                require _2519 / 2 < mem[96]
                _3706 = mem[(16 * Mask(251, 1, _2519)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3706))
                staticcall address(_3706).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3760] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2525 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2555 = mem[_2525]
                    require mem[_2525] == mem[_2525 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2604 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2604)
                    require ext_code.size(address(_2555))
                    staticcall address(_2555).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2604)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2655 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2687 = mem[_2655]
                    require mem[_2655] == mem[_2655 + 12 len 20]
                    require ext_code.size(mem[_2655 + 12 len 20])
                    staticcall mem[_2655 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2761 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2777 = mem[_2761]
                    require mem[_2761] == mem[_2761 + 18 len 14]
                    _2809 = mem[_2761 + 32]
                    require mem[_2761 + 32] == mem[_2761 + 50 len 14]
                    require mem[_2761 + 64] == mem[_2761 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 50 len 14] / (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            idx = idx + 1
                            s = _2687
                            s = 997 * s * Mask(112, 0, _2809) / (997 * s) + (1000 * Mask(112, 0, _2777))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 50 len 14] / (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            idx = idx + 1
                            s = _2687
                            s = 997 * s * Mask(112, 0, _2809) / (997 * s) + (1000 * Mask(112, 0, _2777))
                            continue 
                    require (997 * s) + (1000 * mem[_2761 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 18 len 14] / (997 * s) + (1000 * mem[_2761 + 50 len 14])
                    idx = idx + 1
                    s = _2687
                    s = 997 * s * Mask(112, 0, _2777) / (997 * s) + (1000 * Mask(112, 0, _2809))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2522 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2523 = mem[96]
                require mem[96] / 2 < mem[96]
                _2552 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2552))
                staticcall address(_2552).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3683 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3683 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2522]
                    mem[_2522 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2522]
                    mem[_2522 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2523 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2523 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2523 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3795 = mem[_3783]
                    require mem[_3783] == mem[_3783 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3830 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3830)
                    require ext_code.size(address(_3795))
                    staticcall address(_3795).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3830)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3851 = mem[_3845]
                    require mem[_3845] == mem[_3845 + 12 len 20]
                    if idx != _2523 / 2:
                        require ext_code.size(mem[_3845 + 12 len 20])
                        staticcall mem[_3845 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3887 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3887] == mem[_3887 + 12 len 20]
                        require idx - (_2523 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3926 = mem[(32 * idx - (_2523 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2522]
                        if mem[_2522 + 44 len 20] == mem[_3887 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4007 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4007 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4007 + 36] = 0
                                mem[_4007 + 68] = _3926
                                mem[_4007 + 100] = this.address
                                mem[_4007 + 132] = 128
                                mem[_4007 + 164] = mem[_4007]
                                s = 0
                                while s < mem[_4007]:
                                    mem[s + _4007 + 196] = mem[s + _4007 + 32]
                                    _3683 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4007]) > mem[_4007]:
                                    mem[mem[_4007] + _4007 + 196] = 0
                                require ext_code.size(address(_3851))
                                call address(_3851).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_4007]) + _4007 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3683 = mem[96]
                                idx = idx + 1
                                s = _3851
                                s = this.address
                                s = _3926
                                continue 
                            require idx + -(_2523 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4047 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4067 = mem[_4047]
                            require mem[_4047] == mem[_4047 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4226 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4226)
                            require ext_code.size(address(_4067))
                            staticcall address(_4067).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4226)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4310 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4340 = mem[_4310]
                            require mem[_4310] == mem[_4310 + 12 len 20]
                            _4436 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4436 + 36] = 0
                            mem[_4436 + 68] = _3926
                            mem[_4436 + 100] = address(_4340)
                            mem[_4436 + 132] = 128
                            mem[_4436 + 164] = mem[_4436]
                            s = 0
                            while s < mem[_4436]:
                                mem[s + _4436 + 196] = mem[s + _4436 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4436]) > mem[_4436]:
                                mem[mem[_4436] + _4436 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4436]) + _4436 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = _4340
                            s = _3926
                            continue 
                        if idx + 2 >= mem[96]:
                            _4011 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4011 + 36] = _3926
                            mem[_4011 + 68] = 0
                            mem[_4011 + 100] = this.address
                            mem[_4011 + 132] = 128
                            mem[_4011 + 164] = mem[_4011]
                            s = 0
                            while s < mem[_4011]:
                                mem[s + _4011 + 196] = mem[s + _4011 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4011]) > mem[_4011]:
                                mem[mem[_4011] + _4011 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4011]) + _4011 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = this.address
                            s = _3926
                            continue 
                        require idx + -(_2523 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4049 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4068 = mem[_4049]
                        require mem[_4049] == mem[_4049 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4228 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4228)
                        require ext_code.size(address(_4068))
                        staticcall address(_4068).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4228)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4341 = mem[_4311]
                        require mem[_4311] == mem[_4311 + 12 len 20]
                        _4437 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4437 + 36] = _3926
                        mem[_4437 + 68] = 0
                        mem[_4437 + 100] = address(_4341)
                        mem[_4437 + 132] = 128
                        mem[_4437 + 164] = mem[_4437]
                        s = 0
                        while s < mem[_4437]:
                            mem[s + _4437 + 196] = mem[s + _4437 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4437]) > mem[_4437]:
                            mem[mem[_4437] + _4437 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3926, 0, address(_4341), 128, mem[_4437], mem[_4437 + 196 len ceil32(mem[_4437])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = _4341
                        s = _3926
                        continue 
                    require 0 < mem[_2522]
                    _3878 = mem[_2522 + 32]
                    mem[mem[64] + 4] = mem[_3845 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3878))
                    call address(_3878).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3905] == bool(mem[_3905])
                    require ext_code.size(address(_3851))
                    staticcall address(_3851).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3961 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3961] == mem[_3961 + 12 len 20]
                    require idx - (_2523 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4090 = mem[(32 * idx - (_2523 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2522]
                    if mem[_2522 + 44 len 20] == mem[_3961 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4230 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4230 + 36] = 0
                            mem[_4230 + 68] = _4090
                            mem[_4230 + 100] = this.address
                            mem[_4230 + 132] = 128
                            mem[_4230 + 164] = mem[_4230]
                            s = 0
                            while s < mem[_4230]:
                                mem[s + _4230 + 196] = mem[s + _4230 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4230]) > mem[_4230]:
                                mem[mem[_4230] + _4230 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4090, address(this.address), 128, mem[_4230], mem[_4230 + 196 len ceil32(mem[_4230])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = this.address
                            s = _4090
                            continue 
                        require idx + -(_2523 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4312 = mem[_4283]
                        require mem[_4283] == mem[_4283 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4418 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4418)
                        require ext_code.size(address(_4312))
                        staticcall address(_4312).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4418)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4472 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4492 = mem[_4472]
                        require mem[_4472] == mem[_4472 + 12 len 20]
                        _4532 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4532 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4532 + 36] = 0
                        mem[_4532 + 68] = _4090
                        mem[_4532 + 100] = address(_4492)
                        mem[_4532 + 132] = 128
                        mem[_4532 + 164] = mem[_4532]
                        s = 0
                        while s < mem[_4532]:
                            mem[s + _4532 + 196] = mem[s + _4532 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4532]) > mem[_4532]:
                            mem[mem[_4532] + _4532 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4532]) + _4532 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = _4492
                        s = _4090
                        continue 
                    if idx + 2 >= mem[96]:
                        _4234 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4234 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4234 + 36] = _4090
                        mem[_4234 + 68] = 0
                        mem[_4234 + 100] = this.address
                        mem[_4234 + 132] = 128
                        mem[_4234 + 164] = mem[_4234]
                        s = 0
                        while s < mem[_4234]:
                            mem[s + _4234 + 196] = mem[s + _4234 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4234]) > mem[_4234]:
                            mem[mem[_4234] + _4234 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4234]) + _4234 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = this.address
                        s = _4090
                        continue 
                    require idx + -(_2523 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4313 = mem[_4285]
                    require mem[_4285] == mem[_4285 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4420 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4420)
                    require ext_code.size(address(_4313))
                    staticcall address(_4313).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4420)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4473 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4493 = mem[_4473]
                    require mem[_4473] == mem[_4473 + 12 len 20]
                    _4533 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4533 + 36] = _4090
                    mem[_4533 + 68] = 0
                    mem[_4533 + 100] = address(_4493)
                    mem[_4533 + 132] = 128
                    mem[_4533 + 164] = mem[_4533]
                    s = 0
                    while s < mem[_4533]:
                        mem[s + _4533 + 196] = mem[s + _4533 + 32]
                        _3683 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4533]) > mem[_4533]:
                        mem[mem[_4533] + _4533 + 196] = 0
                    require ext_code.size(address(_3851))
                    call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _4090, 0, address(_4493), 128, mem[_4533], mem[_4533 + 196 len ceil32(mem[_4533])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3683 = mem[96]
                    idx = idx + 1
                    s = _3851
                    s = _4493
                    s = _4090
                    continue 
                require _2523 / 2 < mem[96]
                _3710 = mem[(16 * Mask(251, 1, _2523)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3710))
                staticcall address(_3710).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3764 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3764] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2559 = mem[_2529]
                    require mem[_2529] == mem[_2529 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2607 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2607)
                    require ext_code.size(address(_2559))
                    staticcall address(_2559).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2607)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2691 = mem[_2660]
                    require mem[_2660] == mem[_2660 + 12 len 20]
                    require ext_code.size(mem[_2660 + 12 len 20])
                    staticcall mem[_2660 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2764 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2778 = mem[_2764]
                    require mem[_2764] == mem[_2764 + 18 len 14]
                    _2812 = mem[_2764 + 32]
                    require mem[_2764 + 32] == mem[_2764 + 50 len 14]
                    require mem[_2764 + 64] == mem[_2764 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 50 len 14] / (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            idx = idx + 1
                            s = _2691
                            s = 997 * s * Mask(112, 0, _2812) / (997 * s) + (1000 * Mask(112, 0, _2778))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 50 len 14] / (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            idx = idx + 1
                            s = _2691
                            s = 997 * s * Mask(112, 0, _2812) / (997 * s) + (1000 * Mask(112, 0, _2778))
                            continue 
                    require (997 * s) + (1000 * mem[_2764 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 18 len 14] / (997 * s) + (1000 * mem[_2764 + 50 len 14])
                    idx = idx + 1
                    s = _2691
                    s = 997 * s * Mask(112, 0, _2778) / (997 * s) + (1000 * Mask(112, 0, _2812))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2526 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2527 = mem[96]
                require mem[96] / 2 < mem[96]
                _2556 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2556))
                staticcall address(_2556).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3684 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3684 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2526]
                    mem[_2526 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2526]
                    mem[_2526 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2527 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2527 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2527 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3797 = mem[_3785]
                    require mem[_3785] == mem[_3785 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3832 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3832)
                    require ext_code.size(address(_3797))
                    staticcall address(_3797).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3832)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3846 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3852 = mem[_3846]
                    require mem[_3846] == mem[_3846 + 12 len 20]
                    if idx != _2527 / 2:
                        require ext_code.size(mem[_3846 + 12 len 20])
                        staticcall mem[_3846 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3888 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3888] == mem[_3888 + 12 len 20]
                        require idx - (_2527 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3928 = mem[(32 * idx - (_2527 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2526]
                        if mem[_2526 + 44 len 20] == mem[_3888 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4016 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4016 + 36] = 0
                                mem[_4016 + 68] = _3928
                                mem[_4016 + 100] = this.address
                                mem[_4016 + 132] = 128
                                mem[_4016 + 164] = mem[_4016]
                                s = 0
                                while s < mem[_4016]:
                                    mem[s + _4016 + 196] = mem[s + _4016 + 32]
                                    _3684 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4016]) > mem[_4016]:
                                    mem[mem[_4016] + _4016 + 196] = 0
                                require ext_code.size(address(_3852))
                                call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3928, address(this.address), 128, mem[_4016], mem[_4016 + 196 len ceil32(mem[_4016])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3684 = mem[96]
                                idx = idx + 1
                                s = _3852
                                s = this.address
                                s = _3928
                                continue 
                            require idx + -(_2527 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4051 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4070 = mem[_4051]
                            require mem[_4051] == mem[_4051 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4238 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4238)
                            require ext_code.size(address(_4070))
                            staticcall address(_4070).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4238)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4314 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4342 = mem[_4314]
                            require mem[_4314] == mem[_4314 + 12 len 20]
                            _4438 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4438 + 36] = 0
                            mem[_4438 + 68] = _3928
                            mem[_4438 + 100] = address(_4342)
                            mem[_4438 + 132] = 128
                            mem[_4438 + 164] = mem[_4438]
                            s = 0
                            while s < mem[_4438]:
                                mem[s + _4438 + 196] = mem[s + _4438 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4438]) > mem[_4438]:
                                mem[mem[_4438] + _4438 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4438]) + _4438 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = _4342
                            s = _3928
                            continue 
                        if idx + 2 >= mem[96]:
                            _4020 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4020 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4020 + 36] = _3928
                            mem[_4020 + 68] = 0
                            mem[_4020 + 100] = this.address
                            mem[_4020 + 132] = 128
                            mem[_4020 + 164] = mem[_4020]
                            s = 0
                            while s < mem[_4020]:
                                mem[s + _4020 + 196] = mem[s + _4020 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4020]) > mem[_4020]:
                                mem[mem[_4020] + _4020 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4020]) + _4020 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = this.address
                            s = _3928
                            continue 
                        require idx + -(_2527 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4071 = mem[_4053]
                        require mem[_4053] == mem[_4053 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4240 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4240)
                        require ext_code.size(address(_4071))
                        staticcall address(_4071).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4240)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4343 = mem[_4315]
                        require mem[_4315] == mem[_4315 + 12 len 20]
                        _4439 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4439 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4439 + 36] = _3928
                        mem[_4439 + 68] = 0
                        mem[_4439 + 100] = address(_4343)
                        mem[_4439 + 132] = 128
                        mem[_4439 + 164] = mem[_4439]
                        s = 0
                        while s < mem[_4439]:
                            mem[s + _4439 + 196] = mem[s + _4439 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4439]) > mem[_4439]:
                            mem[mem[_4439] + _4439 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3928, 0, address(_4343), 128, mem[_4439], mem[_4439 + 196 len ceil32(mem[_4439])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = _4343
                        s = _3928
                        continue 
                    require 0 < mem[_2526]
                    _3880 = mem[_2526 + 32]
                    mem[mem[64] + 4] = mem[_3846 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3880))
                    call address(_3880).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3906 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3906] == bool(mem[_3906])
                    require ext_code.size(address(_3852))
                    staticcall address(_3852).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3964 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3964] == mem[_3964 + 12 len 20]
                    require idx - (_2527 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4094 = mem[(32 * idx - (_2527 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2526]
                    if mem[_2526 + 44 len 20] == mem[_3964 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4242 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4242 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4242 + 36] = 0
                            mem[_4242 + 68] = _4094
                            mem[_4242 + 100] = this.address
                            mem[_4242 + 132] = 128
                            mem[_4242 + 164] = mem[_4242]
                            s = 0
                            while s < mem[_4242]:
                                mem[s + _4242 + 196] = mem[s + _4242 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4242]) > mem[_4242]:
                                mem[mem[_4242] + _4242 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4094, address(this.address), 128, mem[_4242], mem[_4242 + 196 len ceil32(mem[_4242])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = this.address
                            s = _4094
                            continue 
                        require idx + -(_2527 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4289 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4316 = mem[_4289]
                        require mem[_4289] == mem[_4289 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4422 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4422)
                        require ext_code.size(address(_4316))
                        staticcall address(_4316).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4422)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4496 = mem[_4474]
                        require mem[_4474] == mem[_4474 + 12 len 20]
                        _4534 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4534 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4534 + 36] = 0
                        mem[_4534 + 68] = _4094
                        mem[_4534 + 100] = address(_4496)
                        mem[_4534 + 132] = 128
                        mem[_4534 + 164] = mem[_4534]
                        s = 0
                        while s < mem[_4534]:
                            mem[s + _4534 + 196] = mem[s + _4534 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4534]) > mem[_4534]:
                            mem[mem[_4534] + _4534 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4534]) + _4534 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = _4496
                        s = _4094
                        continue 
                    if idx + 2 >= mem[96]:
                        _4246 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4246 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4246 + 36] = _4094
                        mem[_4246 + 68] = 0
                        mem[_4246 + 100] = this.address
                        mem[_4246 + 132] = 128
                        mem[_4246 + 164] = mem[_4246]
                        s = 0
                        while s < mem[_4246]:
                            mem[s + _4246 + 196] = mem[s + _4246 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4246]) > mem[_4246]:
                            mem[mem[_4246] + _4246 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _4094, 0, address(this.address), 128, mem[_4246], mem[_4246 + 196 len ceil32(mem[_4246])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = this.address
                        s = _4094
                        continue 
                    require idx + -(_2527 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4291 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4317 = mem[_4291]
                    require mem[_4291] == mem[_4291 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4424 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4424)
                    require ext_code.size(address(_4317))
                    staticcall address(_4317).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4424)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4475 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4497 = mem[_4475]
                    require mem[_4475] == mem[_4475 + 12 len 20]
                    _4535 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4535 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4535 + 36] = _4094
                    mem[_4535 + 68] = 0
                    mem[_4535 + 100] = address(_4497)
                    mem[_4535 + 132] = 128
                    mem[_4535 + 164] = mem[_4535]
                    s = 0
                    while s < mem[_4535]:
                        mem[s + _4535 + 196] = mem[s + _4535 + 32]
                        _3684 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4535]) > mem[_4535]:
                        mem[mem[_4535] + _4535 + 196] = 0
                    require ext_code.size(address(_3852))
                    call address(_3852).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4535]) + _4535 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3684 = mem[96]
                    idx = idx + 1
                    s = _3852
                    s = _4497
                    s = _4094
                    continue 
                require _2527 / 2 < mem[96]
                _3714 = mem[(16 * Mask(251, 1, _2527)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3714))
                staticcall address(_3714).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3768] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2533 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2563 = mem[_2533]
                    require mem[_2533] == mem[_2533 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2610 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2610)
                    require ext_code.size(address(_2563))
                    staticcall address(_2563).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2610)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2695 = mem[_2665]
                    require mem[_2665] == mem[_2665 + 12 len 20]
                    require ext_code.size(mem[_2665 + 12 len 20])
                    staticcall mem[_2665 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2767 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2779 = mem[_2767]
                    require mem[_2767] == mem[_2767 + 18 len 14]
                    _2815 = mem[_2767 + 32]
                    require mem[_2767 + 32] == mem[_2767 + 50 len 14]
                    require mem[_2767 + 64] == mem[_2767 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 50 len 14] / (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            idx = idx + 1
                            s = _2695
                            s = 997 * s * Mask(112, 0, _2815) / (997 * s) + (1000 * Mask(112, 0, _2779))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 50 len 14] / (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            idx = idx + 1
                            s = _2695
                            s = 997 * s * Mask(112, 0, _2815) / (997 * s) + (1000 * Mask(112, 0, _2779))
                            continue 
                    require (997 * s) + (1000 * mem[_2767 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 18 len 14] / (997 * s) + (1000 * mem[_2767 + 50 len 14])
                    idx = idx + 1
                    s = _2695
                    s = 997 * s * Mask(112, 0, _2779) / (997 * s) + (1000 * Mask(112, 0, _2815))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2530 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2531 = mem[96]
                require mem[96] / 2 < mem[96]
                _2560 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2560))
                staticcall address(_2560).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3685 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3685 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2530]
                    mem[_2530 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2530]
                    mem[_2530 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2531 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2531 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2531 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3787 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3799 = mem[_3787]
                    require mem[_3787] == mem[_3787 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3834 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3834)
                    require ext_code.size(address(_3799))
                    staticcall address(_3799).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3834)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3847 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3853 = mem[_3847]
                    require mem[_3847] == mem[_3847 + 12 len 20]
                    if idx != _2531 / 2:
                        require ext_code.size(mem[_3847 + 12 len 20])
                        staticcall mem[_3847 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3889] == mem[_3889 + 12 len 20]
                        require idx - (_2531 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3930 = mem[(32 * idx - (_2531 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2530]
                        if mem[_2530 + 44 len 20] == mem[_3889 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4025 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4025 + 36] = 0
                                mem[_4025 + 68] = _3930
                                mem[_4025 + 100] = this.address
                                mem[_4025 + 132] = 128
                                mem[_4025 + 164] = mem[_4025]
                                s = 0
                                while s < mem[_4025]:
                                    mem[s + _4025 + 196] = mem[s + _4025 + 32]
                                    _3685 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4025]) > mem[_4025]:
                                    mem[mem[_4025] + _4025 + 196] = 0
                                require ext_code.size(address(_3853))
                                call address(_3853).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_4025]) + _4025 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3685 = mem[96]
                                idx = idx + 1
                                s = _3853
                                s = this.address
                                s = _3930
                                continue 
                            require idx + -(_2531 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4055 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4073 = mem[_4055]
                            require mem[_4055] == mem[_4055 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4250 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4250)
                            require ext_code.size(address(_4073))
                            staticcall address(_4073).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4250)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4344 = mem[_4318]
                            require mem[_4318] == mem[_4318 + 12 len 20]
                            _4440 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4440 + 36] = 0
                            mem[_4440 + 68] = _3930
                            mem[_4440 + 100] = address(_4344)
                            mem[_4440 + 132] = 128
                            mem[_4440 + 164] = mem[_4440]
                            s = 0
                            while s < mem[_4440]:
                                mem[s + _4440 + 196] = mem[s + _4440 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4440]) > mem[_4440]:
                                mem[mem[_4440] + _4440 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4440]) + _4440 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = _4344
                            s = _3930
                            continue 
                        if idx + 2 >= mem[96]:
                            _4029 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4029 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4029 + 36] = _3930
                            mem[_4029 + 68] = 0
                            mem[_4029 + 100] = this.address
                            mem[_4029 + 132] = 128
                            mem[_4029 + 164] = mem[_4029]
                            s = 0
                            while s < mem[_4029]:
                                mem[s + _4029 + 196] = mem[s + _4029 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4029]) > mem[_4029]:
                                mem[mem[_4029] + _4029 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4029]) + _4029 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = this.address
                            s = _3930
                            continue 
                        require idx + -(_2531 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4057 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4074 = mem[_4057]
                        require mem[_4057] == mem[_4057 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4252 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4252)
                        require ext_code.size(address(_4074))
                        staticcall address(_4074).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4252)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4319 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4345 = mem[_4319]
                        require mem[_4319] == mem[_4319 + 12 len 20]
                        _4441 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4441 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4441 + 36] = _3930
                        mem[_4441 + 68] = 0
                        mem[_4441 + 100] = address(_4345)
                        mem[_4441 + 132] = 128
                        mem[_4441 + 164] = mem[_4441]
                        s = 0
                        while s < mem[_4441]:
                            mem[s + _4441 + 196] = mem[s + _4441 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4441]) > mem[_4441]:
                            mem[mem[_4441] + _4441 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3930, 0, address(_4345), 128, mem[_4441], mem[_4441 + 196 len ceil32(mem[_4441])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = _4345
                        s = _3930
                        continue 
                    require 0 < mem[_2530]
                    _3882 = mem[_2530 + 32]
                    mem[mem[64] + 4] = mem[_3847 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3882))
                    call address(_3882).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3907 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3907] == bool(mem[_3907])
                    require ext_code.size(address(_3853))
                    staticcall address(_3853).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3967] == mem[_3967 + 12 len 20]
                    require idx - (_2531 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4098 = mem[(32 * idx - (_2531 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2530]
                    if mem[_2530 + 44 len 20] == mem[_3967 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4254 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4254 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4254 + 36] = 0
                            mem[_4254 + 68] = _4098
                            mem[_4254 + 100] = this.address
                            mem[_4254 + 132] = 128
                            mem[_4254 + 164] = mem[_4254]
                            s = 0
                            while s < mem[_4254]:
                                mem[s + _4254 + 196] = mem[s + _4254 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4254]) > mem[_4254]:
                                mem[mem[_4254] + _4254 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4098, address(this.address), 128, mem[_4254], mem[_4254 + 196 len ceil32(mem[_4254])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = this.address
                            s = _4098
                            continue 
                        require idx + -(_2531 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4295 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4320 = mem[_4295]
                        require mem[_4295] == mem[_4295 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4426 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4426)
                        require ext_code.size(address(_4320))
                        staticcall address(_4320).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4426)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4476 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4500 = mem[_4476]
                        require mem[_4476] == mem[_4476 + 12 len 20]
                        _4536 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4536 + 36] = 0
                        mem[_4536 + 68] = _4098
                        mem[_4536 + 100] = address(_4500)
                        mem[_4536 + 132] = 128
                        mem[_4536 + 164] = mem[_4536]
                        s = 0
                        while s < mem[_4536]:
                            mem[s + _4536 + 196] = mem[s + _4536 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4536]) > mem[_4536]:
                            mem[mem[_4536] + _4536 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4098, address(_4500), 128, mem[_4536], mem[_4536 + 196 len ceil32(mem[_4536])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = _4500
                        s = _4098
                        continue 
                    if idx + 2 >= mem[96]:
                        _4258 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4258 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4258 + 36] = _4098
                        mem[_4258 + 68] = 0
                        mem[_4258 + 100] = this.address
                        mem[_4258 + 132] = 128
                        mem[_4258 + 164] = mem[_4258]
                        s = 0
                        while s < mem[_4258]:
                            mem[s + _4258 + 196] = mem[s + _4258 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4258]) > mem[_4258]:
                            mem[mem[_4258] + _4258 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4258]) + _4258 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = this.address
                        s = _4098
                        continue 
                    require idx + -(_2531 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4321 = mem[_4297]
                    require mem[_4297] == mem[_4297 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4428 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4428)
                    require ext_code.size(address(_4321))
                    staticcall address(_4321).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4428)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4501 = mem[_4477]
                    require mem[_4477] == mem[_4477 + 12 len 20]
                    _4537 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4537 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4537 + 36] = _4098
                    mem[_4537 + 68] = 0
                    mem[_4537 + 100] = address(_4501)
                    mem[_4537 + 132] = 128
                    mem[_4537 + 164] = mem[_4537]
                    s = 0
                    while s < mem[_4537]:
                        mem[s + _4537 + 196] = mem[s + _4537 + 32]
                        _3685 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4537]) > mem[_4537]:
                        mem[mem[_4537] + _4537 + 196] = 0
                    require ext_code.size(address(_3853))
                    call address(_3853).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4537]) + _4537 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3685 = mem[96]
                    idx = idx + 1
                    s = _3853
                    s = _4501
                    s = _4098
                    continue 
                require _2531 / 2 < mem[96]
                _3718 = mem[(16 * Mask(251, 1, _2531)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3718))
                staticcall address(_3718).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3772 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3772] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_fc146f04(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11212 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11237 = mem[_11212]
                require mem[_11212] == mem[_11212 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11289 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11289)
                require ext_code.size(address(_11237))
                staticcall address(_11237).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11289)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11334 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11368 = mem[_11334]
                require mem[_11334] == mem[_11334 + 12 len 20]
                require ext_code.size(mem[_11334 + 12 len 20])
                staticcall mem[_11334 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11545 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11686 = mem[_11545]
                require mem[_11545] == mem[_11545 + 18 len 14]
                _11811 = mem[_11545 + 32]
                require mem[_11545 + 32] == mem[_11545 + 50 len 14]
                require mem[_11545 + 64] == mem[_11545 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 50 len 14] / (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        idx = idx + 1
                        s = _11368
                        s = 997 * s * Mask(112, 0, _11811) / (997 * s) + (1000 * Mask(112, 0, _11686))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 50 len 14] / (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        idx = idx + 1
                        s = _11368
                        s = 997 * s * Mask(112, 0, _11811) / (997 * s) + (1000 * Mask(112, 0, _11686))
                        continue 
                require (997 * s) + (1000 * mem[_11545 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 18 len 14] / (997 * s) + (1000 * mem[_11545 + 50 len 14])
                idx = idx + 1
                s = _11368
                s = 997 * s * Mask(112, 0, _11686) / (997 * s) + (1000 * Mask(112, 0, _11811))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11210 = mem[96]
            require mem[96] / 2 < mem[96]
            _11234 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11234))
            staticcall address(_11234).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11264 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11288 = mem[_11264]
            _16730 = mem[96]
            idx = _11210 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16730 - 1:
                require idx + -(_11210 / 2) + 1 < mem[96]
                require idx - (_11210 / 2) < mem[96]
                require idx + -(_11210 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                    require idx - (_11210 / 2) < mem[96]
                    if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                        _16839 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16839 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16839]
                        mem[_16839 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16839]
                        mem[_16839 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16839] - 1 < mem[_16839]
                        mem[_16839 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16839] - 1) + _16839 + 44 len 20])
                        staticcall mem[(32 * mem[_16839] - 1) + _16839 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16839 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16839]
                        _17342 = mem[_16839 + 32]
                        require idx - (_11210 / 2) < mem[96]
                        _17366 = mem[(32 * idx - (_11210 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17366)
                            mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18248 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                                t = 0
                                u = _16839 + 32
                                v = _16839 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16839]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18248))
                                call address(_18248).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22532 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22712 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22712
                                require return_data.size >= _22532 + (32 * _22712) + 32
                                t = _16839 + (4 * ceil32(return_data.size)) + _22532 + 128
                                u = _16839 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22712:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16839] - 1 < mem[_16839]
                                _25052 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25052))
                                staticcall address(_25052).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25592 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16839
                                s = mem[_25592] - ext_call.return_data[0]
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17342))
                            call address(_17342).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17366), -1
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _18867 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18867))
                            call address(_18867).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22533 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22713 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22713
                            require return_data.size >= _22533 + (32 * _22713) + 32
                            t = _16839 + (6 * ceil32(return_data.size)) + _22533 + 128
                            u = _16839 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22713:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25054 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25054))
                            staticcall address(_25054).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25593 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25593] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17366)
                            mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18434 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                                t = 0
                                u = _16839 + 32
                                v = _16839 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16839]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18434))
                                call address(_18434).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22534 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22714 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22714
                                require return_data.size >= _22534 + (32 * _22714) + 32
                                t = _16839 + (4 * ceil32(return_data.size)) + _22534 + 128
                                u = _16839 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22714:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16839] - 1 < mem[_16839]
                                _25056 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25056))
                                staticcall address(_25056).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25594 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16839
                                s = mem[_25594] - ext_call.return_data[0]
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17342))
                            call address(_17342).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17366), -1
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _19179 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19179))
                            call address(_19179).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22535 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22715 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22715
                            require return_data.size >= _22535 + (32 * _22715) + 32
                            t = _16839 + (6 * ceil32(return_data.size)) + _22535 + 128
                            u = _16839 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22715:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25058 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25058))
                            staticcall address(_25058).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25595 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25595] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16839 + 44 len 20])
                        staticcall mem[_16839 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                        require ext_code.size(mem[_16839 + 44 len 20])
                        staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17366)
                        mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11210 / 2) < mem[96]
                            _18681 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18681))
                            call address(_18681).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22536 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22716 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22716
                            require return_data.size >= _22536 + (32 * _22716) + 32
                            t = _16839 + (4 * ceil32(return_data.size)) + _22536 + 128
                            u = _16839 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22716:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25060 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25060))
                            staticcall address(_25060).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25596 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25596] - ext_call.return_data[0]
                            continue 
                        mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                        mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17342))
                        call address(_17342).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17366), -1
                        mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11210 / 2) < mem[96]
                        _19480 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                        t = 0
                        u = _16839 + 32
                        v = _16839 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16839]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19480))
                        call address(_19480).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22537 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22717 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22717
                        require return_data.size >= _22537 + (32 * _22717) + 32
                        t = _16839 + (6 * ceil32(return_data.size)) + _22537 + 128
                        u = _16839 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22717:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16839] - 1 < mem[_16839]
                        _25062 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25062))
                        staticcall address(_25062).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16839
                        s = mem[_25597] - ext_call.return_data[0]
                        continue 
                    _16841 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16841 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16841]
                    mem[_16841 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16841]
                    mem[_16841 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16841]
                    mem[_16841 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16841] - 1 < mem[_16841]
                    mem[_16841 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16841] - 1) + _16841 + 44 len 20])
                    staticcall mem[(32 * mem[_16841] - 1) + _16841 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16841 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16841]
                    _17390 = mem[_16841 + 32]
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _17414 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17414)
                        mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18360 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                            t = 0
                            u = _16841 + 32
                            v = _16841 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16841]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18360))
                            call address(_18360).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22538 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22718 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16841 + (6 * ceil32(return_data.size)) + 128] = _22718
                            require return_data.size >= _22538 + (32 * _22718) + 32
                            t = _16841 + (4 * ceil32(return_data.size)) + _22538 + 160
                            u = _16841 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22718:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16841] - 1 < mem[_16841]
                            _25064 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25064))
                            staticcall address(_25064).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25598 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16841
                            s = mem[_25598] - ext_call.return_data[0]
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17390))
                        call address(_17390).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17414), -1
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19064 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19064))
                        call address(_19064).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22539 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22719 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22719
                        require return_data.size >= _22539 + (32 * _22719) + 32
                        t = _16841 + (6 * ceil32(return_data.size)) + _22539 + 160
                        u = _16841 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22719:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25066 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25066))
                        staticcall address(_25066).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25599] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17414)
                        mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18593 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                            t = 0
                            u = _16841 + 32
                            v = _16841 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16841]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18593))
                            call address(_18593).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22540 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22720 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16841 + (6 * ceil32(return_data.size)) + 128] = _22720
                            require return_data.size >= _22540 + (32 * _22720) + 32
                            t = _16841 + (4 * ceil32(return_data.size)) + _22540 + 160
                            u = _16841 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22720:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16841] - 1 < mem[_16841]
                            _25068 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25068))
                            staticcall address(_25068).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25600 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16841
                            s = mem[_25600] - ext_call.return_data[0]
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17390))
                        call address(_17390).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17414), -1
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19380 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19380))
                        call address(_19380).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22541 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22721 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22721
                        require return_data.size >= _22541 + (32 * _22721) + 32
                        t = _16841 + (6 * ceil32(return_data.size)) + _22541 + 160
                        u = _16841 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22721:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25070 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25070))
                        staticcall address(_25070).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25601 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25601] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16841 + 44 len 20])
                    staticcall mem[_16841 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                    require ext_code.size(mem[_16841 + 44 len 20])
                    staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17414)
                    mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _18872 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (4 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18872))
                        call address(_18872).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22542 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22722 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = _22722
                        require return_data.size >= _22542 + (32 * _22722) + 32
                        t = _16841 + (4 * ceil32(return_data.size)) + _22542 + 160
                        u = _16841 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22722:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25072 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25072))
                        staticcall address(_25072).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25602] - ext_call.return_data[0]
                        continue 
                    mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                    mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17390))
                    call address(_17390).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17414), -1
                    mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19676 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                    t = 0
                    u = _16841 + 32
                    v = _16841 + (6 * ceil32(return_data.size)) + 324
                    while t < mem[_16841]:
                        mem[v] = mem[u + 12 len 20]
                        _16730 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19676))
                    call address(_19676).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _22543 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _22723 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22723
                    require return_data.size >= _22543 + (32 * _22723) + 32
                    t = _16841 + (6 * ceil32(return_data.size)) + _22543 + 160
                    u = _16841 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _22723:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16841] - 1 < mem[_16841]
                    _25074 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25074))
                    staticcall address(_25074).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25603 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16841
                    s = mem[_25603] - ext_call.return_data[0]
                    continue 
                require idx + -(_11210 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11210 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                    _16844 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16844 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16844]
                    mem[_16844 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16844]
                    mem[_16844 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16844]
                    mem[_16844 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16844]
                    mem[_16844 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16844] - 1 < mem[_16844]
                    mem[_16844 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16844] - 1) + _16844 + 44 len 20])
                    staticcall mem[(32 * mem[_16844] - 1) + _16844 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16844 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16844]
                    _17446 = mem[_16844 + 32]
                    require idx + -(_11210 / 2) + 2 < mem[96]
                    _17470 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16844 + 44 len 20])
                        staticcall mem[_16844 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                        require ext_code.size(mem[_16844 + 44 len 20])
                        staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17470)
                        mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 2 < mem[96]
                            _18516 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                            mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                            t = 0
                            u = _16844 + 32
                            v = _16844 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16844]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18516))
                            call address(_18516).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16844 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22556 = mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16844 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22736 = mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16844 + (6 * ceil32(return_data.size)) + 160] = _22736
                            require return_data.size >= _22556 + (32 * _22736) + 32
                            t = _16844 + (4 * ceil32(return_data.size)) + _22556 + 192
                            u = _16844 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22736:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16844] - 1 < mem[_16844]
                            _25100 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25100))
                            staticcall address(_25100).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25616 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16844
                            s = mem[_25616] - ext_call.return_data[0]
                            continue 
                        mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                        mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17446))
                        call address(_17446).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17470), -1
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 2 < mem[96]
                        _19287 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                        mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                        t = 0
                        u = _16844 + 32
                        v = _16844 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16844]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19287))
                        call address(_19287).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16844 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22557 = mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16844 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22737 = mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16844 + (7 * ceil32(return_data.size)) + 160] = _22737
                        require return_data.size >= _22557 + (32 * _22737) + 32
                        t = _16844 + (6 * ceil32(return_data.size)) + _22557 + 192
                        u = _16844 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22737:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16844] - 1 < mem[_16844]
                        _25102 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25102))
                        staticcall address(_25102).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25617 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16844
                        s = mem[_25617] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16844 + 44 len 20])
                        staticcall mem[_16844 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                        require ext_code.size(mem[_16844 + 44 len 20])
                        staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17470)
                        mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 2 < mem[96]
                            _18783 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                            mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                            t = 0
                            u = _16844 + 32
                            v = _16844 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16844]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18783))
                            call address(_18783).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16844 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22558 = mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16844 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22738 = mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16844 + (6 * ceil32(return_data.size)) + 160] = _22738
                            require return_data.size >= _22558 + (32 * _22738) + 32
                            t = _16844 + (4 * ceil32(return_data.size)) + _22558 + 192
                            u = _16844 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22738:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16844] - 1 < mem[_16844]
                            _25104 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25104))
                            staticcall address(_25104).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16844
                            s = mem[_25618] - ext_call.return_data[0]
                            continue 
                        mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                        mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17446))
                        call address(_17446).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17470), -1
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 2 < mem[96]
                        _19588 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                        mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                        t = 0
                        u = _16844 + 32
                        v = _16844 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16844]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19588))
                        call address(_19588).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16844 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22559 = mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16844 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22739 = mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16844 + (7 * ceil32(return_data.size)) + 160] = _22739
                        require return_data.size >= _22559 + (32 * _22739) + 32
                        t = _16844 + (6 * ceil32(return_data.size)) + _22559 + 192
                        u = _16844 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22739:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16844] - 1 < mem[_16844]
                        _25106 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25106))
                        staticcall address(_25106).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16844
                        s = mem[_25619] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17470)
                    mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 2 < mem[96]
                        _19075 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                        t = 0
                        u = _16844 + 32
                        v = _16844 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16844]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19075))
                        call address(_19075).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22560 = mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16844 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22740 = mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844 + (4 * ceil32(return_data.size)) + mem[_16844 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16844 + (6 * ceil32(return_data.size)) + 160] = _22740
                        require return_data.size >= _22560 + (32 * _22740) + 32
                        t = _16844 + (4 * ceil32(return_data.size)) + _22560 + 192
                        u = _16844 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22740:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16844] - 1 < mem[_16844]
                        _25108 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25108))
                        staticcall address(_25108).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16844
                        s = mem[_25620] - ext_call.return_data[0]
                        continue 
                    mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                    mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17446))
                    call address(_17446).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17470), -1
                    mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 2 < mem[96]
                    _19864 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                    mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                    t = 0
                    u = _16844 + 32
                    v = _16844 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16844]:
                        mem[v] = mem[u + 12 len 20]
                        _16730 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19864))
                    call address(_19864).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16844 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16844]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16844 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22561 = mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16844 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22741 = mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16844 + (7 * ceil32(return_data.size)) + (32 * mem[_16844 + (6 * ceil32(return_data.size)) + mem[_16844 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16844 + (7 * ceil32(return_data.size)) + 160] = _22741
                    require return_data.size >= _22561 + (32 * _22741) + 32
                    t = _16844 + (6 * ceil32(return_data.size)) + _22561 + 192
                    u = _16844 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22741:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16844] - 1 < mem[_16844]
                    _25110 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25110))
                    staticcall address(_25110).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25621 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16844
                    s = mem[_25621] - ext_call.return_data[0]
                    continue 
                require idx + -(_11210 / 2) + 1 < mem[96]
                require idx - (_11210 / 2) < mem[96]
                if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                    _16968 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_16968 + 32 len 64] = call.data[calldata.size len 64]
                    require idx < mem[96]
                    require 0 < mem[_16968]
                    mem[_16968 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16968]
                    mem[_16968 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require mem[_16968] - 1 < mem[_16968]
                    mem[_16968 + 100] = this.address
                    require ext_code.size(mem[(32 * mem[_16968] - 1) + _16968 + 44 len 20])
                    staticcall mem[(32 * mem[_16968] - 1) + _16968 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16968 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16968 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    require 0 < mem[_16968]
                    _17415 = mem[_16968 + 32]
                    require idx - (_11210 / 2) < mem[96]
                    _17444 = mem[(32 * idx - (_11210 / 2)) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17444)
                        mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11210 / 2) < mem[96]
                            _18438 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                            t = 0
                            u = _16968 + 32
                            v = _16968 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16968]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18438))
                            call address(_18438).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22544 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22724 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22724
                            require return_data.size >= _22544 + (32 * _22724) + 32
                            t = _16968 + (4 * ceil32(return_data.size)) + _22544 + 128
                            u = _16968 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22724:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16968] - 1 < mem[_16968]
                            _25076 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25076))
                            staticcall address(_25076).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25604 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16968
                            s = mem[_25604] - ext_call.return_data[0]
                            continue 
                        mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                        mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17415))
                        call address(_17415).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17444), -1
                        mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11210 / 2) < mem[96]
                        _19183 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                        t = 0
                        u = _16968 + 32
                        v = _16968 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16968]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19183))
                        call address(_19183).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22545 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22725 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22725
                        require return_data.size >= _22545 + (32 * _22725) + 32
                        t = _16968 + (6 * ceil32(return_data.size)) + _22545 + 128
                        u = _16968 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22725:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16968] - 1 < mem[_16968]
                        _25078 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25078))
                        staticcall address(_25078).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25605 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16968
                        s = mem[_25605] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17444)
                        mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11210 / 2) < mem[96]
                            _18687 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                            t = 0
                            u = _16968 + 32
                            v = _16968 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16968]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18687))
                            call address(_18687).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22546 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22726 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22726
                            require return_data.size >= _22546 + (32 * _22726) + 32
                            t = _16968 + (4 * ceil32(return_data.size)) + _22546 + 128
                            u = _16968 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22726:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16968] - 1 < mem[_16968]
                            _25080 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25080))
                            staticcall address(_25080).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25606 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16968
                            s = mem[_25606] - ext_call.return_data[0]
                            continue 
                        mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                        mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17415))
                        call address(_17415).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17444), -1
                        mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11210 / 2) < mem[96]
                        _19486 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                        t = 0
                        u = _16968 + 32
                        v = _16968 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16968]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19486))
                        call address(_19486).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22547 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22727 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22727
                        require return_data.size >= _22547 + (32 * _22727) + 32
                        t = _16968 + (6 * ceil32(return_data.size)) + _22547 + 128
                        u = _16968 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22727:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16968] - 1 < mem[_16968]
                        _25082 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25082))
                        staticcall address(_25082).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25607 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16968
                        s = mem[_25607] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16968 + 44 len 20])
                    staticcall mem[_16968 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                    mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                    require ext_code.size(mem[_16968 + 44 len 20])
                    staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17444)
                    mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx - (_11210 / 2) < mem[96]
                        _18979 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                        mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                        mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                        mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                        t = 0
                        u = _16968 + 32
                        v = _16968 + (4 * ceil32(return_data.size)) + 292
                        while t < mem[_16968]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_18979))
                        call address(_18979).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22548 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22728 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22728
                        require return_data.size >= _22548 + (32 * _22728) + 32
                        t = _16968 + (4 * ceil32(return_data.size)) + _22548 + 128
                        u = _16968 + (6 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22728:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16968] - 1 < mem[_16968]
                        _25084 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25084))
                        staticcall address(_25084).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25608 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16968
                        s = mem[_25608] - ext_call.return_data[0]
                        continue 
                    mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                    mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_17415))
                    call address(_17415).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17444), -1
                    mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx - (_11210 / 2) < mem[96]
                    _19777 = mem[(32 * idx - (_11210 / 2)) + 128]
                    mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                    mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                    mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                    mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                    t = 0
                    u = _16968 + 32
                    v = _16968 + (6 * ceil32(return_data.size)) + 292
                    while t < mem[_16968]:
                        mem[v] = mem[u + 12 len 20]
                        _16730 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                    mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                    require ext_code.size(address(_19777))
                    call address(_19777).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _22549 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                    require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                    _22729 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                    require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                    require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                    mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                    mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22729
                    require return_data.size >= _22549 + (32 * _22729) + 32
                    t = _16968 + (6 * ceil32(return_data.size)) + _22549 + 128
                    u = _16968 + (7 * ceil32(return_data.size)) + 128
                    s = 0
                    while s < _22729:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16968] - 1 < mem[_16968]
                    _25086 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25086))
                    staticcall address(_25086).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25609 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 1
                    s = ext_call.return_data[0]
                    s = _16968
                    s = mem[_25609] - ext_call.return_data[0]
                    continue 
                _16970 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 128
                mem[_16970 + 32 len 96] = call.data[calldata.size len 96]
                require idx < mem[96]
                require 0 < mem[_16970]
                mem[_16970 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16970]
                mem[_16970 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16970]
                mem[_16970 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require mem[_16970] - 1 < mem[_16970]
                mem[_16970 + 132] = this.address
                require ext_code.size(mem[(32 * mem[_16970] - 1) + _16970 + 44 len 20])
                staticcall mem[(32 * mem[_16970] - 1) + _16970 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16970 + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16970 + ceil32(return_data.size) + 128
                require return_data.size >= 32
                require 0 < mem[_16970]
                _17468 = mem[_16970 + 32]
                require idx + -(_11210 / 2) + 1 < mem[96]
                _17486 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17486)
                    mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _18600 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                        s = 0
                        t = _16970 + 32
                        u = _16970 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16970]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18600))
                        call address(_18600).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22370 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22550 = mem[_22370]
                        require mem[_22370] <= test266151307()
                        require _22370 + return_data.size > _22370 + mem[_22370] + 31
                        _22730 = mem[_22370 + mem[_22370]]
                        require mem[_22370 + mem[_22370]] <= test266151307()
                        require (32 * mem[_22370 + mem[_22370]]) + 32 >= 0 and _22370 + ceil32(return_data.size) + (32 * mem[_22370 + mem[_22370]]) + 32 <= test266151307()
                        mem[64] = _22370 + ceil32(return_data.size) + (32 * mem[_22370 + mem[_22370]]) + 32
                        mem[_22370 + ceil32(return_data.size)] = _22730
                        require return_data.size >= _22550 + (32 * _22730) + 32
                        t = _22370 + _22550 + 32
                        u = _22370 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22730:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16970] - 1 < mem[_16970]
                        _25088 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25088))
                        staticcall address(_25088).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25610 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16970
                        s = mem[_25610] - ext_call.return_data[0]
                        continue 
                    mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                    mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17468))
                    call address(_17468).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17486), -1
                    mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19388 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                    s = 0
                    t = _16970 + 32
                    u = _16970 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16970]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19388))
                    call address(_19388).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22371 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22551 = mem[_22371]
                    require mem[_22371] <= test266151307()
                    require _22371 + return_data.size > _22371 + mem[_22371] + 31
                    _22731 = mem[_22371 + mem[_22371]]
                    require mem[_22371 + mem[_22371]] <= test266151307()
                    require (32 * mem[_22371 + mem[_22371]]) + 32 >= 0 and _22371 + ceil32(return_data.size) + (32 * mem[_22371 + mem[_22371]]) + 32 <= test266151307()
                    mem[64] = _22371 + ceil32(return_data.size) + (32 * mem[_22371 + mem[_22371]]) + 32
                    mem[_22371 + ceil32(return_data.size)] = _22731
                    require return_data.size >= _22551 + (32 * _22731) + 32
                    t = _22371 + _22551 + 32
                    u = _22371 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22731:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16970] - 1 < mem[_16970]
                    _25090 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25090))
                    staticcall address(_25090).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25611 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16970
                    s = mem[_25611] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17486)
                    mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _18878 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                        s = 0
                        t = _16970 + 32
                        u = _16970 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16970]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18878))
                        call address(_18878).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22372 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22552 = mem[_22372]
                        require mem[_22372] <= test266151307()
                        require _22372 + return_data.size > _22372 + mem[_22372] + 31
                        _22732 = mem[_22372 + mem[_22372]]
                        require mem[_22372 + mem[_22372]] <= test266151307()
                        require (32 * mem[_22372 + mem[_22372]]) + 32 >= 0 and _22372 + ceil32(return_data.size) + (32 * mem[_22372 + mem[_22372]]) + 32 <= test266151307()
                        mem[64] = _22372 + ceil32(return_data.size) + (32 * mem[_22372 + mem[_22372]]) + 32
                        mem[_22372 + ceil32(return_data.size)] = _22732
                        require return_data.size >= _22552 + (32 * _22732) + 32
                        t = _22372 + _22552 + 32
                        u = _22372 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22732:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16970] - 1 < mem[_16970]
                        _25092 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25092))
                        staticcall address(_25092).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16970
                        s = mem[_25612] - ext_call.return_data[0]
                        continue 
                    mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                    mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17468))
                    call address(_17468).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17486), -1
                    mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19682 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                    s = 0
                    t = _16970 + 32
                    u = _16970 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16970]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19682))
                    call address(_19682).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22373 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22553 = mem[_22373]
                    require mem[_22373] <= test266151307()
                    require _22373 + return_data.size > _22373 + mem[_22373] + 31
                    _22733 = mem[_22373 + mem[_22373]]
                    require mem[_22373 + mem[_22373]] <= test266151307()
                    require (32 * mem[_22373 + mem[_22373]]) + 32 >= 0 and _22373 + ceil32(return_data.size) + (32 * mem[_22373 + mem[_22373]]) + 32 <= test266151307()
                    mem[64] = _22373 + ceil32(return_data.size) + (32 * mem[_22373 + mem[_22373]]) + 32
                    mem[_22373 + ceil32(return_data.size)] = _22733
                    require return_data.size >= _22553 + (32 * _22733) + 32
                    t = _22373 + _22553 + 32
                    u = _22373 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22733:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16970] - 1 < mem[_16970]
                    _25094 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25094))
                    staticcall address(_25094).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25613 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16970
                    s = mem[_25613] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16970 + 44 len 20])
                staticcall mem[_16970 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                require ext_code.size(mem[_16970 + 44 len 20])
                staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17486)
                mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19188 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                    mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                    mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                    mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                    s = 0
                    t = _16970 + 32
                    u = _16970 + (4 * ceil32(return_data.size)) + 324
                    while s < mem[_16970]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19188))
                    call address(_19188).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22374 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22554 = mem[_22374]
                    require mem[_22374] <= test266151307()
                    require _22374 + return_data.size > _22374 + mem[_22374] + 31
                    _22734 = mem[_22374 + mem[_22374]]
                    require mem[_22374 + mem[_22374]] <= test266151307()
                    require (32 * mem[_22374 + mem[_22374]]) + 32 >= 0 and _22374 + ceil32(return_data.size) + (32 * mem[_22374 + mem[_22374]]) + 32 <= test266151307()
                    mem[64] = _22374 + ceil32(return_data.size) + (32 * mem[_22374 + mem[_22374]]) + 32
                    mem[_22374 + ceil32(return_data.size)] = _22734
                    require return_data.size >= _22554 + (32 * _22734) + 32
                    t = _22374 + _22554 + 32
                    u = _22374 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22734:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16970] - 1 < mem[_16970]
                    _25096 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25096))
                    staticcall address(_25096).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25614 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16970
                    s = mem[_25614] - ext_call.return_data[0]
                    continue 
                mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                require ext_code.size(address(_17468))
                call address(_17468).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17486), -1
                mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11210 / 2) + 1 < mem[96]
                _19955 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                s = 0
                t = _16970 + 32
                u = _16970 + (6 * ceil32(return_data.size)) + 324
                while s < mem[_16970]:
                    mem[u] = mem[t + 12 len 20]
                    _16730 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                require ext_code.size(address(_19955))
                call address(_19955).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22375 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22555 = mem[_22375]
                require mem[_22375] <= test266151307()
                require _22375 + return_data.size > _22375 + mem[_22375] + 31
                _22735 = mem[_22375 + mem[_22375]]
                require mem[_22375 + mem[_22375]] <= test266151307()
                require (32 * mem[_22375 + mem[_22375]]) + 32 >= 0 and _22375 + ceil32(return_data.size) + (32 * mem[_22375 + mem[_22375]]) + 32 <= test266151307()
                mem[64] = _22375 + ceil32(return_data.size) + (32 * mem[_22375 + mem[_22375]]) + 32
                mem[_22375 + ceil32(return_data.size)] = _22735
                require return_data.size >= _22555 + (32 * _22735) + 32
                t = _22375 + _22555 + 32
                u = _22375 + ceil32(return_data.size) + 32
                s = 0
                while s < _22735:
                    mem[u] = mem[t]
                    _16730 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16970] - 1 < mem[_16970]
                _25098 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25098))
                staticcall address(_25098).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25615 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16730 = mem[96]
                idx = idx + 2
                s = ext_call.return_data[0]
                s = _16970
                s = mem[_25615] - ext_call.return_data[0]
                continue 
            require _11210 / 2 < mem[96]
            _16748 = mem[(16 * Mask(251, 1, _11210)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16748))
            staticcall address(_16748).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16808 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16808] < _11288 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11215 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11241 = mem[_11215]
                require mem[_11215] == mem[_11215 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11292 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11292)
                require ext_code.size(address(_11241))
                staticcall address(_11241).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11292)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11339 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11371 = mem[_11339]
                require mem[_11339] == mem[_11339 + 12 len 20]
                require ext_code.size(mem[_11339 + 12 len 20])
                staticcall mem[_11339 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11551 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11695 = mem[_11551]
                require mem[_11551] == mem[_11551 + 18 len 14]
                _11819 = mem[_11551 + 32]
                require mem[_11551 + 32] == mem[_11551 + 50 len 14]
                require mem[_11551 + 64] == mem[_11551 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 50 len 14] / (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        idx = idx + 1
                        s = _11371
                        s = 997 * s * Mask(112, 0, _11819) / (997 * s) + (1000 * Mask(112, 0, _11695))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 50 len 14] / (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        idx = idx + 1
                        s = _11371
                        s = 997 * s * Mask(112, 0, _11819) / (997 * s) + (1000 * Mask(112, 0, _11695))
                        continue 
                require (997 * s) + (1000 * mem[_11551 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 18 len 14] / (997 * s) + (1000 * mem[_11551 + 50 len 14])
                idx = idx + 1
                s = _11371
                s = 997 * s * Mask(112, 0, _11695) / (997 * s) + (1000 * Mask(112, 0, _11819))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11213 = mem[96]
            require mem[96] / 2 < mem[96]
            _11238 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11238))
            staticcall address(_11238).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11266 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11291 = mem[_11266]
            _16731 = mem[96]
            idx = _11213 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16731 - 1:
                require idx + -(_11213 / 2) + 1 < mem[96]
                require idx - (_11213 / 2) < mem[96]
                require idx + -(_11213 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                    require idx - (_11213 / 2) < mem[96]
                    if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                        _16847 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16847 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16847]
                        mem[_16847 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16847]
                        mem[_16847 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16847] - 1 < mem[_16847]
                        mem[_16847 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16847] - 1) + _16847 + 44 len 20])
                        staticcall mem[(32 * mem[_16847] - 1) + _16847 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16847 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16847]
                        _17346 = mem[_16847 + 32]
                        require idx - (_11213 / 2) < mem[96]
                        _17370 = mem[(32 * idx - (_11213 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17370)
                            mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18258 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                                s = 0
                                t = _16847 + 32
                                u = _16847 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16847]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16731 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18258))
                                call address(_18258).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22382 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22562 = mem[_22382]
                                require mem[_22382] <= test266151307()
                                require _22382 + return_data.size > _22382 + mem[_22382] + 31
                                _22742 = mem[_22382 + mem[_22382]]
                                require mem[_22382 + mem[_22382]] <= test266151307()
                                require (32 * mem[_22382 + mem[_22382]]) + 32 >= 0 and _22382 + ceil32(return_data.size) + (32 * mem[_22382 + mem[_22382]]) + 32 <= test266151307()
                                mem[64] = _22382 + ceil32(return_data.size) + (32 * mem[_22382 + mem[_22382]]) + 32
                                mem[_22382 + ceil32(return_data.size)] = _22742
                                require return_data.size >= _22562 + (32 * _22742) + 32
                                t = _22382 + _22562 + 32
                                u = _22382 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22742:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16847] - 1 < mem[_16847]
                                _25112 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25112))
                                staticcall address(_25112).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25622 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16847
                                s = mem[_25622] - ext_call.return_data[0]
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17346))
                            call address(_17346).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17370), -1
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _18885 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18885))
                            call address(_18885).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22383 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22563 = mem[_22383]
                            require mem[_22383] <= test266151307()
                            require _22383 + return_data.size > _22383 + mem[_22383] + 31
                            _22743 = mem[_22383 + mem[_22383]]
                            require mem[_22383 + mem[_22383]] <= test266151307()
                            require (32 * mem[_22383 + mem[_22383]]) + 32 >= 0 and _22383 + ceil32(return_data.size) + (32 * mem[_22383 + mem[_22383]]) + 32 <= test266151307()
                            mem[64] = _22383 + ceil32(return_data.size) + (32 * mem[_22383 + mem[_22383]]) + 32
                            mem[_22383 + ceil32(return_data.size)] = _22743
                            require return_data.size >= _22563 + (32 * _22743) + 32
                            t = _22383 + _22563 + 32
                            u = _22383 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22743:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25114 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25114))
                            staticcall address(_25114).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25623 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25623] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17370)
                            mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18446 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                                s = 0
                                t = _16847 + 32
                                u = _16847 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16847]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16731 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18446))
                                call address(_18446).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22384 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22564 = mem[_22384]
                                require mem[_22384] <= test266151307()
                                require _22384 + return_data.size > _22384 + mem[_22384] + 31
                                _22744 = mem[_22384 + mem[_22384]]
                                require mem[_22384 + mem[_22384]] <= test266151307()
                                require (32 * mem[_22384 + mem[_22384]]) + 32 >= 0 and _22384 + ceil32(return_data.size) + (32 * mem[_22384 + mem[_22384]]) + 32 <= test266151307()
                                mem[64] = _22384 + ceil32(return_data.size) + (32 * mem[_22384 + mem[_22384]]) + 32
                                mem[_22384 + ceil32(return_data.size)] = _22744
                                require return_data.size >= _22564 + (32 * _22744) + 32
                                t = _22384 + _22564 + 32
                                u = _22384 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22744:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16847] - 1 < mem[_16847]
                                _25116 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25116))
                                staticcall address(_25116).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25624 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16847
                                s = mem[_25624] - ext_call.return_data[0]
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17346))
                            call address(_17346).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17370), -1
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _19195 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19195))
                            call address(_19195).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22385 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22565 = mem[_22385]
                            require mem[_22385] <= test266151307()
                            require _22385 + return_data.size > _22385 + mem[_22385] + 31
                            _22745 = mem[_22385 + mem[_22385]]
                            require mem[_22385 + mem[_22385]] <= test266151307()
                            require (32 * mem[_22385 + mem[_22385]]) + 32 >= 0 and _22385 + ceil32(return_data.size) + (32 * mem[_22385 + mem[_22385]]) + 32 <= test266151307()
                            mem[64] = _22385 + ceil32(return_data.size) + (32 * mem[_22385 + mem[_22385]]) + 32
                            mem[_22385 + ceil32(return_data.size)] = _22745
                            require return_data.size >= _22565 + (32 * _22745) + 32
                            t = _22385 + _22565 + 32
                            u = _22385 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22745:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25118 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25118))
                            staticcall address(_25118).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25625 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25625] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16847 + 44 len 20])
                        staticcall mem[_16847 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                        require ext_code.size(mem[_16847 + 44 len 20])
                        staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17370)
                        mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11213 / 2) < mem[96]
                            _18696 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18696))
                            call address(_18696).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22386 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22566 = mem[_22386]
                            require mem[_22386] <= test266151307()
                            require _22386 + return_data.size > _22386 + mem[_22386] + 31
                            _22746 = mem[_22386 + mem[_22386]]
                            require mem[_22386 + mem[_22386]] <= test266151307()
                            require (32 * mem[_22386 + mem[_22386]]) + 32 >= 0 and _22386 + ceil32(return_data.size) + (32 * mem[_22386 + mem[_22386]]) + 32 <= test266151307()
                            mem[64] = _22386 + ceil32(return_data.size) + (32 * mem[_22386 + mem[_22386]]) + 32
                            mem[_22386 + ceil32(return_data.size)] = _22746
                            require return_data.size >= _22566 + (32 * _22746) + 32
                            t = _22386 + _22566 + 32
                            u = _22386 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22746:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25120 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25120))
                            staticcall address(_25120).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25626 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25626] - ext_call.return_data[0]
                            continue 
                        mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                        mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17346))
                        call address(_17346).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17370), -1
                        mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11213 / 2) < mem[96]
                        _19496 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                        s = 0
                        t = _16847 + 32
                        u = _16847 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_16847]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19496))
                        call address(_19496).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22387 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22567 = mem[_22387]
                        require mem[_22387] <= test266151307()
                        require _22387 + return_data.size > _22387 + mem[_22387] + 31
                        _22747 = mem[_22387 + mem[_22387]]
                        require mem[_22387 + mem[_22387]] <= test266151307()
                        require (32 * mem[_22387 + mem[_22387]]) + 32 >= 0 and _22387 + ceil32(return_data.size) + (32 * mem[_22387 + mem[_22387]]) + 32 <= test266151307()
                        mem[64] = _22387 + ceil32(return_data.size) + (32 * mem[_22387 + mem[_22387]]) + 32
                        mem[_22387 + ceil32(return_data.size)] = _22747
                        require return_data.size >= _22567 + (32 * _22747) + 32
                        t = _22387 + _22567 + 32
                        u = _22387 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22747:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16847] - 1 < mem[_16847]
                        _25122 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25122))
                        staticcall address(_25122).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16847
                        s = mem[_25627] - ext_call.return_data[0]
                        continue 
                    _16849 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16849 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16849]
                    mem[_16849 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16849]
                    mem[_16849 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16849]
                    mem[_16849 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16849] - 1 < mem[_16849]
                    mem[_16849 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16849] - 1) + _16849 + 44 len 20])
                    staticcall mem[(32 * mem[_16849] - 1) + _16849 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16849 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16849]
                    _17394 = mem[_16849 + 32]
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _17419 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17419)
                        mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18373 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                            t = 0
                            u = _16849 + 32
                            v = _16849 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16849]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18373))
                            call address(_18373).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22568 = mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16849 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22748 = mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16849 + (6 * ceil32(return_data.size)) + 128] = _22748
                            require return_data.size >= _22568 + (32 * _22748) + 32
                            t = _16849 + (4 * ceil32(return_data.size)) + _22568 + 160
                            u = _16849 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22748:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16849] - 1 < mem[_16849]
                            _25124 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25124))
                            staticcall address(_25124).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16849
                            s = mem[_25628] - ext_call.return_data[0]
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17394))
                        call address(_17394).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17419), -1
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19084 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                        t = 0
                        u = _16849 + 32
                        v = _16849 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16849]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19084))
                        call address(_19084).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22569 = mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16849 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22749 = mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16849 + (7 * ceil32(return_data.size)) + 128] = _22749
                        require return_data.size >= _22569 + (32 * _22749) + 32
                        t = _16849 + (6 * ceil32(return_data.size)) + _22569 + 160
                        u = _16849 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22749:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25126 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25126))
                        staticcall address(_25126).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25629] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17419)
                        mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18608 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                            t = 0
                            u = _16849 + 32
                            v = _16849 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16849]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18608))
                            call address(_18608).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22570 = mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16849 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22750 = mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16849 + (6 * ceil32(return_data.size)) + 128] = _22750
                            require return_data.size >= _22570 + (32 * _22750) + 32
                            t = _16849 + (4 * ceil32(return_data.size)) + _22570 + 160
                            u = _16849 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22750:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16849] - 1 < mem[_16849]
                            _25128 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25128))
                            staticcall address(_25128).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25630 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16849
                            s = mem[_25630] - ext_call.return_data[0]
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17394))
                        call address(_17394).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17419), -1
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19397 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                        t = 0
                        u = _16849 + 32
                        v = _16849 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16849]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19397))
                        call address(_19397).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22571 = mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16849 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22751 = mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16849 + (7 * ceil32(return_data.size)) + 128] = _22751
                        require return_data.size >= _22571 + (32 * _22751) + 32
                        t = _16849 + (6 * ceil32(return_data.size)) + _22571 + 160
                        u = _16849 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22751:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25130 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25130))
                        staticcall address(_25130).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25631 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25631] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16849 + 44 len 20])
                    staticcall mem[_16849 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                    require ext_code.size(mem[_16849 + 44 len 20])
                    staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17419)
                    mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _18890 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                        t = 0
                        u = _16849 + 32
                        v = _16849 + (4 * ceil32(return_data.size)) + 324
                        while t < mem[_16849]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18890))
                        call address(_18890).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22572 = mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16849 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22752 = mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849 + (4 * ceil32(return_data.size)) + mem[_16849 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128] = _22752
                        require return_data.size >= _22572 + (32 * _22752) + 32
                        t = _16849 + (4 * ceil32(return_data.size)) + _22572 + 160
                        u = _16849 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22752:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25132 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25132))
                        staticcall address(_25132).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25632] - ext_call.return_data[0]
                        continue 
                    mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                    mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17394))
                    call address(_17394).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17419), -1
                    mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19693 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                    t = 0
                    u = _16849 + 32
                    v = _16849 + (6 * ceil32(return_data.size)) + 324
                    while t < mem[_16849]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19693))
                    call address(_19693).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16849 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16849]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16849 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _22573 = mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16849 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _22753 = mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _16849 + (7 * ceil32(return_data.size)) + (32 * mem[_16849 + (6 * ceil32(return_data.size)) + mem[_16849 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_16849 + (7 * ceil32(return_data.size)) + 128] = _22753
                    require return_data.size >= _22573 + (32 * _22753) + 32
                    t = _16849 + (6 * ceil32(return_data.size)) + _22573 + 160
                    u = _16849 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _22753:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16849] - 1 < mem[_16849]
                    _25134 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25134))
                    staticcall address(_25134).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25633 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16849
                    s = mem[_25633] - ext_call.return_data[0]
                    continue 
                require idx + -(_11213 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11213 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                    _16852 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16852 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16852]
                    mem[_16852 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16852]
                    mem[_16852 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16852]
                    mem[_16852 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16852]
                    mem[_16852 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16852] - 1 < mem[_16852]
                    mem[_16852 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16852] - 1) + _16852 + 44 len 20])
                    staticcall mem[(32 * mem[_16852] - 1) + _16852 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16852 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16852]
                    _17450 = mem[_16852 + 32]
                    require idx + -(_11213 / 2) + 2 < mem[96]
                    _17473 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16852 + 44 len 20])
                        staticcall mem[_16852 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                        require ext_code.size(mem[_16852 + 44 len 20])
                        staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17473)
                        mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 2 < mem[96]
                            _18530 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                            mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                            t = 0
                            u = _16852 + 32
                            v = _16852 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16852]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18530))
                            call address(_18530).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22586 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22766 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22766
                            require return_data.size >= _22586 + (32 * _22766) + 32
                            t = _16852 + (4 * ceil32(return_data.size)) + _22586 + 192
                            u = _16852 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22766:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16852] - 1 < mem[_16852]
                            _25160 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25160))
                            staticcall address(_25160).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25646 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16852
                            s = mem[_25646] - ext_call.return_data[0]
                            continue 
                        mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                        mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17450))
                        call address(_17450).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17473), -1
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 2 < mem[96]
                        _19304 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                        t = 0
                        u = _16852 + 32
                        v = _16852 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16852]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19304))
                        call address(_19304).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22587 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22767 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22767
                        require return_data.size >= _22587 + (32 * _22767) + 32
                        t = _16852 + (6 * ceil32(return_data.size)) + _22587 + 192
                        u = _16852 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22767:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16852] - 1 < mem[_16852]
                        _25162 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25162))
                        staticcall address(_25162).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16852
                        s = mem[_25647] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16852 + 44 len 20])
                        staticcall mem[_16852 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                        require ext_code.size(mem[_16852 + 44 len 20])
                        staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17473)
                        mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 2 < mem[96]
                            _18799 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                            mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                            t = 0
                            u = _16852 + 32
                            v = _16852 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16852]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18799))
                            call address(_18799).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22588 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22768 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22768
                            require return_data.size >= _22588 + (32 * _22768) + 32
                            t = _16852 + (4 * ceil32(return_data.size)) + _22588 + 192
                            u = _16852 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22768:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16852] - 1 < mem[_16852]
                            _25164 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25164))
                            staticcall address(_25164).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25648 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16852
                            s = mem[_25648] - ext_call.return_data[0]
                            continue 
                        mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                        mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17450))
                        call address(_17450).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17473), -1
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 2 < mem[96]
                        _19604 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                        t = 0
                        u = _16852 + 32
                        v = _16852 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16852]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19604))
                        call address(_19604).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22589 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22769 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22769
                        require return_data.size >= _22589 + (32 * _22769) + 32
                        t = _16852 + (6 * ceil32(return_data.size)) + _22589 + 192
                        u = _16852 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22769:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16852] - 1 < mem[_16852]
                        _25166 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25166))
                        staticcall address(_25166).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25649 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16852
                        s = mem[_25649] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17473)
                    mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 2 < mem[96]
                        _19095 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                        t = 0
                        u = _16852 + 32
                        v = _16852 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16852]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19095))
                        call address(_19095).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22590 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22770 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22770
                        require return_data.size >= _22590 + (32 * _22770) + 32
                        t = _16852 + (4 * ceil32(return_data.size)) + _22590 + 192
                        u = _16852 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22770:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16852] - 1 < mem[_16852]
                        _25168 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25168))
                        staticcall address(_25168).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25650 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16852
                        s = mem[_25650] - ext_call.return_data[0]
                        continue 
                    mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                    mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17450))
                    call address(_17450).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17473), -1
                    mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 2 < mem[96]
                    _19880 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                    t = 0
                    u = _16852 + 32
                    v = _16852 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16852]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19880))
                    call address(_19880).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22591 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22771 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22771
                    require return_data.size >= _22591 + (32 * _22771) + 32
                    t = _16852 + (6 * ceil32(return_data.size)) + _22591 + 192
                    u = _16852 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22771:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16852] - 1 < mem[_16852]
                    _25170 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25170))
                    staticcall address(_25170).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25651 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16852
                    s = mem[_25651] - ext_call.return_data[0]
                    continue 
                require idx + -(_11213 / 2) + 1 < mem[96]
                require idx - (_11213 / 2) < mem[96]
                if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                    _16978 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_16978 + 32 len 64] = call.data[calldata.size len 64]
                    require idx < mem[96]
                    require 0 < mem[_16978]
                    mem[_16978 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16978]
                    mem[_16978 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require mem[_16978] - 1 < mem[_16978]
                    mem[_16978 + 100] = this.address
                    require ext_code.size(mem[(32 * mem[_16978] - 1) + _16978 + 44 len 20])
                    staticcall mem[(32 * mem[_16978] - 1) + _16978 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16978 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16978 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    require 0 < mem[_16978]
                    _17420 = mem[_16978 + 32]
                    require idx - (_11213 / 2) < mem[96]
                    _17448 = mem[(32 * idx - (_11213 / 2)) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17448)
                        mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11213 / 2) < mem[96]
                            _18450 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                            s = 0
                            t = _16978 + 32
                            u = _16978 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_16978]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18450))
                            call address(_18450).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16978 + (4 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22394 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22574 = mem[_22394]
                            require mem[_22394] <= test266151307()
                            require _22394 + return_data.size > _22394 + mem[_22394] + 31
                            _22754 = mem[_22394 + mem[_22394]]
                            require mem[_22394 + mem[_22394]] <= test266151307()
                            require (32 * mem[_22394 + mem[_22394]]) + 32 >= 0 and _22394 + ceil32(return_data.size) + (32 * mem[_22394 + mem[_22394]]) + 32 <= test266151307()
                            mem[64] = _22394 + ceil32(return_data.size) + (32 * mem[_22394 + mem[_22394]]) + 32
                            mem[_22394 + ceil32(return_data.size)] = _22754
                            require return_data.size >= _22574 + (32 * _22754) + 32
                            t = _22394 + _22574 + 32
                            u = _22394 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22754:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16978] - 1 < mem[_16978]
                            _25136 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25136))
                            staticcall address(_25136).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25634 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16978
                            s = mem[_25634] - ext_call.return_data[0]
                            continue 
                        mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                        mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17420))
                        call address(_17420).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17448), -1
                        mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11213 / 2) < mem[96]
                        _19199 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                        s = 0
                        t = _16978 + 32
                        u = _16978 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_16978]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19199))
                        call address(_19199).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22395 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22575 = mem[_22395]
                        require mem[_22395] <= test266151307()
                        require _22395 + return_data.size > _22395 + mem[_22395] + 31
                        _22755 = mem[_22395 + mem[_22395]]
                        require mem[_22395 + mem[_22395]] <= test266151307()
                        require (32 * mem[_22395 + mem[_22395]]) + 32 >= 0 and _22395 + ceil32(return_data.size) + (32 * mem[_22395 + mem[_22395]]) + 32 <= test266151307()
                        mem[64] = _22395 + ceil32(return_data.size) + (32 * mem[_22395 + mem[_22395]]) + 32
                        mem[_22395 + ceil32(return_data.size)] = _22755
                        require return_data.size >= _22575 + (32 * _22755) + 32
                        t = _22395 + _22575 + 32
                        u = _22395 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22755:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16978] - 1 < mem[_16978]
                        _25138 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25138))
                        staticcall address(_25138).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25635 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16978
                        s = mem[_25635] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17448)
                        mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11213 / 2) < mem[96]
                            _18702 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                            s = 0
                            t = _16978 + 32
                            u = _16978 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_16978]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18702))
                            call address(_18702).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16978 + (4 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22396 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22576 = mem[_22396]
                            require mem[_22396] <= test266151307()
                            require _22396 + return_data.size > _22396 + mem[_22396] + 31
                            _22756 = mem[_22396 + mem[_22396]]
                            require mem[_22396 + mem[_22396]] <= test266151307()
                            require (32 * mem[_22396 + mem[_22396]]) + 32 >= 0 and _22396 + ceil32(return_data.size) + (32 * mem[_22396 + mem[_22396]]) + 32 <= test266151307()
                            mem[64] = _22396 + ceil32(return_data.size) + (32 * mem[_22396 + mem[_22396]]) + 32
                            mem[_22396 + ceil32(return_data.size)] = _22756
                            require return_data.size >= _22576 + (32 * _22756) + 32
                            t = _22396 + _22576 + 32
                            u = _22396 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22756:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16978] - 1 < mem[_16978]
                            _25140 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25140))
                            staticcall address(_25140).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16978
                            s = mem[_25636] - ext_call.return_data[0]
                            continue 
                        mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                        mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17420))
                        call address(_17420).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17448), -1
                        mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11213 / 2) < mem[96]
                        _19502 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                        s = 0
                        t = _16978 + 32
                        u = _16978 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_16978]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19502))
                        call address(_19502).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22397 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22577 = mem[_22397]
                        require mem[_22397] <= test266151307()
                        require _22397 + return_data.size > _22397 + mem[_22397] + 31
                        _22757 = mem[_22397 + mem[_22397]]
                        require mem[_22397 + mem[_22397]] <= test266151307()
                        require (32 * mem[_22397 + mem[_22397]]) + 32 >= 0 and _22397 + ceil32(return_data.size) + (32 * mem[_22397 + mem[_22397]]) + 32 <= test266151307()
                        mem[64] = _22397 + ceil32(return_data.size) + (32 * mem[_22397 + mem[_22397]]) + 32
                        mem[_22397 + ceil32(return_data.size)] = _22757
                        require return_data.size >= _22577 + (32 * _22757) + 32
                        t = _22397 + _22577 + 32
                        u = _22397 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22757:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16978] - 1 < mem[_16978]
                        _25142 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25142))
                        staticcall address(_25142).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16978
                        s = mem[_25637] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16978 + 44 len 20])
                    staticcall mem[_16978 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                    mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                    require ext_code.size(mem[_16978 + 44 len 20])
                    staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17448)
                    mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx - (_11213 / 2) < mem[96]
                        _18993 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                        mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                        mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                        mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                        s = 0
                        t = _16978 + 32
                        u = _16978 + (4 * ceil32(return_data.size)) + 292
                        while s < mem[_16978]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_18993))
                        call address(_18993).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16978 + (4 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22398 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22578 = mem[_22398]
                        require mem[_22398] <= test266151307()
                        require _22398 + return_data.size > _22398 + mem[_22398] + 31
                        _22758 = mem[_22398 + mem[_22398]]
                        require mem[_22398 + mem[_22398]] <= test266151307()
                        require (32 * mem[_22398 + mem[_22398]]) + 32 >= 0 and _22398 + ceil32(return_data.size) + (32 * mem[_22398 + mem[_22398]]) + 32 <= test266151307()
                        mem[64] = _22398 + ceil32(return_data.size) + (32 * mem[_22398 + mem[_22398]]) + 32
                        mem[_22398 + ceil32(return_data.size)] = _22758
                        require return_data.size >= _22578 + (32 * _22758) + 32
                        t = _22398 + _22578 + 32
                        u = _22398 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22758:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16978] - 1 < mem[_16978]
                        _25144 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25144))
                        staticcall address(_25144).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25638 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16978
                        s = mem[_25638] - ext_call.return_data[0]
                        continue 
                    mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                    mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_17420))
                    call address(_17420).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17448), -1
                    mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx - (_11213 / 2) < mem[96]
                    _19790 = mem[(32 * idx - (_11213 / 2)) + 128]
                    mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                    mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                    mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                    mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                    s = 0
                    t = _16978 + 32
                    u = _16978 + (6 * ceil32(return_data.size)) + 292
                    while s < mem[_16978]:
                        mem[u] = mem[t + 12 len 20]
                        _16731 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                    mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                    require ext_code.size(address(_19790))
                    call address(_19790).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978]) + -mem[64] + 288]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22399 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22579 = mem[_22399]
                    require mem[_22399] <= test266151307()
                    require _22399 + return_data.size > _22399 + mem[_22399] + 31
                    _22759 = mem[_22399 + mem[_22399]]
                    require mem[_22399 + mem[_22399]] <= test266151307()
                    require (32 * mem[_22399 + mem[_22399]]) + 32 >= 0 and _22399 + ceil32(return_data.size) + (32 * mem[_22399 + mem[_22399]]) + 32 <= test266151307()
                    mem[64] = _22399 + ceil32(return_data.size) + (32 * mem[_22399 + mem[_22399]]) + 32
                    mem[_22399 + ceil32(return_data.size)] = _22759
                    require return_data.size >= _22579 + (32 * _22759) + 32
                    t = _22399 + _22579 + 32
                    u = _22399 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22759:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16978] - 1 < mem[_16978]
                    _25146 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25146))
                    staticcall address(_25146).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25639 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 1
                    s = ext_call.return_data[0]
                    s = _16978
                    s = mem[_25639] - ext_call.return_data[0]
                    continue 
                _16980 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 128
                mem[_16980 + 32 len 96] = call.data[calldata.size len 96]
                require idx < mem[96]
                require 0 < mem[_16980]
                mem[_16980 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16980]
                mem[_16980 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16980]
                mem[_16980 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require mem[_16980] - 1 < mem[_16980]
                mem[_16980 + 132] = this.address
                require ext_code.size(mem[(32 * mem[_16980] - 1) + _16980 + 44 len 20])
                staticcall mem[(32 * mem[_16980] - 1) + _16980 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16980 + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16980 + ceil32(return_data.size) + 128
                require return_data.size >= 32
                require 0 < mem[_16980]
                _17471 = mem[_16980 + 32]
                require idx + -(_11213 / 2) + 1 < mem[96]
                _17487 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17487)
                    mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _18615 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                        s = 0
                        t = _16980 + 32
                        u = _16980 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16980]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18615))
                        call address(_18615).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16980 + (4 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22400 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22580 = mem[_22400]
                        require mem[_22400] <= test266151307()
                        require _22400 + return_data.size > _22400 + mem[_22400] + 31
                        _22760 = mem[_22400 + mem[_22400]]
                        require mem[_22400 + mem[_22400]] <= test266151307()
                        require (32 * mem[_22400 + mem[_22400]]) + 32 >= 0 and _22400 + ceil32(return_data.size) + (32 * mem[_22400 + mem[_22400]]) + 32 <= test266151307()
                        mem[64] = _22400 + ceil32(return_data.size) + (32 * mem[_22400 + mem[_22400]]) + 32
                        mem[_22400 + ceil32(return_data.size)] = _22760
                        require return_data.size >= _22580 + (32 * _22760) + 32
                        t = _22400 + _22580 + 32
                        u = _22400 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22760:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16980] - 1 < mem[_16980]
                        _25148 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25148))
                        staticcall address(_25148).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25640 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16980
                        s = mem[_25640] - ext_call.return_data[0]
                        continue 
                    mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                    mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17471))
                    call address(_17471).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17487), -1
                    mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19405 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                    s = 0
                    t = _16980 + 32
                    u = _16980 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16980]:
                        mem[u] = mem[t + 12 len 20]
                        _16731 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19405))
                    call address(_19405).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22401 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22581 = mem[_22401]
                    require mem[_22401] <= test266151307()
                    require _22401 + return_data.size > _22401 + mem[_22401] + 31
                    _22761 = mem[_22401 + mem[_22401]]
                    require mem[_22401 + mem[_22401]] <= test266151307()
                    require (32 * mem[_22401 + mem[_22401]]) + 32 >= 0 and _22401 + ceil32(return_data.size) + (32 * mem[_22401 + mem[_22401]]) + 32 <= test266151307()
                    mem[64] = _22401 + ceil32(return_data.size) + (32 * mem[_22401 + mem[_22401]]) + 32
                    mem[_22401 + ceil32(return_data.size)] = _22761
                    require return_data.size >= _22581 + (32 * _22761) + 32
                    t = _22401 + _22581 + 32
                    u = _22401 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22761:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16980] - 1 < mem[_16980]
                    _25150 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25150))
                    staticcall address(_25150).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25641 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16980
                    s = mem[_25641] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17487)
                    mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _18896 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                        s = 0
                        t = _16980 + 32
                        u = _16980 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16980]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18896))
                        call address(_18896).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16980 + (4 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22402 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22582 = mem[_22402]
                        require mem[_22402] <= test266151307()
                        require _22402 + return_data.size > _22402 + mem[_22402] + 31
                        _22762 = mem[_22402 + mem[_22402]]
                        require mem[_22402 + mem[_22402]] <= test266151307()
                        require (32 * mem[_22402 + mem[_22402]]) + 32 >= 0 and _22402 + ceil32(return_data.size) + (32 * mem[_22402 + mem[_22402]]) + 32 <= test266151307()
                        mem[64] = _22402 + ceil32(return_data.size) + (32 * mem[_22402 + mem[_22402]]) + 32
                        mem[_22402 + ceil32(return_data.size)] = _22762
                        require return_data.size >= _22582 + (32 * _22762) + 32
                        t = _22402 + _22582 + 32
                        u = _22402 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22762:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16980] - 1 < mem[_16980]
                        _25152 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25152))
                        staticcall address(_25152).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16980
                        s = mem[_25642] - ext_call.return_data[0]
                        continue 
                    mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                    mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17471))
                    call address(_17471).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17487), -1
                    mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19699 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                    s = 0
                    t = _16980 + 32
                    u = _16980 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16980]:
                        mem[u] = mem[t + 12 len 20]
                        _16731 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19699))
                    call address(_19699).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22403 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22583 = mem[_22403]
                    require mem[_22403] <= test266151307()
                    require _22403 + return_data.size > _22403 + mem[_22403] + 31
                    _22763 = mem[_22403 + mem[_22403]]
                    require mem[_22403 + mem[_22403]] <= test266151307()
                    require (32 * mem[_22403 + mem[_22403]]) + 32 >= 0 and _22403 + ceil32(return_data.size) + (32 * mem[_22403 + mem[_22403]]) + 32 <= test266151307()
                    mem[64] = _22403 + ceil32(return_data.size) + (32 * mem[_22403 + mem[_22403]]) + 32
                    mem[_22403 + ceil32(return_data.size)] = _22763
                    require return_data.size >= _22583 + (32 * _22763) + 32
                    t = _22403 + _22583 + 32
                    u = _22403 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22763:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16980] - 1 < mem[_16980]
                    _25154 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25154))
                    staticcall address(_25154).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25643 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16980
                    s = mem[_25643] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16980 + 44 len 20])
                staticcall mem[_16980 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                require ext_code.size(mem[_16980 + 44 len 20])
                staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17487)
                mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19204 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                    mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                    mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                    mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                    s = 0
                    t = _16980 + 32
                    u = _16980 + (4 * ceil32(return_data.size)) + 324
                    while s < mem[_16980]:
                        mem[u] = mem[t + 12 len 20]
                        _16731 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19204))
                    call address(_19204).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16980 + (4 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22404 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22584 = mem[_22404]
                    require mem[_22404] <= test266151307()
                    require _22404 + return_data.size > _22404 + mem[_22404] + 31
                    _22764 = mem[_22404 + mem[_22404]]
                    require mem[_22404 + mem[_22404]] <= test266151307()
                    require (32 * mem[_22404 + mem[_22404]]) + 32 >= 0 and _22404 + ceil32(return_data.size) + (32 * mem[_22404 + mem[_22404]]) + 32 <= test266151307()
                    mem[64] = _22404 + ceil32(return_data.size) + (32 * mem[_22404 + mem[_22404]]) + 32
                    mem[_22404 + ceil32(return_data.size)] = _22764
                    require return_data.size >= _22584 + (32 * _22764) + 32
                    t = _22404 + _22584 + 32
                    u = _22404 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22764:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16980] - 1 < mem[_16980]
                    _25156 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25156))
                    staticcall address(_25156).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25644 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16980
                    s = mem[_25644] - ext_call.return_data[0]
                    continue 
                mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                require ext_code.size(address(_17471))
                call address(_17471).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17487), -1
                mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11213 / 2) + 1 < mem[96]
                _19968 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                s = 0
                t = _16980 + 32
                u = _16980 + (6 * ceil32(return_data.size)) + 324
                while s < mem[_16980]:
                    mem[u] = mem[t + 12 len 20]
                    _16731 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                require ext_code.size(address(_19968))
                call address(_19968).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980]) + -mem[64] + 320]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22405 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22585 = mem[_22405]
                require mem[_22405] <= test266151307()
                require _22405 + return_data.size > _22405 + mem[_22405] + 31
                _22765 = mem[_22405 + mem[_22405]]
                require mem[_22405 + mem[_22405]] <= test266151307()
                require (32 * mem[_22405 + mem[_22405]]) + 32 >= 0 and _22405 + ceil32(return_data.size) + (32 * mem[_22405 + mem[_22405]]) + 32 <= test266151307()
                mem[64] = _22405 + ceil32(return_data.size) + (32 * mem[_22405 + mem[_22405]]) + 32
                mem[_22405 + ceil32(return_data.size)] = _22765
                require return_data.size >= _22585 + (32 * _22765) + 32
                t = _22405 + _22585 + 32
                u = _22405 + ceil32(return_data.size) + 32
                s = 0
                while s < _22765:
                    mem[u] = mem[t]
                    _16731 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16980] - 1 < mem[_16980]
                _25158 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25158))
                staticcall address(_25158).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25645 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16731 = mem[96]
                idx = idx + 2
                s = ext_call.return_data[0]
                s = _16980
                s = mem[_25645] - ext_call.return_data[0]
                continue 
            require _11213 / 2 < mem[96]
            _16752 = mem[(16 * Mask(251, 1, _11213)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16752))
            staticcall address(_16752).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16812 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16812] < _11291 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11218 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11245 = mem[_11218]
                    require mem[_11218] == mem[_11218 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11295 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11295)
                    require ext_code.size(address(_11245))
                    staticcall address(_11245).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11295)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11344 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11374 = mem[_11344]
                    require mem[_11344] == mem[_11344 + 12 len 20]
                    require ext_code.size(mem[_11344 + 12 len 20])
                    staticcall mem[_11344 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11557 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11704 = mem[_11557]
                    require mem[_11557] == mem[_11557 + 18 len 14]
                    _11827 = mem[_11557 + 32]
                    require mem[_11557 + 32] == mem[_11557 + 50 len 14]
                    require mem[_11557 + 64] == mem[_11557 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 50 len 14] / (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            idx = idx + 1
                            s = _11374
                            s = 997 * s * Mask(112, 0, _11827) / (997 * s) + (1000 * Mask(112, 0, _11704))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 50 len 14] / (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            idx = idx + 1
                            s = _11374
                            s = 997 * s * Mask(112, 0, _11827) / (997 * s) + (1000 * Mask(112, 0, _11704))
                            continue 
                    require (997 * s) + (1000 * mem[_11557 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 18 len 14] / (997 * s) + (1000 * mem[_11557 + 50 len 14])
                    idx = idx + 1
                    s = _11374
                    s = 997 * s * Mask(112, 0, _11704) / (997 * s) + (1000 * Mask(112, 0, _11827))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11216 = mem[96]
                require mem[96] / 2 < mem[96]
                _11242 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11242))
                staticcall address(_11242).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11268 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11294 = mem[_11268]
                _16732 = mem[96]
                idx = _11216 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16732 - 1:
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    require idx - (_11216 / 2) < mem[96]
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                        require idx - (_11216 / 2) < mem[96]
                        if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                            _16855 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16855 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16855]
                            mem[_16855 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16855]
                            mem[_16855 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16855] - 1 < mem[_16855]
                            mem[_16855 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16855] - 1) + _16855 + 44 len 20])
                            staticcall mem[(32 * mem[_16855] - 1) + _16855 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16855 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16855]
                            _17350 = mem[_16855 + 32]
                            require idx - (_11216 / 2) < mem[96]
                            _17374 = mem[(32 * idx - (_11216 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17374)
                                mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18268 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                    s = 0
                                    t = _16855 + 32
                                    u = _16855 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16855]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18268))
                                    call address(_18268).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22412 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22592 = mem[_22412]
                                    require mem[_22412] <= test266151307()
                                    require _22412 + return_data.size > _22412 + mem[_22412] + 31
                                    _22772 = mem[_22412 + mem[_22412]]
                                    require mem[_22412 + mem[_22412]] <= test266151307()
                                    require (32 * mem[_22412 + mem[_22412]]) + 32 >= 0 and _22412 + ceil32(return_data.size) + (32 * mem[_22412 + mem[_22412]]) + 32 <= test266151307()
                                    mem[64] = _22412 + ceil32(return_data.size) + (32 * mem[_22412 + mem[_22412]]) + 32
                                    mem[_22412 + ceil32(return_data.size)] = _22772
                                    require return_data.size >= _22592 + (32 * _22772) + 32
                                    t = _22412 + _22592 + 32
                                    u = _22412 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22772:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16855] - 1 < mem[_16855]
                                    _25172 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25172))
                                    staticcall address(_25172).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25652 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16855
                                    s = mem[_25652] - ext_call.return_data[0]
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17350))
                                call address(_17350).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17374), -1
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _18903 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18903))
                                call address(_18903).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22413 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22593 = mem[_22413]
                                require mem[_22413] <= test266151307()
                                require _22413 + return_data.size > _22413 + mem[_22413] + 31
                                _22773 = mem[_22413 + mem[_22413]]
                                require mem[_22413 + mem[_22413]] <= test266151307()
                                require (32 * mem[_22413 + mem[_22413]]) + 32 >= 0 and _22413 + ceil32(return_data.size) + (32 * mem[_22413 + mem[_22413]]) + 32 <= test266151307()
                                mem[64] = _22413 + ceil32(return_data.size) + (32 * mem[_22413 + mem[_22413]]) + 32
                                mem[_22413 + ceil32(return_data.size)] = _22773
                                require return_data.size >= _22593 + (32 * _22773) + 32
                                t = _22413 + _22593 + 32
                                u = _22413 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22773:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25174 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25174))
                                staticcall address(_25174).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25653 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25653] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17374)
                                mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18458 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                    s = 0
                                    t = _16855 + 32
                                    u = _16855 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16855]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18458))
                                    call address(_18458).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22414 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22594 = mem[_22414]
                                    require mem[_22414] <= test266151307()
                                    require _22414 + return_data.size > _22414 + mem[_22414] + 31
                                    _22774 = mem[_22414 + mem[_22414]]
                                    require mem[_22414 + mem[_22414]] <= test266151307()
                                    require (32 * mem[_22414 + mem[_22414]]) + 32 >= 0 and _22414 + ceil32(return_data.size) + (32 * mem[_22414 + mem[_22414]]) + 32 <= test266151307()
                                    mem[64] = _22414 + ceil32(return_data.size) + (32 * mem[_22414 + mem[_22414]]) + 32
                                    mem[_22414 + ceil32(return_data.size)] = _22774
                                    require return_data.size >= _22594 + (32 * _22774) + 32
                                    t = _22414 + _22594 + 32
                                    u = _22414 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22774:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16855] - 1 < mem[_16855]
                                    _25176 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25176))
                                    staticcall address(_25176).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25654 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16855
                                    s = mem[_25654] - ext_call.return_data[0]
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17350))
                                call address(_17350).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17374), -1
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _19211 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19211))
                                call address(_19211).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22415 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22595 = mem[_22415]
                                require mem[_22415] <= test266151307()
                                require _22415 + return_data.size > _22415 + mem[_22415] + 31
                                _22775 = mem[_22415 + mem[_22415]]
                                require mem[_22415 + mem[_22415]] <= test266151307()
                                require (32 * mem[_22415 + mem[_22415]]) + 32 >= 0 and _22415 + ceil32(return_data.size) + (32 * mem[_22415 + mem[_22415]]) + 32 <= test266151307()
                                mem[64] = _22415 + ceil32(return_data.size) + (32 * mem[_22415 + mem[_22415]]) + 32
                                mem[_22415 + ceil32(return_data.size)] = _22775
                                require return_data.size >= _22595 + (32 * _22775) + 32
                                t = _22415 + _22595 + 32
                                u = _22415 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22775:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25178 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25178))
                                staticcall address(_25178).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25655 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25655] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16855 + 44 len 20])
                            staticcall mem[_16855 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                            require ext_code.size(mem[_16855 + 44 len 20])
                            staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17374)
                            mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11216 / 2) < mem[96]
                                _18711 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18711))
                                call address(_18711).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22416 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22596 = mem[_22416]
                                require mem[_22416] <= test266151307()
                                require _22416 + return_data.size > _22416 + mem[_22416] + 31
                                _22776 = mem[_22416 + mem[_22416]]
                                require mem[_22416 + mem[_22416]] <= test266151307()
                                require (32 * mem[_22416 + mem[_22416]]) + 32 >= 0 and _22416 + ceil32(return_data.size) + (32 * mem[_22416 + mem[_22416]]) + 32 <= test266151307()
                                mem[64] = _22416 + ceil32(return_data.size) + (32 * mem[_22416 + mem[_22416]]) + 32
                                mem[_22416 + ceil32(return_data.size)] = _22776
                                require return_data.size >= _22596 + (32 * _22776) + 32
                                t = _22416 + _22596 + 32
                                u = _22416 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22776:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25180 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25180))
                                staticcall address(_25180).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25656 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25656] - ext_call.return_data[0]
                                continue 
                            mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                            mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17350))
                            call address(_17350).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17374), -1
                            mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11216 / 2) < mem[96]
                            _19512 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                            s = 0
                            t = _16855 + 32
                            u = _16855 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16855]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19512))
                            call address(_19512).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22417 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22597 = mem[_22417]
                            require mem[_22417] <= test266151307()
                            require _22417 + return_data.size > _22417 + mem[_22417] + 31
                            _22777 = mem[_22417 + mem[_22417]]
                            require mem[_22417 + mem[_22417]] <= test266151307()
                            require (32 * mem[_22417 + mem[_22417]]) + 32 >= 0 and _22417 + ceil32(return_data.size) + (32 * mem[_22417 + mem[_22417]]) + 32 <= test266151307()
                            mem[64] = _22417 + ceil32(return_data.size) + (32 * mem[_22417 + mem[_22417]]) + 32
                            mem[_22417 + ceil32(return_data.size)] = _22777
                            require return_data.size >= _22597 + (32 * _22777) + 32
                            t = _22417 + _22597 + 32
                            u = _22417 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22777:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16855] - 1 < mem[_16855]
                            _25182 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25182))
                            staticcall address(_25182).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16855
                            s = mem[_25657] - ext_call.return_data[0]
                            continue 
                        _16857 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16857 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16857]
                        mem[_16857 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16857]
                        mem[_16857 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16857]
                        mem[_16857 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16857] - 1 < mem[_16857]
                        mem[_16857 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16857] - 1) + _16857 + 44 len 20])
                        staticcall mem[(32 * mem[_16857] - 1) + _16857 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16857 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16857]
                        _17398 = mem[_16857 + 32]
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _17424 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17424)
                            mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18386 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                                s = 0
                                t = _16857 + 32
                                u = _16857 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16857]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18386))
                                call address(_18386).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22418 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22598 = mem[_22418]
                                require mem[_22418] <= test266151307()
                                require _22418 + return_data.size > _22418 + mem[_22418] + 31
                                _22778 = mem[_22418 + mem[_22418]]
                                require mem[_22418 + mem[_22418]] <= test266151307()
                                require (32 * mem[_22418 + mem[_22418]]) + 32 >= 0 and _22418 + ceil32(return_data.size) + (32 * mem[_22418 + mem[_22418]]) + 32 <= test266151307()
                                mem[64] = _22418 + ceil32(return_data.size) + (32 * mem[_22418 + mem[_22418]]) + 32
                                mem[_22418 + ceil32(return_data.size)] = _22778
                                require return_data.size >= _22598 + (32 * _22778) + 32
                                t = _22418 + _22598 + 32
                                u = _22418 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22778:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16857] - 1 < mem[_16857]
                                _25184 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25184))
                                staticcall address(_25184).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25658 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16857
                                s = mem[_25658] - ext_call.return_data[0]
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17398))
                            call address(_17398).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17424), -1
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19104 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19104))
                            call address(_19104).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22419 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22599 = mem[_22419]
                            require mem[_22419] <= test266151307()
                            require _22419 + return_data.size > _22419 + mem[_22419] + 31
                            _22779 = mem[_22419 + mem[_22419]]
                            require mem[_22419 + mem[_22419]] <= test266151307()
                            require (32 * mem[_22419 + mem[_22419]]) + 32 >= 0 and _22419 + ceil32(return_data.size) + (32 * mem[_22419 + mem[_22419]]) + 32 <= test266151307()
                            mem[64] = _22419 + ceil32(return_data.size) + (32 * mem[_22419 + mem[_22419]]) + 32
                            mem[_22419 + ceil32(return_data.size)] = _22779
                            require return_data.size >= _22599 + (32 * _22779) + 32
                            t = _22419 + _22599 + 32
                            u = _22419 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22779:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25186 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25186))
                            staticcall address(_25186).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25659] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17424)
                            mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18623 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                                s = 0
                                t = _16857 + 32
                                u = _16857 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16857]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18623))
                                call address(_18623).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22420 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22600 = mem[_22420]
                                require mem[_22420] <= test266151307()
                                require _22420 + return_data.size > _22420 + mem[_22420] + 31
                                _22780 = mem[_22420 + mem[_22420]]
                                require mem[_22420 + mem[_22420]] <= test266151307()
                                require (32 * mem[_22420 + mem[_22420]]) + 32 >= 0 and _22420 + ceil32(return_data.size) + (32 * mem[_22420 + mem[_22420]]) + 32 <= test266151307()
                                mem[64] = _22420 + ceil32(return_data.size) + (32 * mem[_22420 + mem[_22420]]) + 32
                                mem[_22420 + ceil32(return_data.size)] = _22780
                                require return_data.size >= _22600 + (32 * _22780) + 32
                                t = _22420 + _22600 + 32
                                u = _22420 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22780:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16857] - 1 < mem[_16857]
                                _25188 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25188))
                                staticcall address(_25188).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25660 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16857
                                s = mem[_25660] - ext_call.return_data[0]
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17398))
                            call address(_17398).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17424), -1
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19414 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19414))
                            call address(_19414).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22421 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22601 = mem[_22421]
                            require mem[_22421] <= test266151307()
                            require _22421 + return_data.size > _22421 + mem[_22421] + 31
                            _22781 = mem[_22421 + mem[_22421]]
                            require mem[_22421 + mem[_22421]] <= test266151307()
                            require (32 * mem[_22421 + mem[_22421]]) + 32 >= 0 and _22421 + ceil32(return_data.size) + (32 * mem[_22421 + mem[_22421]]) + 32 <= test266151307()
                            mem[64] = _22421 + ceil32(return_data.size) + (32 * mem[_22421 + mem[_22421]]) + 32
                            mem[_22421 + ceil32(return_data.size)] = _22781
                            require return_data.size >= _22601 + (32 * _22781) + 32
                            t = _22421 + _22601 + 32
                            u = _22421 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22781:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25190 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25190))
                            staticcall address(_25190).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25661 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25661] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16857 + 44 len 20])
                        staticcall mem[_16857 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                        require ext_code.size(mem[_16857 + 44 len 20])
                        staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17424)
                        mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _18908 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18908))
                            call address(_18908).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22422 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22602 = mem[_22422]
                            require mem[_22422] <= test266151307()
                            require _22422 + return_data.size > _22422 + mem[_22422] + 31
                            _22782 = mem[_22422 + mem[_22422]]
                            require mem[_22422 + mem[_22422]] <= test266151307()
                            require (32 * mem[_22422 + mem[_22422]]) + 32 >= 0 and _22422 + ceil32(return_data.size) + (32 * mem[_22422 + mem[_22422]]) + 32 <= test266151307()
                            mem[64] = _22422 + ceil32(return_data.size) + (32 * mem[_22422 + mem[_22422]]) + 32
                            mem[_22422 + ceil32(return_data.size)] = _22782
                            require return_data.size >= _22602 + (32 * _22782) + 32
                            t = _22422 + _22602 + 32
                            u = _22422 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22782:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25192 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25192))
                            staticcall address(_25192).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25662] - ext_call.return_data[0]
                            continue 
                        mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                        mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17398))
                        call address(_17398).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17424), -1
                        mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19710 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                        s = 0
                        t = _16857 + 32
                        u = _16857 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16857]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19710))
                        call address(_19710).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22423 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22603 = mem[_22423]
                        require mem[_22423] <= test266151307()
                        require _22423 + return_data.size > _22423 + mem[_22423] + 31
                        _22783 = mem[_22423 + mem[_22423]]
                        require mem[_22423 + mem[_22423]] <= test266151307()
                        require (32 * mem[_22423 + mem[_22423]]) + 32 >= 0 and _22423 + ceil32(return_data.size) + (32 * mem[_22423 + mem[_22423]]) + 32 <= test266151307()
                        mem[64] = _22423 + ceil32(return_data.size) + (32 * mem[_22423 + mem[_22423]]) + 32
                        mem[_22423 + ceil32(return_data.size)] = _22783
                        require return_data.size >= _22603 + (32 * _22783) + 32
                        t = _22423 + _22603 + 32
                        u = _22423 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22783:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16857] - 1 < mem[_16857]
                        _25194 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25194))
                        staticcall address(_25194).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25663 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16857
                        s = mem[_25663] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11216 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11216 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        require idx - (_11216 / 2) < mem[96]
                        if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                            _16988 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16988 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16988]
                            mem[_16988 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16988]
                            mem[_16988 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16988] - 1 < mem[_16988]
                            mem[_16988 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16988] - 1) + _16988 + 44 len 20])
                            staticcall mem[(32 * mem[_16988] - 1) + _16988 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16988 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16988]
                            _17425 = mem[_16988 + 32]
                            require idx - (_11216 / 2) < mem[96]
                            _17452 = mem[(32 * idx - (_11216 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16988 + 44 len 20])
                                staticcall mem[_16988 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                                require ext_code.size(mem[_16988 + 44 len 20])
                                staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17452)
                                mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18462 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                                    s = 0
                                    t = _16988 + 32
                                    u = _16988 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16988]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18462))
                                    call address(_18462).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16988 + (4 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22424 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22604 = mem[_22424]
                                    require mem[_22424] <= test266151307()
                                    require _22424 + return_data.size > _22424 + mem[_22424] + 31
                                    _22784 = mem[_22424 + mem[_22424]]
                                    require mem[_22424 + mem[_22424]] <= test266151307()
                                    require (32 * mem[_22424 + mem[_22424]]) + 32 >= 0 and _22424 + ceil32(return_data.size) + (32 * mem[_22424 + mem[_22424]]) + 32 <= test266151307()
                                    mem[64] = _22424 + ceil32(return_data.size) + (32 * mem[_22424 + mem[_22424]]) + 32
                                    mem[_22424 + ceil32(return_data.size)] = _22784
                                    require return_data.size >= _22604 + (32 * _22784) + 32
                                    t = _22424 + _22604 + 32
                                    u = _22424 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22784:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16988] - 1 < mem[_16988]
                                    _25196 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25196))
                                    staticcall address(_25196).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25664 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16988
                                    s = mem[_25664] - ext_call.return_data[0]
                                    continue 
                                mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                                mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17425))
                                call address(_17425).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17452), -1
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _19215 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                                s = 0
                                t = _16988 + 32
                                u = _16988 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16988]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19215))
                                call address(_19215).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22425 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22605 = mem[_22425]
                                require mem[_22425] <= test266151307()
                                require _22425 + return_data.size > _22425 + mem[_22425] + 31
                                _22785 = mem[_22425 + mem[_22425]]
                                require mem[_22425 + mem[_22425]] <= test266151307()
                                require (32 * mem[_22425 + mem[_22425]]) + 32 >= 0 and _22425 + ceil32(return_data.size) + (32 * mem[_22425 + mem[_22425]]) + 32 <= test266151307()
                                mem[64] = _22425 + ceil32(return_data.size) + (32 * mem[_22425 + mem[_22425]]) + 32
                                mem[_22425 + ceil32(return_data.size)] = _22785
                                require return_data.size >= _22605 + (32 * _22785) + 32
                                t = _22425 + _22605 + 32
                                u = _22425 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22785:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16988] - 1 < mem[_16988]
                                _25198 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25198))
                                staticcall address(_25198).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25665 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16988
                                s = mem[_25665] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16988 + 44 len 20])
                                staticcall mem[_16988 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                                require ext_code.size(mem[_16988 + 44 len 20])
                                staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17452)
                                mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18717 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                                    s = 0
                                    t = _16988 + 32
                                    u = _16988 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16988]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18717))
                                    call address(_18717).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16988 + (4 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22426 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22606 = mem[_22426]
                                    require mem[_22426] <= test266151307()
                                    require _22426 + return_data.size > _22426 + mem[_22426] + 31
                                    _22786 = mem[_22426 + mem[_22426]]
                                    require mem[_22426 + mem[_22426]] <= test266151307()
                                    require (32 * mem[_22426 + mem[_22426]]) + 32 >= 0 and _22426 + ceil32(return_data.size) + (32 * mem[_22426 + mem[_22426]]) + 32 <= test266151307()
                                    mem[64] = _22426 + ceil32(return_data.size) + (32 * mem[_22426 + mem[_22426]]) + 32
                                    mem[_22426 + ceil32(return_data.size)] = _22786
                                    require return_data.size >= _22606 + (32 * _22786) + 32
                                    t = _22426 + _22606 + 32
                                    u = _22426 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22786:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16988] - 1 < mem[_16988]
                                    _25200 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25200))
                                    staticcall address(_25200).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25666 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16988
                                    s = mem[_25666] - ext_call.return_data[0]
                                    continue 
                                mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                                mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17425))
                                call address(_17425).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17452), -1
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _19518 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                                s = 0
                                t = _16988 + 32
                                u = _16988 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16988]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19518))
                                call address(_19518).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22427 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22607 = mem[_22427]
                                require mem[_22427] <= test266151307()
                                require _22427 + return_data.size > _22427 + mem[_22427] + 31
                                _22787 = mem[_22427 + mem[_22427]]
                                require mem[_22427 + mem[_22427]] <= test266151307()
                                require (32 * mem[_22427 + mem[_22427]]) + 32 >= 0 and _22427 + ceil32(return_data.size) + (32 * mem[_22427 + mem[_22427]]) + 32 <= test266151307()
                                mem[64] = _22427 + ceil32(return_data.size) + (32 * mem[_22427 + mem[_22427]]) + 32
                                mem[_22427 + ceil32(return_data.size)] = _22787
                                require return_data.size >= _22607 + (32 * _22787) + 32
                                t = _22427 + _22607 + 32
                                u = _22427 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22787:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16988] - 1 < mem[_16988]
                                _25202 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25202))
                                staticcall address(_25202).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25667 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16988
                                s = mem[_25667] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17452)
                            mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11216 / 2) < mem[96]
                                _19007 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                                s = 0
                                t = _16988 + 32
                                u = _16988 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16988]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19007))
                                call address(_19007).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16988 + (4 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22428 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22608 = mem[_22428]
                                require mem[_22428] <= test266151307()
                                require _22428 + return_data.size > _22428 + mem[_22428] + 31
                                _22788 = mem[_22428 + mem[_22428]]
                                require mem[_22428 + mem[_22428]] <= test266151307()
                                require (32 * mem[_22428 + mem[_22428]]) + 32 >= 0 and _22428 + ceil32(return_data.size) + (32 * mem[_22428 + mem[_22428]]) + 32 <= test266151307()
                                mem[64] = _22428 + ceil32(return_data.size) + (32 * mem[_22428 + mem[_22428]]) + 32
                                mem[_22428 + ceil32(return_data.size)] = _22788
                                require return_data.size >= _22608 + (32 * _22788) + 32
                                t = _22428 + _22608 + 32
                                u = _22428 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22788:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16988] - 1 < mem[_16988]
                                _25204 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25204))
                                staticcall address(_25204).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25668 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16988
                                s = mem[_25668] - ext_call.return_data[0]
                                continue 
                            mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                            mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17425))
                            call address(_17425).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17452), -1
                            mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11216 / 2) < mem[96]
                            _19803 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                            s = 0
                            t = _16988 + 32
                            u = _16988 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16988]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19803))
                            call address(_19803).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22429 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22609 = mem[_22429]
                            require mem[_22429] <= test266151307()
                            require _22429 + return_data.size > _22429 + mem[_22429] + 31
                            _22789 = mem[_22429 + mem[_22429]]
                            require mem[_22429 + mem[_22429]] <= test266151307()
                            require (32 * mem[_22429 + mem[_22429]]) + 32 >= 0 and _22429 + ceil32(return_data.size) + (32 * mem[_22429 + mem[_22429]]) + 32 <= test266151307()
                            mem[64] = _22429 + ceil32(return_data.size) + (32 * mem[_22429 + mem[_22429]]) + 32
                            mem[_22429 + ceil32(return_data.size)] = _22789
                            require return_data.size >= _22609 + (32 * _22789) + 32
                            t = _22429 + _22609 + 32
                            u = _22429 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22789:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16988] - 1 < mem[_16988]
                            _25206 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25206))
                            staticcall address(_25206).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25669 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16988
                            s = mem[_25669] - ext_call.return_data[0]
                            continue 
                        _16990 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16990 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16990]
                        mem[_16990 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16990]
                        mem[_16990 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16990]
                        mem[_16990 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16990] - 1 < mem[_16990]
                        mem[_16990 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16990] - 1) + _16990 + 44 len 20])
                        staticcall mem[(32 * mem[_16990] - 1) + _16990 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16990 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16990]
                        _17474 = mem[_16990 + 32]
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _17488 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16990 + 44 len 20])
                            staticcall mem[_16990 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                            require ext_code.size(mem[_16990 + 44 len 20])
                            staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17488)
                            mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18630 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                                s = 0
                                t = _16990 + 32
                                u = _16990 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16990]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18630))
                                call address(_18630).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22430 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22610 = mem[_22430]
                                require mem[_22430] <= test266151307()
                                require _22430 + return_data.size > _22430 + mem[_22430] + 31
                                _22790 = mem[_22430 + mem[_22430]]
                                require mem[_22430 + mem[_22430]] <= test266151307()
                                require (32 * mem[_22430 + mem[_22430]]) + 32 >= 0 and _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32 <= test266151307()
                                mem[64] = _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32
                                mem[_22430 + ceil32(return_data.size)] = _22790
                                require return_data.size >= _22610 + (32 * _22790) + 32
                                t = _22430 + _22610 + 32
                                u = _22430 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22790:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16990] - 1 < mem[_16990]
                                _25208 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25208))
                                staticcall address(_25208).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25670 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16990
                                s = mem[_25670] - ext_call.return_data[0]
                                continue 
                            mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                            mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17474))
                            call address(_17474).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17488), -1
                            mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19422 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                            s = 0
                            t = _16990 + 32
                            u = _16990 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16990]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19422))
                            call address(_19422).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22431 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22611 = mem[_22431]
                            require mem[_22431] <= test266151307()
                            require _22431 + return_data.size > _22431 + mem[_22431] + 31
                            _22791 = mem[_22431 + mem[_22431]]
                            require mem[_22431 + mem[_22431]] <= test266151307()
                            require (32 * mem[_22431 + mem[_22431]]) + 32 >= 0 and _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32 <= test266151307()
                            mem[64] = _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32
                            mem[_22431 + ceil32(return_data.size)] = _22791
                            require return_data.size >= _22611 + (32 * _22791) + 32
                            t = _22431 + _22611 + 32
                            u = _22431 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22791:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16990] - 1 < mem[_16990]
                            _25210 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25210))
                            staticcall address(_25210).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25671 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16990
                            s = mem[_25671] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16990 + 44 len 20])
                            staticcall mem[_16990 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                            require ext_code.size(mem[_16990 + 44 len 20])
                            staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17488)
                            mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18914 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                                s = 0
                                t = _16990 + 32
                                u = _16990 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16990]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18914))
                                call address(_18914).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22432 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22612 = mem[_22432]
                                require mem[_22432] <= test266151307()
                                require _22432 + return_data.size > _22432 + mem[_22432] + 31
                                _22792 = mem[_22432 + mem[_22432]]
                                require mem[_22432 + mem[_22432]] <= test266151307()
                                require (32 * mem[_22432 + mem[_22432]]) + 32 >= 0 and _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32 <= test266151307()
                                mem[64] = _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32
                                mem[_22432 + ceil32(return_data.size)] = _22792
                                require return_data.size >= _22612 + (32 * _22792) + 32
                                t = _22432 + _22612 + 32
                                u = _22432 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22792:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16990] - 1 < mem[_16990]
                                _25212 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25212))
                                staticcall address(_25212).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25672 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16990
                                s = mem[_25672] - ext_call.return_data[0]
                                continue 
                            mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                            mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17474))
                            call address(_17474).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17488), -1
                            mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19716 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                            s = 0
                            t = _16990 + 32
                            u = _16990 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16990]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19716))
                            call address(_19716).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22433 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22613 = mem[_22433]
                            require mem[_22433] <= test266151307()
                            require _22433 + return_data.size > _22433 + mem[_22433] + 31
                            _22793 = mem[_22433 + mem[_22433]]
                            require mem[_22433 + mem[_22433]] <= test266151307()
                            require (32 * mem[_22433 + mem[_22433]]) + 32 >= 0 and _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32 <= test266151307()
                            mem[64] = _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32
                            mem[_22433 + ceil32(return_data.size)] = _22793
                            require return_data.size >= _22613 + (32 * _22793) + 32
                            t = _22433 + _22613 + 32
                            u = _22433 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22793:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16990] - 1 < mem[_16990]
                            _25214 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25214))
                            staticcall address(_25214).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25673 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16990
                            s = mem[_25673] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17488)
                        mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19220 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                            s = 0
                            t = _16990 + 32
                            u = _16990 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16990]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19220))
                            call address(_19220).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22434 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22614 = mem[_22434]
                            require mem[_22434] <= test266151307()
                            require _22434 + return_data.size > _22434 + mem[_22434] + 31
                            _22794 = mem[_22434 + mem[_22434]]
                            require mem[_22434 + mem[_22434]] <= test266151307()
                            require (32 * mem[_22434 + mem[_22434]]) + 32 >= 0 and _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32 <= test266151307()
                            mem[64] = _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32
                            mem[_22434 + ceil32(return_data.size)] = _22794
                            require return_data.size >= _22614 + (32 * _22794) + 32
                            t = _22434 + _22614 + 32
                            u = _22434 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22794:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16990] - 1 < mem[_16990]
                            _25216 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25216))
                            staticcall address(_25216).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25674 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16990
                            s = mem[_25674] - ext_call.return_data[0]
                            continue 
                        mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                        mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17474))
                        call address(_17474).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17488), -1
                        mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19981 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                        s = 0
                        t = _16990 + 32
                        u = _16990 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16990]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19981))
                        call address(_19981).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22435 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22615 = mem[_22435]
                        require mem[_22435] <= test266151307()
                        require _22435 + return_data.size > _22435 + mem[_22435] + 31
                        _22795 = mem[_22435 + mem[_22435]]
                        require mem[_22435 + mem[_22435]] <= test266151307()
                        require (32 * mem[_22435 + mem[_22435]]) + 32 >= 0 and _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32 <= test266151307()
                        mem[64] = _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32
                        mem[_22435 + ceil32(return_data.size)] = _22795
                        require return_data.size >= _22615 + (32 * _22795) + 32
                        t = _22435 + _22615 + 32
                        u = _22435 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22795:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16990] - 1 < mem[_16990]
                        _25218 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25218))
                        staticcall address(_25218).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16990
                        s = mem[_25675] - ext_call.return_data[0]
                        continue 
                    _16860 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16860 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16860]
                    mem[_16860 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16860]
                    mem[_16860 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16860]
                    mem[_16860 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16860]
                    mem[_16860 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16860] - 1 < mem[_16860]
                    mem[_16860 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16860] - 1) + _16860 + 44 len 20])
                    staticcall mem[(32 * mem[_16860] - 1) + _16860 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16860 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16860 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16860]
                    _17454 = mem[_16860 + 32]
                    require idx + -(_11216 / 2) + 2 < mem[96]
                    _17476 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17476)
                        mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 2 < mem[96]
                            _18544 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                            s = 0
                            t = _16860 + 32
                            u = _16860 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16860]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18544))
                            call address(_18544).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16860 + (4 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22436 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22616 = mem[_22436]
                            require mem[_22436] <= test266151307()
                            require _22436 + return_data.size > _22436 + mem[_22436] + 31
                            _22796 = mem[_22436 + mem[_22436]]
                            require mem[_22436 + mem[_22436]] <= test266151307()
                            require (32 * mem[_22436 + mem[_22436]]) + 32 >= 0 and _22436 + ceil32(return_data.size) + (32 * mem[_22436 + mem[_22436]]) + 32 <= test266151307()
                            mem[64] = _22436 + ceil32(return_data.size) + (32 * mem[_22436 + mem[_22436]]) + 32
                            mem[_22436 + ceil32(return_data.size)] = _22796
                            require return_data.size >= _22616 + (32 * _22796) + 32
                            t = _22436 + _22616 + 32
                            u = _22436 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22796:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16860] - 1 < mem[_16860]
                            _25220 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25220))
                            staticcall address(_25220).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25676 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16860
                            s = mem[_25676] - ext_call.return_data[0]
                            continue 
                        mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                        mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17454))
                        call address(_17454).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17476), -1
                        mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 2 < mem[96]
                        _19321 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                        mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                        s = 0
                        t = _16860 + 32
                        u = _16860 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16860]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19321))
                        call address(_19321).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22437 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22617 = mem[_22437]
                        require mem[_22437] <= test266151307()
                        require _22437 + return_data.size > _22437 + mem[_22437] + 31
                        _22797 = mem[_22437 + mem[_22437]]
                        require mem[_22437 + mem[_22437]] <= test266151307()
                        require (32 * mem[_22437 + mem[_22437]]) + 32 >= 0 and _22437 + ceil32(return_data.size) + (32 * mem[_22437 + mem[_22437]]) + 32 <= test266151307()
                        mem[64] = _22437 + ceil32(return_data.size) + (32 * mem[_22437 + mem[_22437]]) + 32
                        mem[_22437 + ceil32(return_data.size)] = _22797
                        require return_data.size >= _22617 + (32 * _22797) + 32
                        t = _22437 + _22617 + 32
                        u = _22437 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22797:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16860] - 1 < mem[_16860]
                        _25222 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25222))
                        staticcall address(_25222).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16860
                        s = mem[_25677] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17476)
                        mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 2 < mem[96]
                            _18815 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                            s = 0
                            t = _16860 + 32
                            u = _16860 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16860]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18815))
                            call address(_18815).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16860 + (4 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22438 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22618 = mem[_22438]
                            require mem[_22438] <= test266151307()
                            require _22438 + return_data.size > _22438 + mem[_22438] + 31
                            _22798 = mem[_22438 + mem[_22438]]
                            require mem[_22438 + mem[_22438]] <= test266151307()
                            require (32 * mem[_22438 + mem[_22438]]) + 32 >= 0 and _22438 + ceil32(return_data.size) + (32 * mem[_22438 + mem[_22438]]) + 32 <= test266151307()
                            mem[64] = _22438 + ceil32(return_data.size) + (32 * mem[_22438 + mem[_22438]]) + 32
                            mem[_22438 + ceil32(return_data.size)] = _22798
                            require return_data.size >= _22618 + (32 * _22798) + 32
                            t = _22438 + _22618 + 32
                            u = _22438 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22798:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16860] - 1 < mem[_16860]
                            _25224 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25224))
                            staticcall address(_25224).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25678 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16860
                            s = mem[_25678] - ext_call.return_data[0]
                            continue 
                        mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                        mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17454))
                        call address(_17454).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17476), -1
                        mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 2 < mem[96]
                        _19620 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                        mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                        s = 0
                        t = _16860 + 32
                        u = _16860 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16860]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19620))
                        call address(_19620).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22439 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22619 = mem[_22439]
                        require mem[_22439] <= test266151307()
                        require _22439 + return_data.size > _22439 + mem[_22439] + 31
                        _22799 = mem[_22439 + mem[_22439]]
                        require mem[_22439 + mem[_22439]] <= test266151307()
                        require (32 * mem[_22439 + mem[_22439]]) + 32 >= 0 and _22439 + ceil32(return_data.size) + (32 * mem[_22439 + mem[_22439]]) + 32 <= test266151307()
                        mem[64] = _22439 + ceil32(return_data.size) + (32 * mem[_22439 + mem[_22439]]) + 32
                        mem[_22439 + ceil32(return_data.size)] = _22799
                        require return_data.size >= _22619 + (32 * _22799) + 32
                        t = _22439 + _22619 + 32
                        u = _22439 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22799:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16860] - 1 < mem[_16860]
                        _25226 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25226))
                        staticcall address(_25226).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16860
                        s = mem[_25679] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16860 + 44 len 20])
                    staticcall mem[_16860 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                    require ext_code.size(mem[_16860 + 44 len 20])
                    staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17476)
                    mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11216 / 2) + 2 < mem[96]
                        _19115 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                        mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                        s = 0
                        t = _16860 + 32
                        u = _16860 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16860]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19115))
                        call address(_19115).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16860 + (4 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22440 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22620 = mem[_22440]
                        require mem[_22440] <= test266151307()
                        require _22440 + return_data.size > _22440 + mem[_22440] + 31
                        _22800 = mem[_22440 + mem[_22440]]
                        require mem[_22440 + mem[_22440]] <= test266151307()
                        require (32 * mem[_22440 + mem[_22440]]) + 32 >= 0 and _22440 + ceil32(return_data.size) + (32 * mem[_22440 + mem[_22440]]) + 32 <= test266151307()
                        mem[64] = _22440 + ceil32(return_data.size) + (32 * mem[_22440 + mem[_22440]]) + 32
                        mem[_22440 + ceil32(return_data.size)] = _22800
                        require return_data.size >= _22620 + (32 * _22800) + 32
                        t = _22440 + _22620 + 32
                        u = _22440 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22800:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16860] - 1 < mem[_16860]
                        _25228 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25228))
                        staticcall address(_25228).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16860
                        s = mem[_25680] - ext_call.return_data[0]
                        continue 
                    mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                    mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17454))
                    call address(_17454).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17476), -1
                    mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11216 / 2) + 2 < mem[96]
                    _19896 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                    mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                    s = 0
                    t = _16860 + 32
                    u = _16860 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16860]:
                        mem[u] = mem[t + 12 len 20]
                        _16732 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19896))
                    call address(_19896).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22441 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22621 = mem[_22441]
                    require mem[_22441] <= test266151307()
                    require _22441 + return_data.size > _22441 + mem[_22441] + 31
                    _22801 = mem[_22441 + mem[_22441]]
                    require mem[_22441 + mem[_22441]] <= test266151307()
                    require (32 * mem[_22441 + mem[_22441]]) + 32 >= 0 and _22441 + ceil32(return_data.size) + (32 * mem[_22441 + mem[_22441]]) + 32 <= test266151307()
                    mem[64] = _22441 + ceil32(return_data.size) + (32 * mem[_22441 + mem[_22441]]) + 32
                    mem[_22441 + ceil32(return_data.size)] = _22801
                    require return_data.size >= _22621 + (32 * _22801) + 32
                    t = _22441 + _22621 + 32
                    u = _22441 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22801:
                        mem[u] = mem[t]
                        _16732 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16860] - 1 < mem[_16860]
                    _25230 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25230))
                    staticcall address(_25230).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25681 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16732 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16860
                    s = mem[_25681] - ext_call.return_data[0]
                    continue 
                require _11216 / 2 < mem[96]
                _16756 = mem[(16 * Mask(251, 1, _11216)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16756))
                staticcall address(_16756).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16816 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16816] < _11294 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11221 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11249 = mem[_11221]
                    require mem[_11221] == mem[_11221 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11298 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11298)
                    require ext_code.size(address(_11249))
                    staticcall address(_11249).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11298)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11349 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11377 = mem[_11349]
                    require mem[_11349] == mem[_11349 + 12 len 20]
                    require ext_code.size(mem[_11349 + 12 len 20])
                    staticcall mem[_11349 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11713 = mem[_11563]
                    require mem[_11563] == mem[_11563 + 18 len 14]
                    _11835 = mem[_11563 + 32]
                    require mem[_11563 + 32] == mem[_11563 + 50 len 14]
                    require mem[_11563 + 64] == mem[_11563 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 50 len 14] / (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            idx = idx + 1
                            s = _11377
                            s = 997 * s * Mask(112, 0, _11835) / (997 * s) + (1000 * Mask(112, 0, _11713))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 50 len 14] / (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            idx = idx + 1
                            s = _11377
                            s = 997 * s * Mask(112, 0, _11835) / (997 * s) + (1000 * Mask(112, 0, _11713))
                            continue 
                    require (997 * s) + (1000 * mem[_11563 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 18 len 14] / (997 * s) + (1000 * mem[_11563 + 50 len 14])
                    idx = idx + 1
                    s = _11377
                    s = 997 * s * Mask(112, 0, _11713) / (997 * s) + (1000 * Mask(112, 0, _11835))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11219 = mem[96]
                require mem[96] / 2 < mem[96]
                _11246 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11246))
                staticcall address(_11246).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11270 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11297 = mem[_11270]
                _16733 = mem[96]
                idx = _11219 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16733 - 1:
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    require idx - (_11219 / 2) < mem[96]
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                        require idx - (_11219 / 2) < mem[96]
                        if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                            _16863 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16863 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16863]
                            mem[_16863 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16863]
                            mem[_16863 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16863] - 1 < mem[_16863]
                            mem[_16863 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16863] - 1) + _16863 + 44 len 20])
                            staticcall mem[(32 * mem[_16863] - 1) + _16863 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16863 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16863]
                            _17354 = mem[_16863 + 32]
                            require idx - (_11219 / 2) < mem[96]
                            _17378 = mem[(32 * idx - (_11219 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17378)
                                mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18278 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                    s = 0
                                    t = _16863 + 32
                                    u = _16863 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16863]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18278))
                                    call address(_18278).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22442 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22622 = mem[_22442]
                                    require mem[_22442] <= test266151307()
                                    require _22442 + return_data.size > _22442 + mem[_22442] + 31
                                    _22802 = mem[_22442 + mem[_22442]]
                                    require mem[_22442 + mem[_22442]] <= test266151307()
                                    require (32 * mem[_22442 + mem[_22442]]) + 32 >= 0 and _22442 + ceil32(return_data.size) + (32 * mem[_22442 + mem[_22442]]) + 32 <= test266151307()
                                    mem[64] = _22442 + ceil32(return_data.size) + (32 * mem[_22442 + mem[_22442]]) + 32
                                    mem[_22442 + ceil32(return_data.size)] = _22802
                                    require return_data.size >= _22622 + (32 * _22802) + 32
                                    t = _22442 + _22622 + 32
                                    u = _22442 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22802:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16863] - 1 < mem[_16863]
                                    _25232 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25232))
                                    staticcall address(_25232).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25682 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16863
                                    s = mem[_25682] - ext_call.return_data[0]
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17354))
                                call address(_17354).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17378), -1
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _18921 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18921))
                                call address(_18921).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22443 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22623 = mem[_22443]
                                require mem[_22443] <= test266151307()
                                require _22443 + return_data.size > _22443 + mem[_22443] + 31
                                _22803 = mem[_22443 + mem[_22443]]
                                require mem[_22443 + mem[_22443]] <= test266151307()
                                require (32 * mem[_22443 + mem[_22443]]) + 32 >= 0 and _22443 + ceil32(return_data.size) + (32 * mem[_22443 + mem[_22443]]) + 32 <= test266151307()
                                mem[64] = _22443 + ceil32(return_data.size) + (32 * mem[_22443 + mem[_22443]]) + 32
                                mem[_22443 + ceil32(return_data.size)] = _22803
                                require return_data.size >= _22623 + (32 * _22803) + 32
                                t = _22443 + _22623 + 32
                                u = _22443 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22803:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25234 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25234))
                                staticcall address(_25234).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25683 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25683] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17378)
                                mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18470 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                    s = 0
                                    t = _16863 + 32
                                    u = _16863 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16863]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18470))
                                    call address(_18470).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22444 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22624 = mem[_22444]
                                    require mem[_22444] <= test266151307()
                                    require _22444 + return_data.size > _22444 + mem[_22444] + 31
                                    _22804 = mem[_22444 + mem[_22444]]
                                    require mem[_22444 + mem[_22444]] <= test266151307()
                                    require (32 * mem[_22444 + mem[_22444]]) + 32 >= 0 and _22444 + ceil32(return_data.size) + (32 * mem[_22444 + mem[_22444]]) + 32 <= test266151307()
                                    mem[64] = _22444 + ceil32(return_data.size) + (32 * mem[_22444 + mem[_22444]]) + 32
                                    mem[_22444 + ceil32(return_data.size)] = _22804
                                    require return_data.size >= _22624 + (32 * _22804) + 32
                                    t = _22444 + _22624 + 32
                                    u = _22444 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22804:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16863] - 1 < mem[_16863]
                                    _25236 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25236))
                                    staticcall address(_25236).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16863
                                    s = mem[_25684] - ext_call.return_data[0]
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17354))
                                call address(_17354).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17378), -1
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _19227 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19227))
                                call address(_19227).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22445 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22625 = mem[_22445]
                                require mem[_22445] <= test266151307()
                                require _22445 + return_data.size > _22445 + mem[_22445] + 31
                                _22805 = mem[_22445 + mem[_22445]]
                                require mem[_22445 + mem[_22445]] <= test266151307()
                                require (32 * mem[_22445 + mem[_22445]]) + 32 >= 0 and _22445 + ceil32(return_data.size) + (32 * mem[_22445 + mem[_22445]]) + 32 <= test266151307()
                                mem[64] = _22445 + ceil32(return_data.size) + (32 * mem[_22445 + mem[_22445]]) + 32
                                mem[_22445 + ceil32(return_data.size)] = _22805
                                require return_data.size >= _22625 + (32 * _22805) + 32
                                t = _22445 + _22625 + 32
                                u = _22445 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22805:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25238 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25238))
                                staticcall address(_25238).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25685 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25685] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16863 + 44 len 20])
                            staticcall mem[_16863 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                            require ext_code.size(mem[_16863 + 44 len 20])
                            staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17378)
                            mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11219 / 2) < mem[96]
                                _18726 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18726))
                                call address(_18726).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22446 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22626 = mem[_22446]
                                require mem[_22446] <= test266151307()
                                require _22446 + return_data.size > _22446 + mem[_22446] + 31
                                _22806 = mem[_22446 + mem[_22446]]
                                require mem[_22446 + mem[_22446]] <= test266151307()
                                require (32 * mem[_22446 + mem[_22446]]) + 32 >= 0 and _22446 + ceil32(return_data.size) + (32 * mem[_22446 + mem[_22446]]) + 32 <= test266151307()
                                mem[64] = _22446 + ceil32(return_data.size) + (32 * mem[_22446 + mem[_22446]]) + 32
                                mem[_22446 + ceil32(return_data.size)] = _22806
                                require return_data.size >= _22626 + (32 * _22806) + 32
                                t = _22446 + _22626 + 32
                                u = _22446 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22806:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25240 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25240))
                                staticcall address(_25240).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25686 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25686] - ext_call.return_data[0]
                                continue 
                            mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                            mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17354))
                            call address(_17354).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17378), -1
                            mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11219 / 2) < mem[96]
                            _19528 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                            s = 0
                            t = _16863 + 32
                            u = _16863 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16863]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19528))
                            call address(_19528).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22447 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22627 = mem[_22447]
                            require mem[_22447] <= test266151307()
                            require _22447 + return_data.size > _22447 + mem[_22447] + 31
                            _22807 = mem[_22447 + mem[_22447]]
                            require mem[_22447 + mem[_22447]] <= test266151307()
                            require (32 * mem[_22447 + mem[_22447]]) + 32 >= 0 and _22447 + ceil32(return_data.size) + (32 * mem[_22447 + mem[_22447]]) + 32 <= test266151307()
                            mem[64] = _22447 + ceil32(return_data.size) + (32 * mem[_22447 + mem[_22447]]) + 32
                            mem[_22447 + ceil32(return_data.size)] = _22807
                            require return_data.size >= _22627 + (32 * _22807) + 32
                            t = _22447 + _22627 + 32
                            u = _22447 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22807:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16863] - 1 < mem[_16863]
                            _25242 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25242))
                            staticcall address(_25242).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25687 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16863
                            s = mem[_25687] - ext_call.return_data[0]
                            continue 
                        _16865 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16865 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16865]
                        mem[_16865 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16865]
                        mem[_16865 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16865]
                        mem[_16865 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16865] - 1 < mem[_16865]
                        mem[_16865 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16865] - 1) + _16865 + 44 len 20])
                        staticcall mem[(32 * mem[_16865] - 1) + _16865 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16865 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16865]
                        _17402 = mem[_16865 + 32]
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _17429 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17429)
                            mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18399 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                                s = 0
                                t = _16865 + 32
                                u = _16865 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16865]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18399))
                                call address(_18399).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16865 + (4 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22448 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22628 = mem[_22448]
                                require mem[_22448] <= test266151307()
                                require _22448 + return_data.size > _22448 + mem[_22448] + 31
                                _22808 = mem[_22448 + mem[_22448]]
                                require mem[_22448 + mem[_22448]] <= test266151307()
                                require (32 * mem[_22448 + mem[_22448]]) + 32 >= 0 and _22448 + ceil32(return_data.size) + (32 * mem[_22448 + mem[_22448]]) + 32 <= test266151307()
                                mem[64] = _22448 + ceil32(return_data.size) + (32 * mem[_22448 + mem[_22448]]) + 32
                                mem[_22448 + ceil32(return_data.size)] = _22808
                                require return_data.size >= _22628 + (32 * _22808) + 32
                                t = _22448 + _22628 + 32
                                u = _22448 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22808:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16865] - 1 < mem[_16865]
                                _25244 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25244))
                                staticcall address(_25244).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25688 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16865
                                s = mem[_25688] - ext_call.return_data[0]
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17402))
                            call address(_17402).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17429), -1
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19124 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                            s = 0
                            t = _16865 + 32
                            u = _16865 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16865]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19124))
                            call address(_19124).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22449 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22629 = mem[_22449]
                            require mem[_22449] <= test266151307()
                            require _22449 + return_data.size > _22449 + mem[_22449] + 31
                            _22809 = mem[_22449 + mem[_22449]]
                            require mem[_22449 + mem[_22449]] <= test266151307()
                            require (32 * mem[_22449 + mem[_22449]]) + 32 >= 0 and _22449 + ceil32(return_data.size) + (32 * mem[_22449 + mem[_22449]]) + 32 <= test266151307()
                            mem[64] = _22449 + ceil32(return_data.size) + (32 * mem[_22449 + mem[_22449]]) + 32
                            mem[_22449 + ceil32(return_data.size)] = _22809
                            require return_data.size >= _22629 + (32 * _22809) + 32
                            t = _22449 + _22629 + 32
                            u = _22449 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22809:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25246 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25246))
                            staticcall address(_25246).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25689 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25689] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17429)
                            mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18638 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                                s = 0
                                t = _16865 + 32
                                u = _16865 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16865]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18638))
                                call address(_18638).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16865 + (4 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22450 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22630 = mem[_22450]
                                require mem[_22450] <= test266151307()
                                require _22450 + return_data.size > _22450 + mem[_22450] + 31
                                _22810 = mem[_22450 + mem[_22450]]
                                require mem[_22450 + mem[_22450]] <= test266151307()
                                require (32 * mem[_22450 + mem[_22450]]) + 32 >= 0 and _22450 + ceil32(return_data.size) + (32 * mem[_22450 + mem[_22450]]) + 32 <= test266151307()
                                mem[64] = _22450 + ceil32(return_data.size) + (32 * mem[_22450 + mem[_22450]]) + 32
                                mem[_22450 + ceil32(return_data.size)] = _22810
                                require return_data.size >= _22630 + (32 * _22810) + 32
                                t = _22450 + _22630 + 32
                                u = _22450 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22810:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16865] - 1 < mem[_16865]
                                _25248 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25248))
                                staticcall address(_25248).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16865
                                s = mem[_25690] - ext_call.return_data[0]
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17402))
                            call address(_17402).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17429), -1
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19431 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                            s = 0
                            t = _16865 + 32
                            u = _16865 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16865]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19431))
                            call address(_19431).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22451 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22631 = mem[_22451]
                            require mem[_22451] <= test266151307()
                            require _22451 + return_data.size > _22451 + mem[_22451] + 31
                            _22811 = mem[_22451 + mem[_22451]]
                            require mem[_22451 + mem[_22451]] <= test266151307()
                            require (32 * mem[_22451 + mem[_22451]]) + 32 >= 0 and _22451 + ceil32(return_data.size) + (32 * mem[_22451 + mem[_22451]]) + 32 <= test266151307()
                            mem[64] = _22451 + ceil32(return_data.size) + (32 * mem[_22451 + mem[_22451]]) + 32
                            mem[_22451 + ceil32(return_data.size)] = _22811
                            require return_data.size >= _22631 + (32 * _22811) + 32
                            t = _22451 + _22631 + 32
                            u = _22451 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22811:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25250 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25250))
                            staticcall address(_25250).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25691] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16865 + 44 len 20])
                        staticcall mem[_16865 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                        require ext_code.size(mem[_16865 + 44 len 20])
                        staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17429)
                        mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _18926 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                            s = 0
                            t = _16865 + 32
                            u = _16865 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16865]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18926))
                            call address(_18926).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16865 + (4 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22452 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22632 = mem[_22452]
                            require mem[_22452] <= test266151307()
                            require _22452 + return_data.size > _22452 + mem[_22452] + 31
                            _22812 = mem[_22452 + mem[_22452]]
                            require mem[_22452 + mem[_22452]] <= test266151307()
                            require (32 * mem[_22452 + mem[_22452]]) + 32 >= 0 and _22452 + ceil32(return_data.size) + (32 * mem[_22452 + mem[_22452]]) + 32 <= test266151307()
                            mem[64] = _22452 + ceil32(return_data.size) + (32 * mem[_22452 + mem[_22452]]) + 32
                            mem[_22452 + ceil32(return_data.size)] = _22812
                            require return_data.size >= _22632 + (32 * _22812) + 32
                            t = _22452 + _22632 + 32
                            u = _22452 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22812:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25252 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25252))
                            staticcall address(_25252).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25692] - ext_call.return_data[0]
                            continue 
                        mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                        mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17402))
                        call address(_17402).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17429), -1
                        mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19727 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                        s = 0
                        t = _16865 + 32
                        u = _16865 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16865]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19727))
                        call address(_19727).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22453 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22633 = mem[_22453]
                        require mem[_22453] <= test266151307()
                        require _22453 + return_data.size > _22453 + mem[_22453] + 31
                        _22813 = mem[_22453 + mem[_22453]]
                        require mem[_22453 + mem[_22453]] <= test266151307()
                        require (32 * mem[_22453 + mem[_22453]]) + 32 >= 0 and _22453 + ceil32(return_data.size) + (32 * mem[_22453 + mem[_22453]]) + 32 <= test266151307()
                        mem[64] = _22453 + ceil32(return_data.size) + (32 * mem[_22453 + mem[_22453]]) + 32
                        mem[_22453 + ceil32(return_data.size)] = _22813
                        require return_data.size >= _22633 + (32 * _22813) + 32
                        t = _22453 + _22633 + 32
                        u = _22453 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22813:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16865] - 1 < mem[_16865]
                        _25254 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25254))
                        staticcall address(_25254).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25693 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16865
                        s = mem[_25693] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11219 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11219 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                        _16868 = mem[64]
                        mem[mem[64]] = 4
                        mem[64] = mem[64] + 160
                        mem[_16868 + 32 len 128] = call.data[calldata.size len 128]
                        require idx < mem[96]
                        require 0 < mem[_16868]
                        mem[_16868 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16868]
                        mem[_16868 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16868]
                        mem[_16868 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require idx + 3 < mem[96]
                        require 3 < mem[_16868]
                        mem[_16868 + 128] = mem[(32 * idx + 3) + 140 len 20]
                        require mem[_16868] - 1 < mem[_16868]
                        mem[_16868 + 164] = this.address
                        require ext_code.size(mem[(32 * mem[_16868] - 1) + _16868 + 44 len 20])
                        staticcall mem[(32 * mem[_16868] - 1) + _16868 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16868 + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + ceil32(return_data.size) + 160
                        require return_data.size >= 32
                        require 0 < mem[_16868]
                        _17458 = mem[_16868 + 32]
                        require idx + -(_11219 / 2) + 2 < mem[96]
                        _17479 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16868 + 44 len 20])
                            staticcall mem[_16868 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                            require ext_code.size(mem[_16868 + 44 len 20])
                            staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17479)
                            mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 2 < mem[96]
                                _18558 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                                mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                                t = 0
                                u = _16868 + 32
                                v = _16868 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16868]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18558))
                                call address(_18558).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16868 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22646 = mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16868 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22826 = mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16868 + (6 * ceil32(return_data.size)) + 160] = _22826
                                require return_data.size >= _22646 + (32 * _22826) + 32
                                t = _16868 + (4 * ceil32(return_data.size)) + _22646 + 192
                                u = _16868 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22826:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16868] - 1 < mem[_16868]
                                _25280 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25280))
                                staticcall address(_25280).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25706 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16868
                                s = mem[_25706] - ext_call.return_data[0]
                                continue 
                            mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                            mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17458))
                            call address(_17458).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17479), -1
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 2 < mem[96]
                            _19338 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                            mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                            t = 0
                            u = _16868 + 32
                            v = _16868 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16868]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19338))
                            call address(_19338).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16868 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22647 = mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16868 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22827 = mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16868 + (7 * ceil32(return_data.size)) + 160] = _22827
                            require return_data.size >= _22647 + (32 * _22827) + 32
                            t = _16868 + (6 * ceil32(return_data.size)) + _22647 + 192
                            u = _16868 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22827:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16868] - 1 < mem[_16868]
                            _25282 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25282))
                            staticcall address(_25282).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25707 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16868
                            s = mem[_25707] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16868 + 44 len 20])
                            staticcall mem[_16868 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                            require ext_code.size(mem[_16868 + 44 len 20])
                            staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17479)
                            mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 2 < mem[96]
                                _18831 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                                mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                                t = 0
                                u = _16868 + 32
                                v = _16868 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16868]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18831))
                                call address(_18831).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16868 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22648 = mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16868 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22828 = mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16868 + (6 * ceil32(return_data.size)) + 160] = _22828
                                require return_data.size >= _22648 + (32 * _22828) + 32
                                t = _16868 + (4 * ceil32(return_data.size)) + _22648 + 192
                                u = _16868 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22828:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16868] - 1 < mem[_16868]
                                _25284 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25284))
                                staticcall address(_25284).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25708 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16868
                                s = mem[_25708] - ext_call.return_data[0]
                                continue 
                            mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                            mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17458))
                            call address(_17458).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17479), -1
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 2 < mem[96]
                            _19636 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                            mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                            t = 0
                            u = _16868 + 32
                            v = _16868 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16868]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19636))
                            call address(_19636).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16868 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22649 = mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16868 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22829 = mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16868 + (7 * ceil32(return_data.size)) + 160] = _22829
                            require return_data.size >= _22649 + (32 * _22829) + 32
                            t = _16868 + (6 * ceil32(return_data.size)) + _22649 + 192
                            u = _16868 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22829:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16868] - 1 < mem[_16868]
                            _25286 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25286))
                            staticcall address(_25286).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25709 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16868
                            s = mem[_25709] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17479)
                        mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 2 < mem[96]
                            _19135 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                            t = 0
                            u = _16868 + 32
                            v = _16868 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16868]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19135))
                            call address(_19135).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22650 = mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16868 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22830 = mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868 + (4 * ceil32(return_data.size)) + mem[_16868 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16868 + (6 * ceil32(return_data.size)) + 160] = _22830
                            require return_data.size >= _22650 + (32 * _22830) + 32
                            t = _16868 + (4 * ceil32(return_data.size)) + _22650 + 192
                            u = _16868 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22830:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16868] - 1 < mem[_16868]
                            _25288 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25288))
                            staticcall address(_25288).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25710 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16868
                            s = mem[_25710] - ext_call.return_data[0]
                            continue 
                        mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                        mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17458))
                        call address(_17458).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17479), -1
                        mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 2 < mem[96]
                        _19912 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                        mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                        t = 0
                        u = _16868 + 32
                        v = _16868 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16868]:
                            mem[v] = mem[u + 12 len 20]
                            _16733 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19912))
                        call address(_19912).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16868 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16868]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16868 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22651 = mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16868 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22831 = mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16868 + (7 * ceil32(return_data.size)) + (32 * mem[_16868 + (6 * ceil32(return_data.size)) + mem[_16868 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16868 + (7 * ceil32(return_data.size)) + 160] = _22831
                        require return_data.size >= _22651 + (32 * _22831) + 32
                        t = _16868 + (6 * ceil32(return_data.size)) + _22651 + 192
                        u = _16868 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22831:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16868] - 1 < mem[_16868]
                        _25290 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25290))
                        staticcall address(_25290).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16868
                        s = mem[_25711] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    require idx - (_11219 / 2) < mem[96]
                    if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                        _16998 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16998 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16998]
                        mem[_16998 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16998]
                        mem[_16998 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16998] - 1 < mem[_16998]
                        mem[_16998 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16998] - 1) + _16998 + 44 len 20])
                        staticcall mem[(32 * mem[_16998] - 1) + _16998 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16998 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16998 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16998]
                        _17430 = mem[_16998 + 32]
                        require idx - (_11219 / 2) < mem[96]
                        _17456 = mem[(32 * idx - (_11219 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17456)
                            mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11219 / 2) < mem[96]
                                _18474 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                                t = 0
                                u = _16998 + 32
                                v = _16998 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16998]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18474))
                                call address(_18474).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22634 = mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16998 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22814 = mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16998 + (6 * ceil32(return_data.size)) + 96] = _22814
                                require return_data.size >= _22634 + (32 * _22814) + 32
                                t = _16998 + (4 * ceil32(return_data.size)) + _22634 + 128
                                u = _16998 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22814:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16998] - 1 < mem[_16998]
                                _25256 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25256))
                                staticcall address(_25256).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16998
                                s = mem[_25694] - ext_call.return_data[0]
                                continue 
                            mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                            mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17430))
                            call address(_17430).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17456), -1
                            mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11219 / 2) < mem[96]
                            _19231 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                            t = 0
                            u = _16998 + 32
                            v = _16998 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16998]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19231))
                            call address(_19231).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22635 = mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16998 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22815 = mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16998 + (7 * ceil32(return_data.size)) + 96] = _22815
                            require return_data.size >= _22635 + (32 * _22815) + 32
                            t = _16998 + (6 * ceil32(return_data.size)) + _22635 + 128
                            u = _16998 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22815:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16998] - 1 < mem[_16998]
                            _25258 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25258))
                            staticcall address(_25258).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16998
                            s = mem[_25695] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17456)
                            mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11219 / 2) < mem[96]
                                _18732 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                                t = 0
                                u = _16998 + 32
                                v = _16998 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16998]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18732))
                                call address(_18732).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22636 = mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16998 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22816 = mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16998 + (6 * ceil32(return_data.size)) + 96] = _22816
                                require return_data.size >= _22636 + (32 * _22816) + 32
                                t = _16998 + (4 * ceil32(return_data.size)) + _22636 + 128
                                u = _16998 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22816:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16998] - 1 < mem[_16998]
                                _25260 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25260))
                                staticcall address(_25260).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16998
                                s = mem[_25696] - ext_call.return_data[0]
                                continue 
                            mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                            mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17430))
                            call address(_17430).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17456), -1
                            mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11219 / 2) < mem[96]
                            _19534 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                            t = 0
                            u = _16998 + 32
                            v = _16998 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16998]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19534))
                            call address(_19534).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22637 = mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16998 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22817 = mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16998 + (7 * ceil32(return_data.size)) + 96] = _22817
                            require return_data.size >= _22637 + (32 * _22817) + 32
                            t = _16998 + (6 * ceil32(return_data.size)) + _22637 + 128
                            u = _16998 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22817:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16998] - 1 < mem[_16998]
                            _25262 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25262))
                            staticcall address(_25262).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16998
                            s = mem[_25697] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16998 + 44 len 20])
                        staticcall mem[_16998 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                        require ext_code.size(mem[_16998 + 44 len 20])
                        staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17456)
                        mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11219 / 2) < mem[96]
                            _19021 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                            t = 0
                            u = _16998 + 32
                            v = _16998 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16998]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19021))
                            call address(_19021).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16998 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22638 = mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16998 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22818 = mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998 + (4 * ceil32(return_data.size)) + mem[_16998 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96] = _22818
                            require return_data.size >= _22638 + (32 * _22818) + 32
                            t = _16998 + (4 * ceil32(return_data.size)) + _22638 + 128
                            u = _16998 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22818:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16998] - 1 < mem[_16998]
                            _25264 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25264))
                            staticcall address(_25264).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16998
                            s = mem[_25698] - ext_call.return_data[0]
                            continue 
                        mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                        mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17430))
                        call address(_17430).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17456), -1
                        mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11219 / 2) < mem[96]
                        _19816 = mem[(32 * idx - (_11219 / 2)) + 128]
                        mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                        t = 0
                        u = _16998 + 32
                        v = _16998 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16998]:
                            mem[v] = mem[u + 12 len 20]
                            _16733 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19816))
                        call address(_19816).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16998 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16998]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16998 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16998 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22639 = mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16998 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22819 = mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16998 + (7 * ceil32(return_data.size)) + (32 * mem[_16998 + (6 * ceil32(return_data.size)) + mem[_16998 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16998 + (7 * ceil32(return_data.size)) + 96] = _22819
                        require return_data.size >= _22639 + (32 * _22819) + 32
                        t = _16998 + (6 * ceil32(return_data.size)) + _22639 + 128
                        u = _16998 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22819:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16998] - 1 < mem[_16998]
                        _25266 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25266))
                        staticcall address(_25266).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25699 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16998
                        s = mem[_25699] - ext_call.return_data[0]
                        continue 
                    _17000 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_17000 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_17000]
                    mem[_17000 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_17000]
                    mem[_17000 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_17000]
                    mem[_17000 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_17000] - 1 < mem[_17000]
                    mem[_17000 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_17000] - 1) + _17000 + 44 len 20])
                    staticcall mem[(32 * mem[_17000] - 1) + _17000 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_17000 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17000 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_17000]
                    _17477 = mem[_17000 + 32]
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    _17489 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17489)
                        mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _18645 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                            s = 0
                            t = _17000 + 32
                            u = _17000 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17000]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18645))
                            call address(_18645).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22460 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22640 = mem[_22460]
                            require mem[_22460] <= test266151307()
                            require _22460 + return_data.size > _22460 + mem[_22460] + 31
                            _22820 = mem[_22460 + mem[_22460]]
                            require mem[_22460 + mem[_22460]] <= test266151307()
                            require (32 * mem[_22460 + mem[_22460]]) + 32 >= 0 and _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32 <= test266151307()
                            mem[64] = _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32
                            mem[_22460 + ceil32(return_data.size)] = _22820
                            require return_data.size >= _22640 + (32 * _22820) + 32
                            t = _22460 + _22640 + 32
                            u = _22460 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22820:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17000] - 1 < mem[_17000]
                            _25268 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25268))
                            staticcall address(_25268).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17000
                            s = mem[_25700] - ext_call.return_data[0]
                            continue 
                        mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                        mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17477))
                        call address(_17477).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17489), -1
                        mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19439 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                        s = 0
                        t = _17000 + 32
                        u = _17000 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17000]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19439))
                        call address(_19439).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22461 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22641 = mem[_22461]
                        require mem[_22461] <= test266151307()
                        require _22461 + return_data.size > _22461 + mem[_22461] + 31
                        _22821 = mem[_22461 + mem[_22461]]
                        require mem[_22461 + mem[_22461]] <= test266151307()
                        require (32 * mem[_22461 + mem[_22461]]) + 32 >= 0 and _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32 <= test266151307()
                        mem[64] = _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32
                        mem[_22461 + ceil32(return_data.size)] = _22821
                        require return_data.size >= _22641 + (32 * _22821) + 32
                        t = _22461 + _22641 + 32
                        u = _22461 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22821:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17000] - 1 < mem[_17000]
                        _25270 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25270))
                        staticcall address(_25270).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25701 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17000
                        s = mem[_25701] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17489)
                        mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _18932 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                            s = 0
                            t = _17000 + 32
                            u = _17000 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17000]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18932))
                            call address(_18932).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22462 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22642 = mem[_22462]
                            require mem[_22462] <= test266151307()
                            require _22462 + return_data.size > _22462 + mem[_22462] + 31
                            _22822 = mem[_22462 + mem[_22462]]
                            require mem[_22462 + mem[_22462]] <= test266151307()
                            require (32 * mem[_22462 + mem[_22462]]) + 32 >= 0 and _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32 <= test266151307()
                            mem[64] = _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32
                            mem[_22462 + ceil32(return_data.size)] = _22822
                            require return_data.size >= _22642 + (32 * _22822) + 32
                            t = _22462 + _22642 + 32
                            u = _22462 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22822:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17000] - 1 < mem[_17000]
                            _25272 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25272))
                            staticcall address(_25272).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17000
                            s = mem[_25702] - ext_call.return_data[0]
                            continue 
                        mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                        mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17477))
                        call address(_17477).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17489), -1
                        mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19733 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                        s = 0
                        t = _17000 + 32
                        u = _17000 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17000]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19733))
                        call address(_19733).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22463 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22643 = mem[_22463]
                        require mem[_22463] <= test266151307()
                        require _22463 + return_data.size > _22463 + mem[_22463] + 31
                        _22823 = mem[_22463 + mem[_22463]]
                        require mem[_22463 + mem[_22463]] <= test266151307()
                        require (32 * mem[_22463 + mem[_22463]]) + 32 >= 0 and _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32 <= test266151307()
                        mem[64] = _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32
                        mem[_22463 + ceil32(return_data.size)] = _22823
                        require return_data.size >= _22643 + (32 * _22823) + 32
                        t = _22463 + _22643 + 32
                        u = _22463 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22823:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17000] - 1 < mem[_17000]
                        _25274 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25274))
                        staticcall address(_25274).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25703 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17000
                        s = mem[_25703] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_17000 + 44 len 20])
                    staticcall mem[_17000 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                    require ext_code.size(mem[_17000 + 44 len 20])
                    staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17489)
                    mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19236 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                        s = 0
                        t = _17000 + 32
                        u = _17000 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_17000]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19236))
                        call address(_19236).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22464 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22644 = mem[_22464]
                        require mem[_22464] <= test266151307()
                        require _22464 + return_data.size > _22464 + mem[_22464] + 31
                        _22824 = mem[_22464 + mem[_22464]]
                        require mem[_22464 + mem[_22464]] <= test266151307()
                        require (32 * mem[_22464 + mem[_22464]]) + 32 >= 0 and _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32 <= test266151307()
                        mem[64] = _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32
                        mem[_22464 + ceil32(return_data.size)] = _22824
                        require return_data.size >= _22644 + (32 * _22824) + 32
                        t = _22464 + _22644 + 32
                        u = _22464 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22824:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17000] - 1 < mem[_17000]
                        _25276 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25276))
                        staticcall address(_25276).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17000
                        s = mem[_25704] - ext_call.return_data[0]
                        continue 
                    mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                    mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17477))
                    call address(_17477).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17489), -1
                    mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    _19994 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                    mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                    s = 0
                    t = _17000 + 32
                    u = _17000 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_17000]:
                        mem[u] = mem[t + 12 len 20]
                        _16733 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19994))
                    call address(_19994).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22465 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22645 = mem[_22465]
                    require mem[_22465] <= test266151307()
                    require _22465 + return_data.size > _22465 + mem[_22465] + 31
                    _22825 = mem[_22465 + mem[_22465]]
                    require mem[_22465 + mem[_22465]] <= test266151307()
                    require (32 * mem[_22465 + mem[_22465]]) + 32 >= 0 and _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32 <= test266151307()
                    mem[64] = _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32
                    mem[_22465 + ceil32(return_data.size)] = _22825
                    require return_data.size >= _22645 + (32 * _22825) + 32
                    t = _22465 + _22645 + 32
                    u = _22465 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22825:
                        mem[u] = mem[t]
                        _16733 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_17000] - 1 < mem[_17000]
                    _25278 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25278))
                    staticcall address(_25278).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16733 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _17000
                    s = mem[_25705] - ext_call.return_data[0]
                    continue 
                require _11219 / 2 < mem[96]
                _16760 = mem[(16 * Mask(251, 1, _11219)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16760))
                staticcall address(_16760).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16820 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16820] < _11297 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11253 = mem[_11224]
                    require mem[_11224] == mem[_11224 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11301 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11301)
                    require ext_code.size(address(_11253))
                    staticcall address(_11253).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11301)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11354 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11380 = mem[_11354]
                    require mem[_11354] == mem[_11354 + 12 len 20]
                    require ext_code.size(mem[_11354 + 12 len 20])
                    staticcall mem[_11354 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11569 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11722 = mem[_11569]
                    require mem[_11569] == mem[_11569 + 18 len 14]
                    _11843 = mem[_11569 + 32]
                    require mem[_11569 + 32] == mem[_11569 + 50 len 14]
                    require mem[_11569 + 64] == mem[_11569 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 50 len 14] / (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            idx = idx + 1
                            s = _11380
                            s = 997 * s * Mask(112, 0, _11843) / (997 * s) + (1000 * Mask(112, 0, _11722))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 50 len 14] / (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            idx = idx + 1
                            s = _11380
                            s = 997 * s * Mask(112, 0, _11843) / (997 * s) + (1000 * Mask(112, 0, _11722))
                            continue 
                    require (997 * s) + (1000 * mem[_11569 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 18 len 14] / (997 * s) + (1000 * mem[_11569 + 50 len 14])
                    idx = idx + 1
                    s = _11380
                    s = 997 * s * Mask(112, 0, _11722) / (997 * s) + (1000 * Mask(112, 0, _11843))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11222 = mem[96]
                require mem[96] / 2 < mem[96]
                _11250 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11250))
                staticcall address(_11250).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11272 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11300 = mem[_11272]
                _16734 = mem[96]
                idx = _11222 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16734 - 1:
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    require idx - (_11222 / 2) < mem[96]
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                        require idx - (_11222 / 2) < mem[96]
                        if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                            _16871 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16871 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16871]
                            mem[_16871 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16871]
                            mem[_16871 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16871] - 1 < mem[_16871]
                            mem[_16871 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16871] - 1) + _16871 + 44 len 20])
                            staticcall mem[(32 * mem[_16871] - 1) + _16871 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16871 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16871]
                            _17358 = mem[_16871 + 32]
                            require idx - (_11222 / 2) < mem[96]
                            _17382 = mem[(32 * idx - (_11222 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17382)
                                mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18288 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                    s = 0
                                    t = _16871 + 32
                                    u = _16871 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16871]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16734 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18288))
                                    call address(_18288).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16871 + (4 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22472 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22652 = mem[_22472]
                                    require mem[_22472] <= test266151307()
                                    require _22472 + return_data.size > _22472 + mem[_22472] + 31
                                    _22832 = mem[_22472 + mem[_22472]]
                                    require mem[_22472 + mem[_22472]] <= test266151307()
                                    require (32 * mem[_22472 + mem[_22472]]) + 32 >= 0 and _22472 + ceil32(return_data.size) + (32 * mem[_22472 + mem[_22472]]) + 32 <= test266151307()
                                    mem[64] = _22472 + ceil32(return_data.size) + (32 * mem[_22472 + mem[_22472]]) + 32
                                    mem[_22472 + ceil32(return_data.size)] = _22832
                                    require return_data.size >= _22652 + (32 * _22832) + 32
                                    t = _22472 + _22652 + 32
                                    u = _22472 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22832:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16871] - 1 < mem[_16871]
                                    _25292 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25292))
                                    staticcall address(_25292).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25712 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16871
                                    s = mem[_25712] - ext_call.return_data[0]
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17358))
                                call address(_17358).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17382), -1
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _18939 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                                s = 0
                                t = _16871 + 32
                                u = _16871 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16871]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18939))
                                call address(_18939).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22473 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22653 = mem[_22473]
                                require mem[_22473] <= test266151307()
                                require _22473 + return_data.size > _22473 + mem[_22473] + 31
                                _22833 = mem[_22473 + mem[_22473]]
                                require mem[_22473 + mem[_22473]] <= test266151307()
                                require (32 * mem[_22473 + mem[_22473]]) + 32 >= 0 and _22473 + ceil32(return_data.size) + (32 * mem[_22473 + mem[_22473]]) + 32 <= test266151307()
                                mem[64] = _22473 + ceil32(return_data.size) + (32 * mem[_22473 + mem[_22473]]) + 32
                                mem[_22473 + ceil32(return_data.size)] = _22833
                                require return_data.size >= _22653 + (32 * _22833) + 32
                                t = _22473 + _22653 + 32
                                u = _22473 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22833:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25294 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25294))
                                staticcall address(_25294).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25713 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25713] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17382)
                                mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18482 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                    s = 0
                                    t = _16871 + 32
                                    u = _16871 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16871]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16734 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18482))
                                    call address(_18482).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16871 + (4 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22474 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22654 = mem[_22474]
                                    require mem[_22474] <= test266151307()
                                    require _22474 + return_data.size > _22474 + mem[_22474] + 31
                                    _22834 = mem[_22474 + mem[_22474]]
                                    require mem[_22474 + mem[_22474]] <= test266151307()
                                    require (32 * mem[_22474 + mem[_22474]]) + 32 >= 0 and _22474 + ceil32(return_data.size) + (32 * mem[_22474 + mem[_22474]]) + 32 <= test266151307()
                                    mem[64] = _22474 + ceil32(return_data.size) + (32 * mem[_22474 + mem[_22474]]) + 32
                                    mem[_22474 + ceil32(return_data.size)] = _22834
                                    require return_data.size >= _22654 + (32 * _22834) + 32
                                    t = _22474 + _22654 + 32
                                    u = _22474 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22834:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16871] - 1 < mem[_16871]
                                    _25296 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25296))
                                    staticcall address(_25296).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25714 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16871
                                    s = mem[_25714] - ext_call.return_data[0]
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17358))
                                call address(_17358).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17382), -1
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _19243 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                                s = 0
                                t = _16871 + 32
                                u = _16871 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16871]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19243))
                                call address(_19243).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22475 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22655 = mem[_22475]
                                require mem[_22475] <= test266151307()
                                require _22475 + return_data.size > _22475 + mem[_22475] + 31
                                _22835 = mem[_22475 + mem[_22475]]
                                require mem[_22475 + mem[_22475]] <= test266151307()
                                require (32 * mem[_22475 + mem[_22475]]) + 32 >= 0 and _22475 + ceil32(return_data.size) + (32 * mem[_22475 + mem[_22475]]) + 32 <= test266151307()
                                mem[64] = _22475 + ceil32(return_data.size) + (32 * mem[_22475 + mem[_22475]]) + 32
                                mem[_22475 + ceil32(return_data.size)] = _22835
                                require return_data.size >= _22655 + (32 * _22835) + 32
                                t = _22475 + _22655 + 32
                                u = _22475 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22835:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25298 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25298))
                                staticcall address(_25298).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25715 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25715] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16871 + 44 len 20])
                            staticcall mem[_16871 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                            require ext_code.size(mem[_16871 + 44 len 20])
                            staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17382)
                            mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11222 / 2) < mem[96]
                                _18741 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                s = 0
                                t = _16871 + 32
                                u = _16871 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16871]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18741))
                                call address(_18741).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16871 + (4 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22476 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22656 = mem[_22476]
                                require mem[_22476] <= test266151307()
                                require _22476 + return_data.size > _22476 + mem[_22476] + 31
                                _22836 = mem[_22476 + mem[_22476]]
                                require mem[_22476 + mem[_22476]] <= test266151307()
                                require (32 * mem[_22476 + mem[_22476]]) + 32 >= 0 and _22476 + ceil32(return_data.size) + (32 * mem[_22476 + mem[_22476]]) + 32 <= test266151307()
                                mem[64] = _22476 + ceil32(return_data.size) + (32 * mem[_22476 + mem[_22476]]) + 32
                                mem[_22476 + ceil32(return_data.size)] = _22836
                                require return_data.size >= _22656 + (32 * _22836) + 32
                                t = _22476 + _22656 + 32
                                u = _22476 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22836:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25300 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25300))
                                staticcall address(_25300).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25716 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25716] - ext_call.return_data[0]
                                continue 
                            mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                            mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17358))
                            call address(_17358).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17382), -1
                            mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11222 / 2) < mem[96]
                            _19544 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                            s = 0
                            t = _16871 + 32
                            u = _16871 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16871]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19544))
                            call address(_19544).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22477 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22657 = mem[_22477]
                            require mem[_22477] <= test266151307()
                            require _22477 + return_data.size > _22477 + mem[_22477] + 31
                            _22837 = mem[_22477 + mem[_22477]]
                            require mem[_22477 + mem[_22477]] <= test266151307()
                            require (32 * mem[_22477 + mem[_22477]]) + 32 >= 0 and _22477 + ceil32(return_data.size) + (32 * mem[_22477 + mem[_22477]]) + 32 <= test266151307()
                            mem[64] = _22477 + ceil32(return_data.size) + (32 * mem[_22477 + mem[_22477]]) + 32
                            mem[_22477 + ceil32(return_data.size)] = _22837
                            require return_data.size >= _22657 + (32 * _22837) + 32
                            t = _22477 + _22657 + 32
                            u = _22477 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22837:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16871] - 1 < mem[_16871]
                            _25302 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25302))
                            staticcall address(_25302).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25717 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16871
                            s = mem[_25717] - ext_call.return_data[0]
                            continue 
                        _16873 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16873 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16873]
                        mem[_16873 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16873]
                        mem[_16873 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16873]
                        mem[_16873 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16873] - 1 < mem[_16873]
                        mem[_16873 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16873] - 1) + _16873 + 44 len 20])
                        staticcall mem[(32 * mem[_16873] - 1) + _16873 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16873 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16873]
                        _17406 = mem[_16873 + 32]
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _17434 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17434)
                            mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18412 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                                s = 0
                                t = _16873 + 32
                                u = _16873 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16873]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18412))
                                call address(_18412).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22478 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22658 = mem[_22478]
                                require mem[_22478] <= test266151307()
                                require _22478 + return_data.size > _22478 + mem[_22478] + 31
                                _22838 = mem[_22478 + mem[_22478]]
                                require mem[_22478 + mem[_22478]] <= test266151307()
                                require (32 * mem[_22478 + mem[_22478]]) + 32 >= 0 and _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32 <= test266151307()
                                mem[64] = _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32
                                mem[_22478 + ceil32(return_data.size)] = _22838
                                require return_data.size >= _22658 + (32 * _22838) + 32
                                t = _22478 + _22658 + 32
                                u = _22478 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22838:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16873] - 1 < mem[_16873]
                                _25304 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25304))
                                staticcall address(_25304).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25718 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16873
                                s = mem[_25718] - ext_call.return_data[0]
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17406))
                            call address(_17406).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17434), -1
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19144 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19144))
                            call address(_19144).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22479 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22659 = mem[_22479]
                            require mem[_22479] <= test266151307()
                            require _22479 + return_data.size > _22479 + mem[_22479] + 31
                            _22839 = mem[_22479 + mem[_22479]]
                            require mem[_22479 + mem[_22479]] <= test266151307()
                            require (32 * mem[_22479 + mem[_22479]]) + 32 >= 0 and _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32 <= test266151307()
                            mem[64] = _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32
                            mem[_22479 + ceil32(return_data.size)] = _22839
                            require return_data.size >= _22659 + (32 * _22839) + 32
                            t = _22479 + _22659 + 32
                            u = _22479 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22839:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25306 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25306))
                            staticcall address(_25306).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25719 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25719] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17434)
                            mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18653 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                                s = 0
                                t = _16873 + 32
                                u = _16873 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16873]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18653))
                                call address(_18653).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22480 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22660 = mem[_22480]
                                require mem[_22480] <= test266151307()
                                require _22480 + return_data.size > _22480 + mem[_22480] + 31
                                _22840 = mem[_22480 + mem[_22480]]
                                require mem[_22480 + mem[_22480]] <= test266151307()
                                require (32 * mem[_22480 + mem[_22480]]) + 32 >= 0 and _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32 <= test266151307()
                                mem[64] = _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32
                                mem[_22480 + ceil32(return_data.size)] = _22840
                                require return_data.size >= _22660 + (32 * _22840) + 32
                                t = _22480 + _22660 + 32
                                u = _22480 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22840:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16873] - 1 < mem[_16873]
                                _25308 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25308))
                                staticcall address(_25308).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25720 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16873
                                s = mem[_25720] - ext_call.return_data[0]
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17406))
                            call address(_17406).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17434), -1
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19448 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19448))
                            call address(_19448).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22481 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22661 = mem[_22481]
                            require mem[_22481] <= test266151307()
                            require _22481 + return_data.size > _22481 + mem[_22481] + 31
                            _22841 = mem[_22481 + mem[_22481]]
                            require mem[_22481 + mem[_22481]] <= test266151307()
                            require (32 * mem[_22481 + mem[_22481]]) + 32 >= 0 and _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32 <= test266151307()
                            mem[64] = _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32
                            mem[_22481 + ceil32(return_data.size)] = _22841
                            require return_data.size >= _22661 + (32 * _22841) + 32
                            t = _22481 + _22661 + 32
                            u = _22481 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22841:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25310 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25310))
                            staticcall address(_25310).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25721 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25721] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16873 + 44 len 20])
                        staticcall mem[_16873 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                        require ext_code.size(mem[_16873 + 44 len 20])
                        staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17434)
                        mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _18944 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18944))
                            call address(_18944).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22482 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22662 = mem[_22482]
                            require mem[_22482] <= test266151307()
                            require _22482 + return_data.size > _22482 + mem[_22482] + 31
                            _22842 = mem[_22482 + mem[_22482]]
                            require mem[_22482 + mem[_22482]] <= test266151307()
                            require (32 * mem[_22482 + mem[_22482]]) + 32 >= 0 and _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32 <= test266151307()
                            mem[64] = _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32
                            mem[_22482 + ceil32(return_data.size)] = _22842
                            require return_data.size >= _22662 + (32 * _22842) + 32
                            t = _22482 + _22662 + 32
                            u = _22482 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22842:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25312 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25312))
                            staticcall address(_25312).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25722] - ext_call.return_data[0]
                            continue 
                        mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                        mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17406))
                        call address(_17406).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17434), -1
                        mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _19744 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                        s = 0
                        t = _16873 + 32
                        u = _16873 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16873]:
                            mem[u] = mem[t + 12 len 20]
                            _16734 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19744))
                        call address(_19744).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22483 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22663 = mem[_22483]
                        require mem[_22483] <= test266151307()
                        require _22483 + return_data.size > _22483 + mem[_22483] + 31
                        _22843 = mem[_22483 + mem[_22483]]
                        require mem[_22483 + mem[_22483]] <= test266151307()
                        require (32 * mem[_22483 + mem[_22483]]) + 32 >= 0 and _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32 <= test266151307()
                        mem[64] = _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32
                        mem[_22483 + ceil32(return_data.size)] = _22843
                        require return_data.size >= _22663 + (32 * _22843) + 32
                        t = _22483 + _22663 + 32
                        u = _22483 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22843:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16873] - 1 < mem[_16873]
                        _25314 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25314))
                        staticcall address(_25314).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16873
                        s = mem[_25723] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11222 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11222 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        require idx - (_11222 / 2) < mem[96]
                        if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                            _17008 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17008 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17008]
                            mem[_17008 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17008]
                            mem[_17008 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17008] - 1 < mem[_17008]
                            mem[_17008 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17008] - 1) + _17008 + 44 len 20])
                            staticcall mem[(32 * mem[_17008] - 1) + _17008 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17008 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17008]
                            _17435 = mem[_17008 + 32]
                            require idx - (_11222 / 2) < mem[96]
                            _17460 = mem[(32 * idx - (_11222 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17008 + 44 len 20])
                                staticcall mem[_17008 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                                require ext_code.size(mem[_17008 + 44 len 20])
                                staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17460)
                                mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18486 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                                    t = 0
                                    u = _17008 + 32
                                    v = _17008 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_17008]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16734 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18486))
                                    call address(_18486).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22664 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22844 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22844
                                    require return_data.size >= _22664 + (32 * _22844) + 32
                                    t = _17008 + (4 * ceil32(return_data.size)) + _22664 + 128
                                    u = _17008 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22844:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17008] - 1 < mem[_17008]
                                    _25316 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25316))
                                    staticcall address(_25316).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25724 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17008
                                    s = mem[_25724] - ext_call.return_data[0]
                                    continue 
                                mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                                mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17435))
                                call address(_17435).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17460), -1
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _19247 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                                t = 0
                                u = _17008 + 32
                                v = _17008 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_17008]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19247))
                                call address(_19247).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22665 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22845 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22845
                                require return_data.size >= _22665 + (32 * _22845) + 32
                                t = _17008 + (6 * ceil32(return_data.size)) + _22665 + 128
                                u = _17008 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22845:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17008] - 1 < mem[_17008]
                                _25318 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25318))
                                staticcall address(_25318).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25725 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17008
                                s = mem[_25725] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17008 + 44 len 20])
                                staticcall mem[_17008 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                                require ext_code.size(mem[_17008 + 44 len 20])
                                staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17460)
                                mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18747 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                                    t = 0
                                    u = _17008 + 32
                                    v = _17008 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_17008]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16734 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18747))
                                    call address(_18747).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22666 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22846 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22846
                                    require return_data.size >= _22666 + (32 * _22846) + 32
                                    t = _17008 + (4 * ceil32(return_data.size)) + _22666 + 128
                                    u = _17008 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22846:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17008] - 1 < mem[_17008]
                                    _25320 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25320))
                                    staticcall address(_25320).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25726 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17008
                                    s = mem[_25726] - ext_call.return_data[0]
                                    continue 
                                mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                                mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17435))
                                call address(_17435).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17460), -1
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _19550 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                                t = 0
                                u = _17008 + 32
                                v = _17008 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_17008]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19550))
                                call address(_19550).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22667 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22847 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22847
                                require return_data.size >= _22667 + (32 * _22847) + 32
                                t = _17008 + (6 * ceil32(return_data.size)) + _22667 + 128
                                u = _17008 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22847:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17008] - 1 < mem[_17008]
                                _25322 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25322))
                                staticcall address(_25322).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25727 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17008
                                s = mem[_25727] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17460)
                            mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11222 / 2) < mem[96]
                                _19035 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                                t = 0
                                u = _17008 + 32
                                v = _17008 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17008]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19035))
                                call address(_19035).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22668 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22848 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22848
                                require return_data.size >= _22668 + (32 * _22848) + 32
                                t = _17008 + (4 * ceil32(return_data.size)) + _22668 + 128
                                u = _17008 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22848:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17008] - 1 < mem[_17008]
                                _25324 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25324))
                                staticcall address(_25324).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25728 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17008
                                s = mem[_25728] - ext_call.return_data[0]
                                continue 
                            mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                            mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17435))
                            call address(_17435).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17460), -1
                            mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11222 / 2) < mem[96]
                            _19829 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                            t = 0
                            u = _17008 + 32
                            v = _17008 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17008]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19829))
                            call address(_19829).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22669 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22849 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22849
                            require return_data.size >= _22669 + (32 * _22849) + 32
                            t = _17008 + (6 * ceil32(return_data.size)) + _22669 + 128
                            u = _17008 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22849:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17008] - 1 < mem[_17008]
                            _25326 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25326))
                            staticcall address(_25326).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17008
                            s = mem[_25729] - ext_call.return_data[0]
                            continue 
                        _17010 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17010 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17010]
                        mem[_17010 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17010]
                        mem[_17010 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17010]
                        mem[_17010 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17010] - 1 < mem[_17010]
                        mem[_17010 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17010] - 1) + _17010 + 44 len 20])
                        staticcall mem[(32 * mem[_17010] - 1) + _17010 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17010 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17010]
                        _17480 = mem[_17010 + 32]
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _17490 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17010 + 44 len 20])
                            staticcall mem[_17010 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                            require ext_code.size(mem[_17010 + 44 len 20])
                            staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17490)
                            mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18660 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                                t = 0
                                u = _17010 + 32
                                v = _17010 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_17010]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18660))
                                call address(_18660).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17010 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22670 = mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17010 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22850 = mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_17010 + (6 * ceil32(return_data.size)) + 128] = _22850
                                require return_data.size >= _22670 + (32 * _22850) + 32
                                t = _17010 + (4 * ceil32(return_data.size)) + _22670 + 160
                                u = _17010 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22850:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17010] - 1 < mem[_17010]
                                _25328 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25328))
                                staticcall address(_25328).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25730 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17010
                                s = mem[_25730] - ext_call.return_data[0]
                                continue 
                            mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                            mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17480))
                            call address(_17480).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17490), -1
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19456 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                            t = 0
                            u = _17010 + 32
                            v = _17010 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_17010]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19456))
                            call address(_19456).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17010 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22671 = mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17010 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22851 = mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17010 + (7 * ceil32(return_data.size)) + 128] = _22851
                            require return_data.size >= _22671 + (32 * _22851) + 32
                            t = _17010 + (6 * ceil32(return_data.size)) + _22671 + 160
                            u = _17010 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22851:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17010] - 1 < mem[_17010]
                            _25330 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25330))
                            staticcall address(_25330).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17010
                            s = mem[_25731] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17010 + 44 len 20])
                            staticcall mem[_17010 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                            require ext_code.size(mem[_17010 + 44 len 20])
                            staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17490)
                            mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18950 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                                t = 0
                                u = _17010 + 32
                                v = _17010 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_17010]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18950))
                                call address(_18950).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17010 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22672 = mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17010 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22852 = mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_17010 + (6 * ceil32(return_data.size)) + 128] = _22852
                                require return_data.size >= _22672 + (32 * _22852) + 32
                                t = _17010 + (4 * ceil32(return_data.size)) + _22672 + 160
                                u = _17010 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22852:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17010] - 1 < mem[_17010]
                                _25332 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25332))
                                staticcall address(_25332).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25732 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17010
                                s = mem[_25732] - ext_call.return_data[0]
                                continue 
                            mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                            mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17480))
                            call address(_17480).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17490), -1
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19750 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                            t = 0
                            u = _17010 + 32
                            v = _17010 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_17010]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19750))
                            call address(_19750).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17010 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22673 = mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17010 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22853 = mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17010 + (7 * ceil32(return_data.size)) + 128] = _22853
                            require return_data.size >= _22673 + (32 * _22853) + 32
                            t = _17010 + (6 * ceil32(return_data.size)) + _22673 + 160
                            u = _17010 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22853:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17010] - 1 < mem[_17010]
                            _25334 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25334))
                            staticcall address(_25334).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25733 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17010
                            s = mem[_25733] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17490)
                        mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19252 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                            t = 0
                            u = _17010 + 32
                            v = _17010 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_17010]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19252))
                            call address(_19252).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22674 = mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17010 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22854 = mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010 + (4 * ceil32(return_data.size)) + mem[_17010 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17010 + (6 * ceil32(return_data.size)) + 128] = _22854
                            require return_data.size >= _22674 + (32 * _22854) + 32
                            t = _17010 + (4 * ceil32(return_data.size)) + _22674 + 160
                            u = _17010 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22854:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17010] - 1 < mem[_17010]
                            _25336 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25336))
                            staticcall address(_25336).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25734 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17010
                            s = mem[_25734] - ext_call.return_data[0]
                            continue 
                        mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                        mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17480))
                        call address(_17480).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17490), -1
                        mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _20007 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                        t = 0
                        u = _17010 + 32
                        v = _17010 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_17010]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20007))
                        call address(_20007).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17010 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17010]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17010 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22675 = mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17010 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22855 = mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _17010 + (7 * ceil32(return_data.size)) + (32 * mem[_17010 + (6 * ceil32(return_data.size)) + mem[_17010 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_17010 + (7 * ceil32(return_data.size)) + 128] = _22855
                        require return_data.size >= _22675 + (32 * _22855) + 32
                        t = _17010 + (6 * ceil32(return_data.size)) + _22675 + 160
                        u = _17010 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22855:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17010] - 1 < mem[_17010]
                        _25338 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25338))
                        staticcall address(_25338).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25735 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17010
                        s = mem[_25735] - ext_call.return_data[0]
                        continue 
                    _16876 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16876 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16876]
                    mem[_16876 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16876]
                    mem[_16876 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16876]
                    mem[_16876 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16876]
                    mem[_16876 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16876] - 1 < mem[_16876]
                    mem[_16876 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16876] - 1) + _16876 + 44 len 20])
                    staticcall mem[(32 * mem[_16876] - 1) + _16876 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16876 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16876 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16876]
                    _17462 = mem[_16876 + 32]
                    require idx + -(_11222 / 2) + 2 < mem[96]
                    _17482 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17482)
                        mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 2 < mem[96]
                            _18572 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                            t = 0
                            u = _16876 + 32
                            v = _16876 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16876]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18572))
                            call address(_18572).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22676 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22856 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160] = _22856
                            require return_data.size >= _22676 + (32 * _22856) + 32
                            t = _16876 + (4 * ceil32(return_data.size)) + _22676 + 192
                            u = _16876 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22856:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16876] - 1 < mem[_16876]
                            _25340 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25340))
                            staticcall address(_25340).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25736 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16876
                            s = mem[_25736] - ext_call.return_data[0]
                            continue 
                        mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                        mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17462))
                        call address(_17462).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17482), -1
                        mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 2 < mem[96]
                        _19355 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                        t = 0
                        u = _16876 + 32
                        v = _16876 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16876]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19355))
                        call address(_19355).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22677 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22857 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22857
                        require return_data.size >= _22677 + (32 * _22857) + 32
                        t = _16876 + (6 * ceil32(return_data.size)) + _22677 + 192
                        u = _16876 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22857:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16876] - 1 < mem[_16876]
                        _25342 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25342))
                        staticcall address(_25342).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25737 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16876
                        s = mem[_25737] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17482)
                        mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 2 < mem[96]
                            _18847 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                            t = 0
                            u = _16876 + 32
                            v = _16876 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16876]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18847))
                            call address(_18847).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22678 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22858 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160] = _22858
                            require return_data.size >= _22678 + (32 * _22858) + 32
                            t = _16876 + (4 * ceil32(return_data.size)) + _22678 + 192
                            u = _16876 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22858:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16876] - 1 < mem[_16876]
                            _25344 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25344))
                            staticcall address(_25344).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25738 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16876
                            s = mem[_25738] - ext_call.return_data[0]
                            continue 
                        mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                        mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17462))
                        call address(_17462).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17482), -1
                        mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 2 < mem[96]
                        _19652 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                        t = 0
                        u = _16876 + 32
                        v = _16876 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16876]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19652))
                        call address(_19652).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22679 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22859 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22859
                        require return_data.size >= _22679 + (32 * _22859) + 32
                        t = _16876 + (6 * ceil32(return_data.size)) + _22679 + 192
                        u = _16876 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22859:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16876] - 1 < mem[_16876]
                        _25346 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25346))
                        staticcall address(_25346).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25739 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16876
                        s = mem[_25739] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16876 + 44 len 20])
                    staticcall mem[_16876 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                    require ext_code.size(mem[_16876 + 44 len 20])
                    staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17482)
                    mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11222 / 2) + 2 < mem[96]
                        _19155 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                        mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                        t = 0
                        u = _16876 + 32
                        v = _16876 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16876]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19155))
                        call address(_19155).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22680 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22860 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160] = _22860
                        require return_data.size >= _22680 + (32 * _22860) + 32
                        t = _16876 + (4 * ceil32(return_data.size)) + _22680 + 192
                        u = _16876 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22860:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16876] - 1 < mem[_16876]
                        _25348 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25348))
                        staticcall address(_25348).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16876
                        s = mem[_25740] - ext_call.return_data[0]
                        continue 
                    mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                    mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17462))
                    call address(_17462).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17482), -1
                    mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11222 / 2) + 2 < mem[96]
                    _19928 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                    mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                    t = 0
                    u = _16876 + 32
                    v = _16876 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16876]:
                        mem[v] = mem[u + 12 len 20]
                        _16734 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19928))
                    call address(_19928).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22681 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22861 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22861
                    require return_data.size >= _22681 + (32 * _22861) + 32
                    t = _16876 + (6 * ceil32(return_data.size)) + _22681 + 192
                    u = _16876 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22861:
                        mem[u] = mem[t]
                        _16734 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16876] - 1 < mem[_16876]
                    _25350 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25350))
                    staticcall address(_25350).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25741 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16734 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16876
                    s = mem[_25741] - ext_call.return_data[0]
                    continue 
                require _11222 / 2 < mem[96]
                _16764 = mem[(16 * Mask(251, 1, _11222)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16764))
                staticcall address(_16764).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16824 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16824] < _11300 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11227 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11257 = mem[_11227]
                    require mem[_11227] == mem[_11227 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11304 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11304)
                    require ext_code.size(address(_11257))
                    staticcall address(_11257).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11304)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11383 = mem[_11359]
                    require mem[_11359] == mem[_11359 + 12 len 20]
                    require ext_code.size(mem[_11359 + 12 len 20])
                    staticcall mem[_11359 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11731 = mem[_11575]
                    require mem[_11575] == mem[_11575 + 18 len 14]
                    _11851 = mem[_11575 + 32]
                    require mem[_11575 + 32] == mem[_11575 + 50 len 14]
                    require mem[_11575 + 64] == mem[_11575 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 50 len 14] / (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            idx = idx + 1
                            s = _11383
                            s = 997 * s * Mask(112, 0, _11851) / (997 * s) + (1000 * Mask(112, 0, _11731))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 50 len 14] / (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            idx = idx + 1
                            s = _11383
                            s = 997 * s * Mask(112, 0, _11851) / (997 * s) + (1000 * Mask(112, 0, _11731))
                            continue 
                    require (997 * s) + (1000 * mem[_11575 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 18 len 14] / (997 * s) + (1000 * mem[_11575 + 50 len 14])
                    idx = idx + 1
                    s = _11383
                    s = 997 * s * Mask(112, 0, _11731) / (997 * s) + (1000 * Mask(112, 0, _11851))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11225 = mem[96]
                require mem[96] / 2 < mem[96]
                _11254 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11254))
                staticcall address(_11254).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11274 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11303 = mem[_11274]
                _16735 = mem[96]
                idx = _11225 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16735 - 1:
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    require idx - (_11225 / 2) < mem[96]
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                        require idx - (_11225 / 2) < mem[96]
                        if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                            _16879 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16879 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16879]
                            mem[_16879 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16879]
                            mem[_16879 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16879] - 1 < mem[_16879]
                            mem[_16879 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16879] - 1) + _16879 + 44 len 20])
                            staticcall mem[(32 * mem[_16879] - 1) + _16879 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16879 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16879]
                            _17362 = mem[_16879 + 32]
                            require idx - (_11225 / 2) < mem[96]
                            _17386 = mem[(32 * idx - (_11225 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17386)
                                mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18298 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                    s = 0
                                    t = _16879 + 32
                                    u = _16879 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16879]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16735 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18298))
                                    call address(_18298).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16879 + (4 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22502 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22682 = mem[_22502]
                                    require mem[_22502] <= test266151307()
                                    require _22502 + return_data.size > _22502 + mem[_22502] + 31
                                    _22862 = mem[_22502 + mem[_22502]]
                                    require mem[_22502 + mem[_22502]] <= test266151307()
                                    require (32 * mem[_22502 + mem[_22502]]) + 32 >= 0 and _22502 + ceil32(return_data.size) + (32 * mem[_22502 + mem[_22502]]) + 32 <= test266151307()
                                    mem[64] = _22502 + ceil32(return_data.size) + (32 * mem[_22502 + mem[_22502]]) + 32
                                    mem[_22502 + ceil32(return_data.size)] = _22862
                                    require return_data.size >= _22682 + (32 * _22862) + 32
                                    t = _22502 + _22682 + 32
                                    u = _22502 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22862:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16879] - 1 < mem[_16879]
                                    _25352 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25352))
                                    staticcall address(_25352).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25742 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16879
                                    s = mem[_25742] - ext_call.return_data[0]
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17362))
                                call address(_17362).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17386), -1
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _18957 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                                s = 0
                                t = _16879 + 32
                                u = _16879 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16879]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18957))
                                call address(_18957).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22503 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22683 = mem[_22503]
                                require mem[_22503] <= test266151307()
                                require _22503 + return_data.size > _22503 + mem[_22503] + 31
                                _22863 = mem[_22503 + mem[_22503]]
                                require mem[_22503 + mem[_22503]] <= test266151307()
                                require (32 * mem[_22503 + mem[_22503]]) + 32 >= 0 and _22503 + ceil32(return_data.size) + (32 * mem[_22503 + mem[_22503]]) + 32 <= test266151307()
                                mem[64] = _22503 + ceil32(return_data.size) + (32 * mem[_22503 + mem[_22503]]) + 32
                                mem[_22503 + ceil32(return_data.size)] = _22863
                                require return_data.size >= _22683 + (32 * _22863) + 32
                                t = _22503 + _22683 + 32
                                u = _22503 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22863:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25354 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25354))
                                staticcall address(_25354).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25743] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17386)
                                mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18494 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                    s = 0
                                    t = _16879 + 32
                                    u = _16879 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16879]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16735 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18494))
                                    call address(_18494).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16879 + (4 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22504 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22684 = mem[_22504]
                                    require mem[_22504] <= test266151307()
                                    require _22504 + return_data.size > _22504 + mem[_22504] + 31
                                    _22864 = mem[_22504 + mem[_22504]]
                                    require mem[_22504 + mem[_22504]] <= test266151307()
                                    require (32 * mem[_22504 + mem[_22504]]) + 32 >= 0 and _22504 + ceil32(return_data.size) + (32 * mem[_22504 + mem[_22504]]) + 32 <= test266151307()
                                    mem[64] = _22504 + ceil32(return_data.size) + (32 * mem[_22504 + mem[_22504]]) + 32
                                    mem[_22504 + ceil32(return_data.size)] = _22864
                                    require return_data.size >= _22684 + (32 * _22864) + 32
                                    t = _22504 + _22684 + 32
                                    u = _22504 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22864:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16879] - 1 < mem[_16879]
                                    _25356 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25356))
                                    staticcall address(_25356).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25744 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16879
                                    s = mem[_25744] - ext_call.return_data[0]
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17362))
                                call address(_17362).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17386), -1
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _19259 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                                s = 0
                                t = _16879 + 32
                                u = _16879 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16879]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19259))
                                call address(_19259).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22505 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22685 = mem[_22505]
                                require mem[_22505] <= test266151307()
                                require _22505 + return_data.size > _22505 + mem[_22505] + 31
                                _22865 = mem[_22505 + mem[_22505]]
                                require mem[_22505 + mem[_22505]] <= test266151307()
                                require (32 * mem[_22505 + mem[_22505]]) + 32 >= 0 and _22505 + ceil32(return_data.size) + (32 * mem[_22505 + mem[_22505]]) + 32 <= test266151307()
                                mem[64] = _22505 + ceil32(return_data.size) + (32 * mem[_22505 + mem[_22505]]) + 32
                                mem[_22505 + ceil32(return_data.size)] = _22865
                                require return_data.size >= _22685 + (32 * _22865) + 32
                                t = _22505 + _22685 + 32
                                u = _22505 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22865:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25358 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25358))
                                staticcall address(_25358).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25745 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25745] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16879 + 44 len 20])
                            staticcall mem[_16879 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                            require ext_code.size(mem[_16879 + 44 len 20])
                            staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17386)
                            mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11225 / 2) < mem[96]
                                _18756 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                s = 0
                                t = _16879 + 32
                                u = _16879 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16879]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18756))
                                call address(_18756).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16879 + (4 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22506 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22686 = mem[_22506]
                                require mem[_22506] <= test266151307()
                                require _22506 + return_data.size > _22506 + mem[_22506] + 31
                                _22866 = mem[_22506 + mem[_22506]]
                                require mem[_22506 + mem[_22506]] <= test266151307()
                                require (32 * mem[_22506 + mem[_22506]]) + 32 >= 0 and _22506 + ceil32(return_data.size) + (32 * mem[_22506 + mem[_22506]]) + 32 <= test266151307()
                                mem[64] = _22506 + ceil32(return_data.size) + (32 * mem[_22506 + mem[_22506]]) + 32
                                mem[_22506 + ceil32(return_data.size)] = _22866
                                require return_data.size >= _22686 + (32 * _22866) + 32
                                t = _22506 + _22686 + 32
                                u = _22506 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22866:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25360 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25360))
                                staticcall address(_25360).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25746 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25746] - ext_call.return_data[0]
                                continue 
                            mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                            mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17362))
                            call address(_17362).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17386), -1
                            mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11225 / 2) < mem[96]
                            _19560 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                            s = 0
                            t = _16879 + 32
                            u = _16879 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16879]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19560))
                            call address(_19560).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22507 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22687 = mem[_22507]
                            require mem[_22507] <= test266151307()
                            require _22507 + return_data.size > _22507 + mem[_22507] + 31
                            _22867 = mem[_22507 + mem[_22507]]
                            require mem[_22507 + mem[_22507]] <= test266151307()
                            require (32 * mem[_22507 + mem[_22507]]) + 32 >= 0 and _22507 + ceil32(return_data.size) + (32 * mem[_22507 + mem[_22507]]) + 32 <= test266151307()
                            mem[64] = _22507 + ceil32(return_data.size) + (32 * mem[_22507 + mem[_22507]]) + 32
                            mem[_22507 + ceil32(return_data.size)] = _22867
                            require return_data.size >= _22687 + (32 * _22867) + 32
                            t = _22507 + _22687 + 32
                            u = _22507 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22867:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16879] - 1 < mem[_16879]
                            _25362 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25362))
                            staticcall address(_25362).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16879
                            s = mem[_25747] - ext_call.return_data[0]
                            continue 
                        _16881 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16881 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16881]
                        mem[_16881 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16881]
                        mem[_16881 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16881]
                        mem[_16881 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16881] - 1 < mem[_16881]
                        mem[_16881 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16881] - 1) + _16881 + 44 len 20])
                        staticcall mem[(32 * mem[_16881] - 1) + _16881 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16881 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16881]
                        _17410 = mem[_16881 + 32]
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _17439 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17439)
                            mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18425 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                                s = 0
                                t = _16881 + 32
                                u = _16881 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16881]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18425))
                                call address(_18425).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22508 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22688 = mem[_22508]
                                require mem[_22508] <= test266151307()
                                require _22508 + return_data.size > _22508 + mem[_22508] + 31
                                _22868 = mem[_22508 + mem[_22508]]
                                require mem[_22508 + mem[_22508]] <= test266151307()
                                require (32 * mem[_22508 + mem[_22508]]) + 32 >= 0 and _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32 <= test266151307()
                                mem[64] = _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32
                                mem[_22508 + ceil32(return_data.size)] = _22868
                                require return_data.size >= _22688 + (32 * _22868) + 32
                                t = _22508 + _22688 + 32
                                u = _22508 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22868:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16881] - 1 < mem[_16881]
                                _25364 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25364))
                                staticcall address(_25364).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25748 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16881
                                s = mem[_25748] - ext_call.return_data[0]
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17410))
                            call address(_17410).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17439), -1
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19164 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19164))
                            call address(_19164).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22509 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22689 = mem[_22509]
                            require mem[_22509] <= test266151307()
                            require _22509 + return_data.size > _22509 + mem[_22509] + 31
                            _22869 = mem[_22509 + mem[_22509]]
                            require mem[_22509 + mem[_22509]] <= test266151307()
                            require (32 * mem[_22509 + mem[_22509]]) + 32 >= 0 and _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32 <= test266151307()
                            mem[64] = _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32
                            mem[_22509 + ceil32(return_data.size)] = _22869
                            require return_data.size >= _22689 + (32 * _22869) + 32
                            t = _22509 + _22689 + 32
                            u = _22509 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22869:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25366 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25366))
                            staticcall address(_25366).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25749] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17439)
                            mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18668 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                                s = 0
                                t = _16881 + 32
                                u = _16881 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16881]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18668))
                                call address(_18668).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22510 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22690 = mem[_22510]
                                require mem[_22510] <= test266151307()
                                require _22510 + return_data.size > _22510 + mem[_22510] + 31
                                _22870 = mem[_22510 + mem[_22510]]
                                require mem[_22510 + mem[_22510]] <= test266151307()
                                require (32 * mem[_22510 + mem[_22510]]) + 32 >= 0 and _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32 <= test266151307()
                                mem[64] = _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32
                                mem[_22510 + ceil32(return_data.size)] = _22870
                                require return_data.size >= _22690 + (32 * _22870) + 32
                                t = _22510 + _22690 + 32
                                u = _22510 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22870:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16881] - 1 < mem[_16881]
                                _25368 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25368))
                                staticcall address(_25368).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25750 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16881
                                s = mem[_25750] - ext_call.return_data[0]
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17410))
                            call address(_17410).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17439), -1
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19465 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19465))
                            call address(_19465).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22511 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22691 = mem[_22511]
                            require mem[_22511] <= test266151307()
                            require _22511 + return_data.size > _22511 + mem[_22511] + 31
                            _22871 = mem[_22511 + mem[_22511]]
                            require mem[_22511 + mem[_22511]] <= test266151307()
                            require (32 * mem[_22511 + mem[_22511]]) + 32 >= 0 and _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32 <= test266151307()
                            mem[64] = _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32
                            mem[_22511 + ceil32(return_data.size)] = _22871
                            require return_data.size >= _22691 + (32 * _22871) + 32
                            t = _22511 + _22691 + 32
                            u = _22511 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22871:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25370 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25370))
                            staticcall address(_25370).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25751 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25751] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16881 + 44 len 20])
                        staticcall mem[_16881 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                        require ext_code.size(mem[_16881 + 44 len 20])
                        staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17439)
                        mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _18962 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18962))
                            call address(_18962).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22512 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22692 = mem[_22512]
                            require mem[_22512] <= test266151307()
                            require _22512 + return_data.size > _22512 + mem[_22512] + 31
                            _22872 = mem[_22512 + mem[_22512]]
                            require mem[_22512 + mem[_22512]] <= test266151307()
                            require (32 * mem[_22512 + mem[_22512]]) + 32 >= 0 and _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32 <= test266151307()
                            mem[64] = _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32
                            mem[_22512 + ceil32(return_data.size)] = _22872
                            require return_data.size >= _22692 + (32 * _22872) + 32
                            t = _22512 + _22692 + 32
                            u = _22512 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22872:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25372 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25372))
                            staticcall address(_25372).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25752] - ext_call.return_data[0]
                            continue 
                        mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                        mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17410))
                        call address(_17410).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17439), -1
                        mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _19761 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                        s = 0
                        t = _16881 + 32
                        u = _16881 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16881]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19761))
                        call address(_19761).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22513 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22693 = mem[_22513]
                        require mem[_22513] <= test266151307()
                        require _22513 + return_data.size > _22513 + mem[_22513] + 31
                        _22873 = mem[_22513 + mem[_22513]]
                        require mem[_22513 + mem[_22513]] <= test266151307()
                        require (32 * mem[_22513 + mem[_22513]]) + 32 >= 0 and _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32 <= test266151307()
                        mem[64] = _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32
                        mem[_22513 + ceil32(return_data.size)] = _22873
                        require return_data.size >= _22693 + (32 * _22873) + 32
                        t = _22513 + _22693 + 32
                        u = _22513 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22873:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16881] - 1 < mem[_16881]
                        _25374 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25374))
                        staticcall address(_25374).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16881
                        s = mem[_25753] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11225 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11225 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        require idx - (_11225 / 2) < mem[96]
                        if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                            _17018 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17018 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17018]
                            mem[_17018 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17018]
                            mem[_17018 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17018] - 1 < mem[_17018]
                            mem[_17018 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17018] - 1) + _17018 + 44 len 20])
                            staticcall mem[(32 * mem[_17018] - 1) + _17018 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17018 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17018]
                            _17440 = mem[_17018 + 32]
                            require idx - (_11225 / 2) < mem[96]
                            _17464 = mem[(32 * idx - (_11225 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17018 + 44 len 20])
                                staticcall mem[_17018 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                                require ext_code.size(mem[_17018 + 44 len 20])
                                staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17464)
                                mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18498 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                                    s = 0
                                    t = _17018 + 32
                                    u = _17018 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17018]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16735 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18498))
                                    call address(_18498).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22514 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22694 = mem[_22514]
                                    require mem[_22514] <= test266151307()
                                    require _22514 + return_data.size > _22514 + mem[_22514] + 31
                                    _22874 = mem[_22514 + mem[_22514]]
                                    require mem[_22514 + mem[_22514]] <= test266151307()
                                    require (32 * mem[_22514 + mem[_22514]]) + 32 >= 0 and _22514 + ceil32(return_data.size) + (32 * mem[_22514 + mem[_22514]]) + 32 <= test266151307()
                                    mem[64] = _22514 + ceil32(return_data.size) + (32 * mem[_22514 + mem[_22514]]) + 32
                                    mem[_22514 + ceil32(return_data.size)] = _22874
                                    require return_data.size >= _22694 + (32 * _22874) + 32
                                    t = _22514 + _22694 + 32
                                    u = _22514 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22874:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17018] - 1 < mem[_17018]
                                    _25376 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25376))
                                    staticcall address(_25376).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25754 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17018
                                    s = mem[_25754] - ext_call.return_data[0]
                                    continue 
                                mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                                mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17440))
                                call address(_17440).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17464), -1
                                mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _19263 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                                s = 0
                                t = _17018 + 32
                                u = _17018 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17018]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19263))
                                call address(_19263).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22515 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22695 = mem[_22515]
                                require mem[_22515] <= test266151307()
                                require _22515 + return_data.size > _22515 + mem[_22515] + 31
                                _22875 = mem[_22515 + mem[_22515]]
                                require mem[_22515 + mem[_22515]] <= test266151307()
                                require (32 * mem[_22515 + mem[_22515]]) + 32 >= 0 and _22515 + ceil32(return_data.size) + (32 * mem[_22515 + mem[_22515]]) + 32 <= test266151307()
                                mem[64] = _22515 + ceil32(return_data.size) + (32 * mem[_22515 + mem[_22515]]) + 32
                                mem[_22515 + ceil32(return_data.size)] = _22875
                                require return_data.size >= _22695 + (32 * _22875) + 32
                                t = _22515 + _22695 + 32
                                u = _22515 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22875:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17018] - 1 < mem[_17018]
                                _25378 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25378))
                                staticcall address(_25378).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25755 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17018
                                s = mem[_25755] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17018 + 44 len 20])
                                staticcall mem[_17018 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                                require ext_code.size(mem[_17018 + 44 len 20])
                                staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17464)
                                mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18762 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                                    s = 0
                                    t = _17018 + 32
                                    u = _17018 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17018]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16735 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18762))
                                    call address(_18762).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22516 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22696 = mem[_22516]
                                    require mem[_22516] <= test266151307()
                                    require _22516 + return_data.size > _22516 + mem[_22516] + 31
                                    _22876 = mem[_22516 + mem[_22516]]
                                    require mem[_22516 + mem[_22516]] <= test266151307()
                                    require (32 * mem[_22516 + mem[_22516]]) + 32 >= 0 and _22516 + ceil32(return_data.size) + (32 * mem[_22516 + mem[_22516]]) + 32 <= test266151307()
                                    mem[64] = _22516 + ceil32(return_data.size) + (32 * mem[_22516 + mem[_22516]]) + 32
                                    mem[_22516 + ceil32(return_data.size)] = _22876
                                    require return_data.size >= _22696 + (32 * _22876) + 32
                                    t = _22516 + _22696 + 32
                                    u = _22516 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22876:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17018] - 1 < mem[_17018]
                                    _25380 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25380))
                                    staticcall address(_25380).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25756 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17018
                                    s = mem[_25756] - ext_call.return_data[0]
                                    continue 
                                mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                                mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17440))
                                call address(_17440).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17464), -1
                                mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _19566 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                                s = 0
                                t = _17018 + 32
                                u = _17018 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17018]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19566))
                                call address(_19566).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22517 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22697 = mem[_22517]
                                require mem[_22517] <= test266151307()
                                require _22517 + return_data.size > _22517 + mem[_22517] + 31
                                _22877 = mem[_22517 + mem[_22517]]
                                require mem[_22517 + mem[_22517]] <= test266151307()
                                require (32 * mem[_22517 + mem[_22517]]) + 32 >= 0 and _22517 + ceil32(return_data.size) + (32 * mem[_22517 + mem[_22517]]) + 32 <= test266151307()
                                mem[64] = _22517 + ceil32(return_data.size) + (32 * mem[_22517 + mem[_22517]]) + 32
                                mem[_22517 + ceil32(return_data.size)] = _22877
                                require return_data.size >= _22697 + (32 * _22877) + 32
                                t = _22517 + _22697 + 32
                                u = _22517 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22877:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17018] - 1 < mem[_17018]
                                _25382 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25382))
                                staticcall address(_25382).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25757 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17018
                                s = mem[_25757] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17464)
                            mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11225 / 2) < mem[96]
                                _19049 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                                s = 0
                                t = _17018 + 32
                                u = _17018 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17018]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19049))
                                call address(_19049).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22518 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22698 = mem[_22518]
                                require mem[_22518] <= test266151307()
                                require _22518 + return_data.size > _22518 + mem[_22518] + 31
                                _22878 = mem[_22518 + mem[_22518]]
                                require mem[_22518 + mem[_22518]] <= test266151307()
                                require (32 * mem[_22518 + mem[_22518]]) + 32 >= 0 and _22518 + ceil32(return_data.size) + (32 * mem[_22518 + mem[_22518]]) + 32 <= test266151307()
                                mem[64] = _22518 + ceil32(return_data.size) + (32 * mem[_22518 + mem[_22518]]) + 32
                                mem[_22518 + ceil32(return_data.size)] = _22878
                                require return_data.size >= _22698 + (32 * _22878) + 32
                                t = _22518 + _22698 + 32
                                u = _22518 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22878:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17018] - 1 < mem[_17018]
                                _25384 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25384))
                                staticcall address(_25384).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25758 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17018
                                s = mem[_25758] - ext_call.return_data[0]
                                continue 
                            mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                            mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17440))
                            call address(_17440).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17464), -1
                            mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11225 / 2) < mem[96]
                            _19842 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                            s = 0
                            t = _17018 + 32
                            u = _17018 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17018]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19842))
                            call address(_19842).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22519 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22699 = mem[_22519]
                            require mem[_22519] <= test266151307()
                            require _22519 + return_data.size > _22519 + mem[_22519] + 31
                            _22879 = mem[_22519 + mem[_22519]]
                            require mem[_22519 + mem[_22519]] <= test266151307()
                            require (32 * mem[_22519 + mem[_22519]]) + 32 >= 0 and _22519 + ceil32(return_data.size) + (32 * mem[_22519 + mem[_22519]]) + 32 <= test266151307()
                            mem[64] = _22519 + ceil32(return_data.size) + (32 * mem[_22519 + mem[_22519]]) + 32
                            mem[_22519 + ceil32(return_data.size)] = _22879
                            require return_data.size >= _22699 + (32 * _22879) + 32
                            t = _22519 + _22699 + 32
                            u = _22519 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22879:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17018] - 1 < mem[_17018]
                            _25386 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25386))
                            staticcall address(_25386).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25759 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17018
                            s = mem[_25759] - ext_call.return_data[0]
                            continue 
                        _17020 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17020 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17020]
                        mem[_17020 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17020]
                        mem[_17020 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17020]
                        mem[_17020 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17020] - 1 < mem[_17020]
                        mem[_17020 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17020] - 1) + _17020 + 44 len 20])
                        staticcall mem[(32 * mem[_17020] - 1) + _17020 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17020 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17020]
                        _17483 = mem[_17020 + 32]
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _17491 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17020 + 44 len 20])
                            staticcall mem[_17020 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                            require ext_code.size(mem[_17020 + 44 len 20])
                            staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17491)
                            mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18675 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                                s = 0
                                t = _17020 + 32
                                u = _17020 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17020]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18675))
                                call address(_18675).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22520 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22700 = mem[_22520]
                                require mem[_22520] <= test266151307()
                                require _22520 + return_data.size > _22520 + mem[_22520] + 31
                                _22880 = mem[_22520 + mem[_22520]]
                                require mem[_22520 + mem[_22520]] <= test266151307()
                                require (32 * mem[_22520 + mem[_22520]]) + 32 >= 0 and _22520 + ceil32(return_data.size) + (32 * mem[_22520 + mem[_22520]]) + 32 <= test266151307()
                                mem[64] = _22520 + ceil32(return_data.size) + (32 * mem[_22520 + mem[_22520]]) + 32
                                mem[_22520 + ceil32(return_data.size)] = _22880
                                require return_data.size >= _22700 + (32 * _22880) + 32
                                t = _22520 + _22700 + 32
                                u = _22520 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22880:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17020] - 1 < mem[_17020]
                                _25388 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25388))
                                staticcall address(_25388).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25760 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17020
                                s = mem[_25760] - ext_call.return_data[0]
                                continue 
                            mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                            mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17483))
                            call address(_17483).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17491), -1
                            mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19473 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                            s = 0
                            t = _17020 + 32
                            u = _17020 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17020]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19473))
                            call address(_19473).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22521 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22701 = mem[_22521]
                            require mem[_22521] <= test266151307()
                            require _22521 + return_data.size > _22521 + mem[_22521] + 31
                            _22881 = mem[_22521 + mem[_22521]]
                            require mem[_22521 + mem[_22521]] <= test266151307()
                            require (32 * mem[_22521 + mem[_22521]]) + 32 >= 0 and _22521 + ceil32(return_data.size) + (32 * mem[_22521 + mem[_22521]]) + 32 <= test266151307()
                            mem[64] = _22521 + ceil32(return_data.size) + (32 * mem[_22521 + mem[_22521]]) + 32
                            mem[_22521 + ceil32(return_data.size)] = _22881
                            require return_data.size >= _22701 + (32 * _22881) + 32
                            t = _22521 + _22701 + 32
                            u = _22521 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22881:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17020] - 1 < mem[_17020]
                            _25390 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25390))
                            staticcall address(_25390).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25761 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17020
                            s = mem[_25761] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17020 + 44 len 20])
                            staticcall mem[_17020 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                            require ext_code.size(mem[_17020 + 44 len 20])
                            staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17491)
                            mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18968 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                                s = 0
                                t = _17020 + 32
                                u = _17020 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17020]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18968))
                                call address(_18968).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22522 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22702 = mem[_22522]
                                require mem[_22522] <= test266151307()
                                require _22522 + return_data.size > _22522 + mem[_22522] + 31
                                _22882 = mem[_22522 + mem[_22522]]
                                require mem[_22522 + mem[_22522]] <= test266151307()
                                require (32 * mem[_22522 + mem[_22522]]) + 32 >= 0 and _22522 + ceil32(return_data.size) + (32 * mem[_22522 + mem[_22522]]) + 32 <= test266151307()
                                mem[64] = _22522 + ceil32(return_data.size) + (32 * mem[_22522 + mem[_22522]]) + 32
                                mem[_22522 + ceil32(return_data.size)] = _22882
                                require return_data.size >= _22702 + (32 * _22882) + 32
                                t = _22522 + _22702 + 32
                                u = _22522 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22882:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17020] - 1 < mem[_17020]
                                _25392 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25392))
                                staticcall address(_25392).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25762 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17020
                                s = mem[_25762] - ext_call.return_data[0]
                                continue 
                            mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                            mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17483))
                            call address(_17483).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17491), -1
                            mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19767 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                            s = 0
                            t = _17020 + 32
                            u = _17020 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17020]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19767))
                            call address(_19767).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22523 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22703 = mem[_22523]
                            require mem[_22523] <= test266151307()
                            require _22523 + return_data.size > _22523 + mem[_22523] + 31
                            _22883 = mem[_22523 + mem[_22523]]
                            require mem[_22523 + mem[_22523]] <= test266151307()
                            require (32 * mem[_22523 + mem[_22523]]) + 32 >= 0 and _22523 + ceil32(return_data.size) + (32 * mem[_22523 + mem[_22523]]) + 32 <= test266151307()
                            mem[64] = _22523 + ceil32(return_data.size) + (32 * mem[_22523 + mem[_22523]]) + 32
                            mem[_22523 + ceil32(return_data.size)] = _22883
                            require return_data.size >= _22703 + (32 * _22883) + 32
                            t = _22523 + _22703 + 32
                            u = _22523 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22883:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17020] - 1 < mem[_17020]
                            _25394 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25394))
                            staticcall address(_25394).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25763 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17020
                            s = mem[_25763] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17491)
                        mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19268 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                            s = 0
                            t = _17020 + 32
                            u = _17020 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17020]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19268))
                            call address(_19268).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22524 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22704 = mem[_22524]
                            require mem[_22524] <= test266151307()
                            require _22524 + return_data.size > _22524 + mem[_22524] + 31
                            _22884 = mem[_22524 + mem[_22524]]
                            require mem[_22524 + mem[_22524]] <= test266151307()
                            require (32 * mem[_22524 + mem[_22524]]) + 32 >= 0 and _22524 + ceil32(return_data.size) + (32 * mem[_22524 + mem[_22524]]) + 32 <= test266151307()
                            mem[64] = _22524 + ceil32(return_data.size) + (32 * mem[_22524 + mem[_22524]]) + 32
                            mem[_22524 + ceil32(return_data.size)] = _22884
                            require return_data.size >= _22704 + (32 * _22884) + 32
                            t = _22524 + _22704 + 32
                            u = _22524 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22884:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17020] - 1 < mem[_17020]
                            _25396 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25396))
                            staticcall address(_25396).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25764 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17020
                            s = mem[_25764] - ext_call.return_data[0]
                            continue 
                        mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                        mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17483))
                        call address(_17483).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17491), -1
                        mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _20020 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                        s = 0
                        t = _17020 + 32
                        u = _17020 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17020]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20020))
                        call address(_20020).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22525 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22705 = mem[_22525]
                        require mem[_22525] <= test266151307()
                        require _22525 + return_data.size > _22525 + mem[_22525] + 31
                        _22885 = mem[_22525 + mem[_22525]]
                        require mem[_22525 + mem[_22525]] <= test266151307()
                        require (32 * mem[_22525 + mem[_22525]]) + 32 >= 0 and _22525 + ceil32(return_data.size) + (32 * mem[_22525 + mem[_22525]]) + 32 <= test266151307()
                        mem[64] = _22525 + ceil32(return_data.size) + (32 * mem[_22525 + mem[_22525]]) + 32
                        mem[_22525 + ceil32(return_data.size)] = _22885
                        require return_data.size >= _22705 + (32 * _22885) + 32
                        t = _22525 + _22705 + 32
                        u = _22525 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22885:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17020] - 1 < mem[_17020]
                        _25398 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25398))
                        staticcall address(_25398).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25765 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17020
                        s = mem[_25765] - ext_call.return_data[0]
                        continue 
                    _16884 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16884 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16884]
                    mem[_16884 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16884]
                    mem[_16884 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16884]
                    mem[_16884 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16884]
                    mem[_16884 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16884] - 1 < mem[_16884]
                    mem[_16884 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16884] - 1) + _16884 + 44 len 20])
                    staticcall mem[(32 * mem[_16884] - 1) + _16884 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16884 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16884 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16884]
                    _17466 = mem[_16884 + 32]
                    require idx + -(_11225 / 2) + 2 < mem[96]
                    _17485 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17485)
                        mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 2 < mem[96]
                            _18586 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                            s = 0
                            t = _16884 + 32
                            u = _16884 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16884]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18586))
                            call address(_18586).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16884 + (4 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22526 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22706 = mem[_22526]
                            require mem[_22526] <= test266151307()
                            require _22526 + return_data.size > _22526 + mem[_22526] + 31
                            _22886 = mem[_22526 + mem[_22526]]
                            require mem[_22526 + mem[_22526]] <= test266151307()
                            require (32 * mem[_22526 + mem[_22526]]) + 32 >= 0 and _22526 + ceil32(return_data.size) + (32 * mem[_22526 + mem[_22526]]) + 32 <= test266151307()
                            mem[64] = _22526 + ceil32(return_data.size) + (32 * mem[_22526 + mem[_22526]]) + 32
                            mem[_22526 + ceil32(return_data.size)] = _22886
                            require return_data.size >= _22706 + (32 * _22886) + 32
                            t = _22526 + _22706 + 32
                            u = _22526 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22886:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16884] - 1 < mem[_16884]
                            _25400 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25400))
                            staticcall address(_25400).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25766 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16884
                            s = mem[_25766] - ext_call.return_data[0]
                            continue 
                        mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                        mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17466))
                        call address(_17466).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17485), -1
                        mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 2 < mem[96]
                        _19372 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                        mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                        s = 0
                        t = _16884 + 32
                        u = _16884 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16884]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19372))
                        call address(_19372).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22527 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22707 = mem[_22527]
                        require mem[_22527] <= test266151307()
                        require _22527 + return_data.size > _22527 + mem[_22527] + 31
                        _22887 = mem[_22527 + mem[_22527]]
                        require mem[_22527 + mem[_22527]] <= test266151307()
                        require (32 * mem[_22527 + mem[_22527]]) + 32 >= 0 and _22527 + ceil32(return_data.size) + (32 * mem[_22527 + mem[_22527]]) + 32 <= test266151307()
                        mem[64] = _22527 + ceil32(return_data.size) + (32 * mem[_22527 + mem[_22527]]) + 32
                        mem[_22527 + ceil32(return_data.size)] = _22887
                        require return_data.size >= _22707 + (32 * _22887) + 32
                        t = _22527 + _22707 + 32
                        u = _22527 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22887:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16884] - 1 < mem[_16884]
                        _25402 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25402))
                        staticcall address(_25402).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25767 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16884
                        s = mem[_25767] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17485)
                        mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 2 < mem[96]
                            _18863 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                            s = 0
                            t = _16884 + 32
                            u = _16884 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16884]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18863))
                            call address(_18863).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16884 + (4 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22528 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22708 = mem[_22528]
                            require mem[_22528] <= test266151307()
                            require _22528 + return_data.size > _22528 + mem[_22528] + 31
                            _22888 = mem[_22528 + mem[_22528]]
                            require mem[_22528 + mem[_22528]] <= test266151307()
                            require (32 * mem[_22528 + mem[_22528]]) + 32 >= 0 and _22528 + ceil32(return_data.size) + (32 * mem[_22528 + mem[_22528]]) + 32 <= test266151307()
                            mem[64] = _22528 + ceil32(return_data.size) + (32 * mem[_22528 + mem[_22528]]) + 32
                            mem[_22528 + ceil32(return_data.size)] = _22888
                            require return_data.size >= _22708 + (32 * _22888) + 32
                            t = _22528 + _22708 + 32
                            u = _22528 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22888:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16884] - 1 < mem[_16884]
                            _25404 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25404))
                            staticcall address(_25404).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25768 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16884
                            s = mem[_25768] - ext_call.return_data[0]
                            continue 
                        mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                        mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17466))
                        call address(_17466).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17485), -1
                        mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 2 < mem[96]
                        _19668 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                        mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                        s = 0
                        t = _16884 + 32
                        u = _16884 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16884]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19668))
                        call address(_19668).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22529 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22709 = mem[_22529]
                        require mem[_22529] <= test266151307()
                        require _22529 + return_data.size > _22529 + mem[_22529] + 31
                        _22889 = mem[_22529 + mem[_22529]]
                        require mem[_22529 + mem[_22529]] <= test266151307()
                        require (32 * mem[_22529 + mem[_22529]]) + 32 >= 0 and _22529 + ceil32(return_data.size) + (32 * mem[_22529 + mem[_22529]]) + 32 <= test266151307()
                        mem[64] = _22529 + ceil32(return_data.size) + (32 * mem[_22529 + mem[_22529]]) + 32
                        mem[_22529 + ceil32(return_data.size)] = _22889
                        require return_data.size >= _22709 + (32 * _22889) + 32
                        t = _22529 + _22709 + 32
                        u = _22529 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22889:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16884] - 1 < mem[_16884]
                        _25406 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25406))
                        staticcall address(_25406).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25769 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16884
                        s = mem[_25769] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16884 + 44 len 20])
                    staticcall mem[_16884 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                    require ext_code.size(mem[_16884 + 44 len 20])
                    staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17485)
                    mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11225 / 2) + 2 < mem[96]
                        _19175 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                        mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                        s = 0
                        t = _16884 + 32
                        u = _16884 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16884]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19175))
                        call address(_19175).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16884 + (4 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22530 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22710 = mem[_22530]
                        require mem[_22530] <= test266151307()
                        require _22530 + return_data.size > _22530 + mem[_22530] + 31
                        _22890 = mem[_22530 + mem[_22530]]
                        require mem[_22530 + mem[_22530]] <= test266151307()
                        require (32 * mem[_22530 + mem[_22530]]) + 32 >= 0 and _22530 + ceil32(return_data.size) + (32 * mem[_22530 + mem[_22530]]) + 32 <= test266151307()
                        mem[64] = _22530 + ceil32(return_data.size) + (32 * mem[_22530 + mem[_22530]]) + 32
                        mem[_22530 + ceil32(return_data.size)] = _22890
                        require return_data.size >= _22710 + (32 * _22890) + 32
                        t = _22530 + _22710 + 32
                        u = _22530 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22890:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16884] - 1 < mem[_16884]
                        _25408 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25408))
                        staticcall address(_25408).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25770 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16884
                        s = mem[_25770] - ext_call.return_data[0]
                        continue 
                    mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                    mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17466))
                    call address(_17466).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17485), -1
                    mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11225 / 2) + 2 < mem[96]
                    _19944 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                    mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                    s = 0
                    t = _16884 + 32
                    u = _16884 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16884]:
                        mem[u] = mem[t + 12 len 20]
                        _16735 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19944))
                    call address(_19944).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22531 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22711 = mem[_22531]
                    require mem[_22531] <= test266151307()
                    require _22531 + return_data.size > _22531 + mem[_22531] + 31
                    _22891 = mem[_22531 + mem[_22531]]
                    require mem[_22531 + mem[_22531]] <= test266151307()
                    require (32 * mem[_22531 + mem[_22531]]) + 32 >= 0 and _22531 + ceil32(return_data.size) + (32 * mem[_22531 + mem[_22531]]) + 32 <= test266151307()
                    mem[64] = _22531 + ceil32(return_data.size) + (32 * mem[_22531 + mem[_22531]]) + 32
                    mem[_22531 + ceil32(return_data.size)] = _22891
                    require return_data.size >= _22711 + (32 * _22891) + 32
                    t = _22531 + _22711 + 32
                    u = _22531 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22891:
                        mem[u] = mem[t]
                        _16735 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16884] - 1 < mem[_16884]
                    _25410 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25410))
                    staticcall address(_25410).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25771 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16735 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16884
                    s = mem[_25771] - ext_call.return_data[0]
                    continue 
                require _11225 / 2 < mem[96]
                _16768 = mem[(16 * Mask(251, 1, _11225)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16768))
                staticcall address(_16768).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16828 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16828] < _11303 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}



}
