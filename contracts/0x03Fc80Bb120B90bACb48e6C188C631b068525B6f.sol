contract main {




// =====================  Runtime code  =====================


#
#  - elkCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - uniswapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - wakaSwapCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - sub_3aa99232(?)
#  - pancakeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - sub_d92651f4(?)
#  - sub_fe39e90d(?)
#
function sub_1ca68e24(?) {
    require calldata.size - 4 >= 96
    require ext_code.size(0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c)
    call 0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
         gas gas_remaining wei
        args 0, arg1, address(this.address), 128, 64, arg2, arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function _fallback() {
    require 4 <= calldata.size
    require calldata.size <= calldata.size
    mem[calldata.size + 128] = 0
    mem[calldata.size + 128 len ceil32(calldata.size)] = 0, call.data[4 len calldata.size - 4], Mask(8 * ceil32(calldata.size) - calldata.size, -(8 * ceil32(calldata.size) - calldata.size) + 256, 0) >> -(8 * ceil32(calldata.size) - calldata.size) + 256
    if ceil32(calldata.size) <= calldata.size:
        delegate this.address with:
           funct (Mask(32, -(8 * ceil32(calldata.size) - calldata.size) + 224, 0, call.data[4 len calldata.size - 4]) >> -(8 * ceil32(calldata.size) - calldata.size) + 224)
             gas gas_remaining wei
            args (Mask(8 * calldata.size - 4, -(8 * calldata.size) + 256, call.data[4 len calldata.size - 4], Mask(8 * ceil32(calldata.size) - calldata.size, -(8 * ceil32(calldata.size) - calldata.size) + 256, 0) >> -(8 * ceil32(calldata.size) - calldata.size) + 256) << (8 * calldata.size) - 256)
    else:
        mem[(2 * calldata.size) + 128] = 0
        delegate this.address.mem[calldata.size + 128 len 4] with:
             gas gas_remaining wei
            args mem[calldata.size + 132 len calldata.size - 4]
    if not delegate.return_code:
        revert with 0, 'uniswapV2Call failed'
    return 0, call.data[4 len calldata.size - 4]
}

function sub_baff2a51(?) {
    require calldata.size - 4 >= 416
    require calldata.size - 36 >= 384
    require arg7 == uint16(arg7)
    if arg1 >= arg11:
        return 0
    if bool(arg2) != 10^6 > arg5:
        return 0
    if arg1 and arg2 > -1 / arg1:
        revert with 'NH{q', 17
    if arg1 < arg1 * arg2 / 100:
        revert with 'NH{q', 17
    if arg1 - (arg1 * arg2 / 100) and arg3 > -1 / arg1 - (arg1 * arg2 / 100):
        revert with 'NH{q', 17
    if (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 and 10^6 > -1 / (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6:
        revert with 'NH{q', 17
    if not arg5:
        revert with 'NH{q', 18
    if arg5 >= 10^6:
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 and arg4 > -1 / 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5:
            revert with 'NH{q', 17
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6:
            revert with 'NH{q', 17
        if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) and arg12 > -1 / (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 17
        if arg13 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg13 > !((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)):
            revert with 'NH{q', 17
        if not (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 18
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) >= arg12:
            return 0
        if not (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            return 0
        if arg11 < arg1:
            revert with 'NH{q', 17
        if arg11 - arg1 > -1:
            revert with 'NH{q', 17
        if arg11 - arg1 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if (1000 * arg11) - (1000 * arg1) < 0:
            revert with 'NH{q', 17
        if arg10 and arg11 > -1 / arg10:
            revert with 'NH{q', 17
        if arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if arg10 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * arg11) - (1000 * arg1):
            revert with 'NH{q', 18
        if 10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) < 1000 * arg10:
            revert with 'NH{q', 17
        if 1 > !((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1)) - (1000 * arg10) / 998):
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) <= ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1)) - (1000 * arg10) / 998) + 1:
            return 0
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) < ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1)) - (1000 * arg10) / 998) + 1:
            revert with 'NH{q', 17
        return ((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)) + -((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1)) - (1000 * arg10) / 998) - 1, 
               0
    if arg1 * arg2 / 100 > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
        revert with 'NH{q', 17
    if 998 * arg1 * arg2 / 100 and arg9 > -1 / 998 * arg1 * arg2 / 100:
        revert with 'NH{q', 17
    if arg8 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if 1000 * arg8 > !(998 * arg1 * arg2 / 100):
        revert with 'NH{q', 17
    if not (1000 * arg8) + (998 * arg1 * arg2 / 100):
        revert with 'NH{q', 18
    if 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) >= arg9:
        if uint16(arg7):
            if False and uint16(arg7) > 0:
                revert with 'NH{q', 17
            else:
                return 0
        else:
            return 0
    if not uint16(arg7):
        if not 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100):
            return 0
        if arg9 < 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100):
            revert with 'NH{q', 17
        if arg8 > !(arg1 * arg2 / 100):
            revert with 'NH{q', 17
        if arg8 + (arg1 * arg2 / 100) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
            revert with 'NH{q', 17
        if not arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)):
            revert with 'NH{q', 18
        if (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) and arg6 > -1 / (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)):
            revert with 'NH{q', 17
        if (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 and 10^6 > -1 / (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18:
            revert with 'NH{q', 17
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6:
            revert with 'NH{q', 17
        if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - ((arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) and 10^6 > -1 / (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - ((arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6):
            revert with 'NH{q', 17
        if not 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18:
            revert with 'NH{q', 18
        if 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) < (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18:
            return 0
        if not uint16(arg7):
            if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
                revert with 'NH{q', 17
            if (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) and arg8 + (arg1 * arg2 / 100) > -1 / (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18):
                revert with 'NH{q', 17
            if arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if (1000 * arg9) - (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) > !((998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)):
                revert with 'NH{q', 17
            if not (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18):
                revert with 'NH{q', 18
            if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) >= arg8 + (arg1 * arg2 / 100):
                return 0
            if not (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18):
                return 0
            if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 and arg4 > -1 / 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5:
                revert with 'NH{q', 17
            if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6:
                revert with 'NH{q', 17
            if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
                revert with 'NH{q', 17
            if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) and arg12 > -1 / (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
                revert with 'NH{q', 17
            if arg13 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * arg13 > !((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)):
                revert with 'NH{q', 17
            if not (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
                revert with 'NH{q', 18
            if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) >= arg12:
                return 0
            if not (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
                return 0
            if arg11 < arg1:
                revert with 'NH{q', 17
            if arg11 - arg1 > !((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)):
                revert with 'NH{q', 17
            if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                revert with 'NH{q', 17
            if arg11 - arg1 + ((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if (1000 * arg11) - (1000 * arg1) + (1000 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)) < 2 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18):
                revert with 'NH{q', 17
            if arg10 and arg11 > -1 / arg10:
                revert with 'NH{q', 17
            if arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if arg10 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)):
                revert with 'NH{q', 18
            if 10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18)) < 1000 * arg10:
                revert with 'NH{q', 17
            if 1 > !((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998):
                revert with 'NH{q', 17
            if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) <= ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) + 1:
                return 0, 
                       (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18
            if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) < ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) + 1:
                revert with 'NH{q', 17
            return ((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)) + -((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) - 1, 
                   (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18
        if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) and uint16(arg7) > -1 / (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18):
            revert with 'NH{q', 17
        if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) < (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000:
            revert with 'NH{q', 17
        if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - ((998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
            revert with 'NH{q', 17
        if (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) and arg8 + (arg1 * arg2 / 100) > -1 / (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
            revert with 'NH{q', 17
        if arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if (1000 * arg9) - (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) > !((998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
            revert with 'NH{q', 17
        if not (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
            revert with 'NH{q', 18
        if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) >= arg8 + (arg1 * arg2 / 100):
            return 0
        if not (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
            return 0
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 and arg4 > -1 / 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5:
            revert with 'NH{q', 17
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6:
            revert with 'NH{q', 17
        if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) and arg12 > -1 / (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 17
        if arg13 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg13 > !((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)):
            revert with 'NH{q', 17
        if not (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 18
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) >= arg12:
            return 0
        if not (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            return 0
        if arg11 < arg1:
            revert with 'NH{q', 17
        if arg11 - arg1 > !((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
            revert with 'NH{q', 17
        if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
            revert with 'NH{q', 17
        if arg11 - arg1 + ((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if (1000 * arg11) - (1000 * arg1) + (1000 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) < 2 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
            revert with 'NH{q', 17
        if arg10 and arg11 > -1 / arg10:
            revert with 'NH{q', 17
        if arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if arg10 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
            revert with 'NH{q', 18
        if 10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) < 1000 * arg10:
            revert with 'NH{q', 17
        if 1 > !((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998):
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) <= ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) + 1:
            return 0, 
                   (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) < ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) + 1:
            revert with 'NH{q', 17
        return ((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)) + -((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) - 1, 
               (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) * arg6 / 10^18 / 10^18
    if 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) and uint16(arg7) > -1 / 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100):
        revert with 'NH{q', 17
    if 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) < 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000:
        revert with 'NH{q', 17
    if not (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000):
        return 0
    if arg9 < (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000):
        revert with 'NH{q', 17
    if arg8 > !(arg1 * arg2 / 100):
        revert with 'NH{q', 17
    if arg8 + (arg1 * arg2 / 100) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
        revert with 'NH{q', 17
    if not arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000):
        revert with 'NH{q', 18
    if (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) and arg6 > -1 / (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000):
        revert with 'NH{q', 17
    if (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 and 10^6 > -1 / (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18:
        revert with 'NH{q', 17
    if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6:
        revert with 'NH{q', 17
    if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - ((arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) and 10^6 > -1 / (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - ((arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6):
        revert with 'NH{q', 17
    if not 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18:
        revert with 'NH{q', 18
    if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) < (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18:
        return 0
    if not uint16(arg7):
        if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
            revert with 'NH{q', 17
        if (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) and arg8 + (arg1 * arg2 / 100) > -1 / (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18):
            revert with 'NH{q', 17
        if arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if (1000 * arg9) - (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) > !((998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)):
            revert with 'NH{q', 17
        if not (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18):
            revert with 'NH{q', 18
        if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) >= arg8 + (arg1 * arg2 / 100):
            return 0
        if not (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18):
            return 0
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 and arg4 > -1 / 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5:
            revert with 'NH{q', 17
        if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6:
            revert with 'NH{q', 17
        if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) and arg12 > -1 / (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 17
        if arg13 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg13 > !((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)):
            revert with 'NH{q', 17
        if not (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            revert with 'NH{q', 18
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) >= arg12:
            return 0
        if not (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
            return 0
        if arg11 < arg1:
            revert with 'NH{q', 17
        if arg11 - arg1 > !((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)):
            revert with 'NH{q', 17
        if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
            revert with 'NH{q', 17
        if arg11 - arg1 + ((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if (1000 * arg11) - (1000 * arg1) + (1000 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)) < 2 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18):
            revert with 'NH{q', 17
        if arg10 and arg11 > -1 / arg10:
            revert with 'NH{q', 17
        if arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if arg10 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)):
            revert with 'NH{q', 18
        if 10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18)) < 1000 * arg10:
            revert with 'NH{q', 17
        if 1 > !((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998):
            revert with 'NH{q', 17
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) <= ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) + 1:
            return 0, 
                   (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18
        if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) < ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) + 1:
            revert with 'NH{q', 17
        return ((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)) + -((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18))) - (1000 * arg10) / 998) - 1, 
               (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18
    if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) and uint16(arg7) > -1 / (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18):
        revert with 'NH{q', 17
    if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) < (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000:
        revert with 'NH{q', 17
    if (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - ((998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
        revert with 'NH{q', 17
    if (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) and arg8 + (arg1 * arg2 / 100) > -1 / (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
        revert with 'NH{q', 17
    if arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if (1000 * arg9) - (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (1000 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) > !((998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
        revert with 'NH{q', 17
    if not (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
        revert with 'NH{q', 18
    if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) >= arg8 + (arg1 * arg2 / 100):
        return 0
    if not (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
        return 0
    if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 and arg4 > -1 / 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5:
        revert with 'NH{q', 17
    if 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 < 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6:
        revert with 'NH{q', 17
    if (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) > 0x41aad671e44bed87f3aff7caa531c376824f018a0106ab59c7912fb61fcebf:
        revert with 'NH{q', 17
    if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) and arg12 > -1 / (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
        revert with 'NH{q', 17
    if arg13 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if 1000 * arg13 > !((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)):
        revert with 'NH{q', 17
    if not (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
        revert with 'NH{q', 18
    if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) >= arg12:
        return 0
    if not (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6):
        return 0
    if arg11 < arg1:
        revert with 'NH{q', 17
    if arg11 - arg1 > !((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
        revert with 'NH{q', 17
    if (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
        revert with 'NH{q', 17
    if arg11 - arg1 + ((998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if (1000 * arg11) - (1000 * arg1) + (1000 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) < 2 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000):
        revert with 'NH{q', 17
    if arg10 and arg11 > -1 / arg10:
        revert with 'NH{q', 17
    if arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if 1000 * arg10 * arg11 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if arg10 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if not (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)):
        revert with 'NH{q', 18
    if 10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000)) < 1000 * arg10:
        revert with 'NH{q', 17
    if 1 > !((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998):
        revert with 'NH{q', 17
    if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) <= ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) + 1:
        return 0, 
               (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18
    if (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6) < ((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) + 1:
        revert with 'NH{q', 17
    return ((998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg12) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6 * arg12) / (1000 * arg13) + (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (998 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5 * arg4 / 10^6)) + -((10^6 * arg10 * arg11 / (1000 * arg11) - (1000 * arg1) + (1001 * (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) - (998 * arg8 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg1 * arg2 / 100 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * arg8 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg1 * arg2 / 100 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * arg8 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) - (998 * arg1 * arg2 / 100 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000) / (1000 * arg9) - (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (2 * 998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) - (998 * (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18) - (998 * (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7)) - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000 * uint16(arg7)) - ((10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18 * uint16(arg7)) / 10000))) - (1000 * arg10) / 998) - 1, 
           (10^6 * 10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6 / arg5) - (10^6 * (arg1 * arg3) - (arg1 * arg2 / 100 * arg3) / 10^6) / 10^6 * (10^18 * arg8) + (10^18 * arg1 * arg2 / 100) / arg9 - (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100)) + (998 * arg1 * arg2 / 100 * arg9 / (1000 * arg8) + (998 * arg1 * arg2 / 100) * uint16(arg7) / 10000) * arg6 / 10^18 / 10^18
}



}
