contract main {




// =====================  Runtime code  =====================


#
#  - safeTransferFrom(address arg1, address arg2, uint256 arg3)
#
address owner;
array of struct stor1;
array of struct stor2;
array of struct ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor6;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor8;
array of uint256 tokenByIndex;
mapping of uint256 stor10;
uint256 stor11;
uint256 donation;
uint256 sub_512697d5;
uint256 sub_cbe4e8e5;
uint256 sub_ad74321a;
uint256 sub_a4653009;
uint256 sub_0d3f9cf5;
uint8 sub_7f012530;
mapping of struct sub_631edbd0;
array of struct sub_4bc8a89c;

function getApproved(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function sub_0d3f9cf5(?) {
    return sub_0d3f9cf5
}

function totalSupply() {
    return tokenByIndex.length
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_4bc8a89c(?) {
    require calldata.size - 4 >= 96
    require arg1 == ('signextend', 15, ('param', 'arg1'))
    require arg2 == ('signextend', 15, ('param', 'arg2'))
    require arg3 < uint256(sub_4bc8a89c[arg1][arg2].field_0)
    return uint256(sub_4bc8a89c[arg1][arg2][arg3].field_0)
}

function tokenByIndex(uint256 arg1) {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function sub_512697d5(?) {
    return sub_512697d5
}

function sub_631edbd0(?) {
    require calldata.size - 4 >= 32
    return ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))), 
           ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))),
           ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))),
           uint8(sub_631edbd0[arg1].field_256),
           uint256(sub_631edbd0[arg1].field_512),
           bool(uint8(sub_631edbd0[arg1].field_768)),
           bool(uint8(sub_631edbd0[arg1].field_776))
}

function ownerOf(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return address(ownerOf[arg1].field_0)
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_7f012530(?) {
    return sub_7f012530
}

function owner() {
    return owner
}

function donation() {
    return donation
}

function sub_a4653009(?) {
    return sub_a4653009
}

function sub_ad74321a(?) {
    return sub_ad74321a
}

function sub_cbe4e8e5(?) {
    return sub_cbe4e8e5
}

function isApprovedForAll(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor6[address(arg1)][address(arg2)])
}

function _fallback() payable {
    revert
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_3257f76a(?) {
    require calldata.size - 4 >= 64
    require arg2 == uint8(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    donation = arg1
    sub_7f012530 = uint8(arg2)
}

function withdraw() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas gas_remaining wei
    require ext_call.success
}

function sub_e89f5023(?) {
    require calldata.size - 4 >= 160
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_cbe4e8e5 = arg1
    sub_ad74321a = arg2
    sub_a4653009 = arg3
    sub_0d3f9cf5 = arg4
    sub_512697d5 = arg5
}

function setApprovalForAll(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor6[msg.sender][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function supportsInterface(bytes4 arg1) {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function sub_86ae2ac6(?) {
    require calldata.size - 4 >= 64
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                revert with 0, 'Can't do that!'
    uint256(sub_631edbd0[arg1].field_512) = arg2
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not address(ownerOf[arg2].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == address(ownerOf[arg2].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if address(ownerOf[arg2].field_0) != msg.sender:
        if not stor6[address(stor3[arg2].field_0)][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not address(ownerOf[arg2].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(address(ownerOf[arg2].field_0), arg1, arg2);
}

function sub_7753ee11(?) {
    require calldata.size - 4 >= 64
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
                staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.getApproved(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != msg.sender:
                    require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
                    staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                            gas gas_remaining wei
                           args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] != msg.sender:
                        require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
                        staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                                gas gas_remaining wei
                               args arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
                        staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0xe985e9c5 with:
                                gas gas_remaining wei
                               args address(ext_call.return_data[0]), msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if not ext_call.return_data[0]:
                            revert with 0, 'Can't do that!'
    uint256(sub_631edbd0[arg1].field_512) = 0
}

function name() {
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor1.length):
            if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor1.length):
                if 31 < uint255(stor1.length) * 0.5:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor1.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor1[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
        else:
            if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor1.length.field_1 % 128:
                if 31 < stor1.length.field_1 % 128:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor1[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
        mem[ceil32(uint255(stor1.length) * 0.5) + 192 len ceil32(uint255(stor1.length) * 0.5)] = mem[128 len ceil32(uint255(stor1.length) * 0.5)]
        if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
            mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
    if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor1.length):
            if 31 < uint255(stor1.length) * 0.5:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while (uint255(stor1.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor1[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
    else:
        if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor1.length.field_1 % 128:
            if 31 < stor1.length.field_1 % 128:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor1[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
    mem[ceil32(stor1.length.field_1 % 128) + 192 len ceil32(stor1.length.field_1 % 128)] = mem[128 len ceil32(stor1.length.field_1 % 128)]
    if ceil32(stor1.length.field_1 % 128) > stor1.length.field_1 % 128:
        mem[stor1.length.field_1 % 128 + ceil32(stor1.length.field_1 % 128) + 192] = 0
    return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)], mem[(2 * ceil32(stor1.length.field_1 % 128)) + 192 len 2 * ceil32(stor1.length.field_1 % 128)]), 
}

function symbol() {
    if bool(stor2.length):
        if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor2.length):
            if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor2.length):
                if 31 < uint255(stor2.length) * 0.5:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor2.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor2[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
        else:
            if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor2.length.field_1 % 128:
                if 31 < stor2.length.field_1 % 128:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while stor2.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor2[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
        mem[ceil32(uint255(stor2.length) * 0.5) + 192 len ceil32(uint255(stor2.length) * 0.5)] = mem[128 len ceil32(uint255(stor2.length) * 0.5)]
        if ceil32(uint255(stor2.length) * 0.5) > uint255(stor2.length) * 0.5:
            mem[(uint255(stor2.length) * 0.5) + ceil32(uint255(stor2.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)], mem[(2 * ceil32(uint255(stor2.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor2.length) * 0.5)]), 
    if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor2.length):
        if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor2.length):
            if 31 < uint255(stor2.length) * 0.5:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while (uint255(stor2.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor2[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
    else:
        if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor2.length.field_1 % 128:
            if 31 < stor2.length.field_1 % 128:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while stor2.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor2[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
    mem[ceil32(stor2.length.field_1 % 128) + 192 len ceil32(stor2.length.field_1 % 128)] = mem[128 len ceil32(stor2.length.field_1 % 128)]
    if ceil32(stor2.length.field_1 % 128) > stor2.length.field_1 % 128:
        mem[stor2.length.field_1 % 128 + ceil32(stor2.length.field_1 % 128) + 192] = 0
    return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)], mem[(2 * ceil32(stor2.length.field_1 % 128)) + 192 len 2 * ceil32(stor2.length.field_1 % 128)]), 
}

function sub_858ffc23(?) {
    require calldata.size - 4 >= 64
    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 192
    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if 1 > !ext_call.return_data[0]:
        revert with 0, 17
    if 9 == uint32(ext_call.return_data[96]):
        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
            revert with 0, 17
        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
            revert with 0, 17
        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('param', 'arg2')) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
            revert with 0, 17
        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('param', 'arg2')) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
            revert with 0, 17
        return ('signextend', 0, ('add', ('signextend', 0, ('param', 'arg2')), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))
    if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
        revert with 0, 17
    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
        revert with 0, 17
    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
        revert with 0, 17
    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('param', 'arg2')) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
        revert with 0, 17
    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('param', 'arg2')) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
        revert with 0, 17
    return ('signextend', 0, ('add', ('signextend', 0, ('param', 'arg2')), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))
}

function walletOfOwner(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    mem[32] = 4
    if balanceOf[address(arg1)] > 0x2492492492492492492492492492492492492492492492492492492492492492:
        revert with 0, 17
    if 7 * balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = 7 * balanceOf[address(arg1)]
    mem[64] = (32 * 7 * balanceOf[address(arg1)]) + 128
    if not 7 * balanceOf[address(arg1)]:
        idx = 0
        s = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 19
            _80 = mem[64]
            mem[64] = mem[64] + 224
            mem[_80] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            mem[_80 + 32] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))
            mem[_80 + 64] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            mem[_80 + 96] = uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_264)
            mem[_80 + 128] = uint256(sub_631edbd0[stor7[address(arg1)][idx]].field_512)
            mem[_80 + 160] = bool(uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_768))
            mem[_80 + 192] = bool(uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_776))
            if s >= mem[96]:
                revert with 0, 50
            mem[(32 * s) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if s == -1:
                revert with 0, 17
            if s + 1 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 1) + 128] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))))
            if s + 1 == -1:
                revert with 0, 17
            if s + 2 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 2) + 128] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            if s + 2 == -1:
                revert with 0, 17
            if s + 3 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 3) + 128] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))))
            if s + 3 == -1:
                revert with 0, 17
            if s + 4 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 4) + 128] = uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_264)
            if s + 4 == -1:
                revert with 0, 17
            if s + 5 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 5) + 128] = uint256(sub_631edbd0[stor7[address(arg1)][idx]].field_512)
            if s + 5 == -1:
                revert with 0, 17
            if s + 6 >= mem[96]:
                revert with 0, 50
            if not uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_768):
                mem[(32 * s + 6) + 128] = 0
            else:
                mem[(32 * s + 6) + 128] = 1
            if s + 6 == -1:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + 7
            continue 
    else:
        mem[128 len 32 * 7 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * 7 * balanceOf[address(arg1)]]
        idx = 0
        s = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 19
            _84 = mem[64]
            mem[64] = mem[64] + 224
            mem[_84] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            mem[_84 + 32] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))
            mem[_84 + 64] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            mem[_84 + 96] = uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_264)
            mem[_84 + 128] = uint256(sub_631edbd0[stor7[address(arg1)][idx]].field_512)
            mem[_84 + 160] = bool(uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_768))
            mem[_84 + 192] = bool(uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_776))
            if s >= mem[96]:
                revert with 0, 50
            mem[(32 * s) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if s == -1:
                revert with 0, 17
            if s + 1 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 1) + 128] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))))
            if s + 1 == -1:
                revert with 0, 17
            if s + 2 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 2) + 128] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19))))))))
            if s + 2 == -1:
                revert with 0, 17
            if s + 3 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 3) + 128] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('map', ('var', 0), ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'stor7', 7)))), ('name', 'sub_631edbd0', 19)))))))))
            if s + 3 == -1:
                revert with 0, 17
            if s + 4 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 4) + 128] = uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_264)
            if s + 4 == -1:
                revert with 0, 17
            if s + 5 >= mem[96]:
                revert with 0, 50
            mem[(32 * s + 5) + 128] = uint256(sub_631edbd0[stor7[address(arg1)][idx]].field_512)
            if s + 5 == -1:
                revert with 0, 17
            if s + 6 >= mem[96]:
                revert with 0, 50
            if not uint8(sub_631edbd0[stor7[address(arg1)][idx]].field_768):
                mem[(32 * s + 6) + 128] = 0
            else:
                mem[(32 * s + 6) + 128] = 1
            if s + 6 == -1:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + 7
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function sub_04fec052(?) {
    require calldata.size - 4 >= 32
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                revert with 0, 'Can't do that!'
    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
        mem[352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
        idx = 352
        s = 0
        while (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
            mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
    idx = 0
    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            revert with 0, 50
        if mem[(32 * idx) + 352] == arg1:
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                revert with 0, 17
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 49
            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    uint8(sub_631edbd0[arg1].field_768) = 0
}

function burn(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Burnable: caller is not owner nor approved'
    uint8(sub_631edbd0[arg1].field_776) = 0
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0):
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
        if balanceOf[address(stor3[arg1].field_0)] < 1:
            revert with 0, 17
        if balanceOf[address(stor3[arg1].field_0)] - 1 != stor8[arg1]:
            tokenOfOwnerByIndex[address(stor3[arg1].field_0)][stor8[arg1]] = tokenOfOwnerByIndex[address(stor3[arg1].field_0)][stor4[address(stor3[arg1].field_0)] - 1]
            stor8[stor7[address(stor3[arg1].field_0)][stor4[address(stor3[arg1].field_0)] - 1]] = stor8[arg1]
        stor8[arg1] = 0
        tokenOfOwnerByIndex[address(stor3[arg1].field_0)][stor4[address(stor3[arg1].field_0)] - 1] = 0
    if tokenByIndex.length < 1:
        revert with 0, 17
    if tokenByIndex.length - 1 >= tokenByIndex.length:
        revert with 0, 50
    if stor10[arg1] >= tokenByIndex.length:
        revert with 0, 50
    tokenByIndex[stor10[arg1]] = tokenByIndex[tokenByIndex.length]
    stor10[stor9[stor9.length]] = stor10[arg1]
    stor10[arg1] = 0
    if not tokenByIndex.length:
        revert with 0, 49
    tokenByIndex[tokenByIndex.length] = 0
    tokenByIndex.length--
    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
        mem[352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
        idx = 352
        s = 0
        while (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
            mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
    idx = 0
    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            revert with 0, 50
        if mem[(32 * idx) + 352] == arg1:
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                revert with 0, 17
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 49
            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    uint8(sub_631edbd0[arg1].field_768) = 0
    uint256(sub_631edbd0[arg1].field_512) = 0
    approved[arg1] = 0
    if not address(ownerOf[arg1].field_0):
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(address(ownerOf[arg1].field_0), 0, arg1);
    if balanceOf[address(stor3[arg1].field_0)] < 1:
        revert with 0, 17
    balanceOf[address(stor3[arg1].field_0)]--
    address(ownerOf[arg1].field_0) = 0
    emit Transfer(address(ownerOf[arg1].field_0), 0, arg1);
}

function sub_86e66ce4(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == uint8(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0, 'ERC721: mint to the zero address'
    if address(ownerOf[stor11].field_0):
        revert with 0, 'ERC721: token already minted'
    stor10[stor11] = tokenByIndex.length
    tokenByIndex.length++
    tokenByIndex[tokenByIndex.length] = stor11
    if address(arg1):
        if address(arg1):
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg1)][stor4[address(arg1)]] = stor11
            stor8[stor11] = balanceOf[address(arg1)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor10[stor11] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
        stor10[stor9[stor9.length]] = stor10[stor11]
        stor10[stor11] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
        mem[384] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
        idx = 384
        s = 0
        while (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 352 > idx:
            mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
    idx = 0
    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
            revert with 0, 50
        if mem[(32 * idx) + 384] == stor11:
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                revert with 0, 17
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 49
            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    uint8(sub_631edbd0[stor11].field_768) = 0
    uint256(sub_631edbd0[stor11].field_512) = 0
    if balanceOf[address(arg1)] > -2:
        revert with 0, 17
    balanceOf[address(arg1)]++
    address(ownerOf[stor11].field_0) = address(arg1)
    emit Transfer(0, address(arg1), stor11);
    if ext_code.size(address(arg1)):
        require ext_code.size(address(arg1))
        call address(arg1).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args msg.sender, 0, stor11, 128, 0
        if not ext_call.success:
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    stor11++
    uint8(sub_631edbd0[stor11].field_264) = uint8(arg2)
    uint8(sub_631edbd0[stor11].field_776) = 1
}

function sub_d32ec83f(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 128
    require arg1 == ('signextend', 15, ('param', 'arg1'))
    require arg2 == ('signextend', 15, ('param', 'arg2'))
    require arg3 == ('signextend', 15, ('param', 'arg3'))
    require arg4 == ('signextend', 15, ('param', 'arg4'))
    idx = arg1
    while ('signextend', 15, ('var', 0)) < ('signextend', 15, ('param', 'arg3')):
        s = arg2
        while ('signextend', 15, ('var', 1)) < ('signextend', 15, ('param', 'arg4')):
            mem[0] = ('signextend', 15, ('signextend', 15, ('var', 1)))
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20)
            _65 = mem[64]
            mem[64] = mem[64] + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)) + 32
            mem[_65] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0):
                mem[0] = sha3(('signextend', 15, ('signextend', 15, ('var', 1))), sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20))
                mem[_65 + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)
                t = _65 + 32
                u = sha3(sha3(('signextend', 15, ('signextend', 15, ('var', 1))), sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20)))
                while _65 + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)) > t:
                    mem[t + 32] = uint256(stor1[u].field_0)
                    t = t + 32
                    u = u + 1
                    continue 
            t = 0
            u = 0
            while t < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0):
                if t >= mem[_65]:
                    revert with 0, 50
                mem[0] = mem[(32 * t) + _65 + 32]
                mem[32] = 19
                if not uint8(sub_631edbd0[mem[0]].field_768):
                    if t == -1:
                        revert with 0, 17
                    t = t + 1
                    u = u
                    continue 
                if u == -1:
                    revert with 0, 17
                if t == -1:
                    revert with 0, 17
                t = t + 1
                u = u + 1
                continue 
            if ('signextend', 15, ('var', 1)) == 0x7fffffffffffffffffffffffffffffff:
                revert with 0, 17
            s = ('signextend', 15, ('var', 1)) + 1
            continue 
        if ('signextend', 15, ('var', 0)) == 0x7fffffffffffffffffffffffffffffff:
            revert with 0, 17
        idx = ('signextend', 15, ('var', 0)) + 1
        continue 
    _36 = mem[64]
    mem[mem[64]] = 0
    mem[64] = mem[64] + 32
    idx = arg1
    while ('signextend', 15, ('var', 0)) < ('signextend', 15, ('param', 'arg3')):
        s = arg2
        while ('signextend', 15, ('var', 1)) < ('signextend', 15, ('param', 'arg4')):
            mem[0] = ('signextend', 15, ('signextend', 15, ('var', 1)))
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20)
            _97 = mem[64]
            mem[64] = mem[64] + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)) + 32
            mem[_97] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0):
                t = 0
                u = 0
                while t < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0):
                    if t >= mem[_97]:
                        revert with 0, 50
                    _120 = mem[(32 * t) + _97 + 32]
                    mem[0] = mem[(32 * t) + _97 + 32]
                    mem[32] = 19
                    _121 = sha3(mem[0], 19)
                    _122 = mem[64]
                    mem[64] = mem[64] + 224
                    mem[_122] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('mem', ('range', 0, 32)), ('name', 'sub_631edbd0', 19))))))))
                    mem[_122 + 32] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('stor', ('var', '_121')))))
                    mem[_122 + 64] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 0, ('stor', ('array', ('var', '_121'), ('name', 'stor1', 1))))))))
                    mem[_122 + 96] = uint8(stor1[_121].field_8)
                    mem[_122 + 128] = uint256(stor2[_121].field_0)
                    mem[_122 + 160] = bool(uint8(ownerOf[_121].field_0))
                    mem[_122 + 192] = bool(uint8(ownerOf[_121].field_8))
                    if u >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u) + _36 + 32] = ('signextend', 15, ('var', 0))
                    if u == -1:
                        revert with 0, 17
                    if u + 1 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 1) + _36 + 32] = ('signextend', 15, ('var', 1))
                    if u + 1 == -1:
                        revert with 0, 17
                    if u + 2 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 2) + _36 + 32] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 0, ('stor', ('array', ('var', '_121'), ('name', 'stor1', 1)))))))))
                    if u + 2 == -1:
                        revert with 0, 17
                    if u + 3 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 3) + _36 + 32] = _120
                    if u + 3 == -1:
                        revert with 0, 17
                    if u + 4 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 4) + _36 + 32] = uint256(stor2[_121].field_0)
                    if u + 4 == -1:
                        revert with 0, 17
                    if u + 5 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 5) + _36 + 32] = uint8(stor1[_121].field_8)
                    if u + 5 == -1:
                        revert with 0, 17
                    if t == -1:
                        revert with 0, 17
                    t = t + 1
                    u = u + 6
                    continue 
            else:
                mem[0] = sha3(('signextend', 15, ('signextend', 15, ('var', 1))), sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20))
                mem[_97 + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)
                t = _97 + 32
                u = sha3(sha3(('signextend', 15, ('signextend', 15, ('var', 1))), sha3(('signextend', 15, ('signextend', 15, ('var', 0))), 20)))
                while _97 + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0)) > t:
                    mem[t + 32] = uint256(stor1[u].field_0)
                    t = t + 32
                    u = u + 1
                    continue 
                t = 0
                u = 0
                while t < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('var', 0)))][('signextend', 15, ('signextend', 15, ('var', 1)))].field_0):
                    if t >= mem[_97]:
                        revert with 0, 50
                    _155 = mem[(32 * t) + _97 + 32]
                    mem[0] = mem[(32 * t) + _97 + 32]
                    mem[32] = 19
                    _156 = sha3(mem[0], 19)
                    _157 = mem[64]
                    mem[64] = mem[64] + 224
                    mem[_157] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('mem', ('range', 0, 32)), ('name', 'sub_631edbd0', 19))))))))
                    mem[_157 + 32] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('stor', ('var', '_156')))))
                    mem[_157 + 64] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 0, ('stor', ('array', ('var', '_156'), ('name', 'stor1', 1))))))))
                    mem[_157 + 96] = uint8(stor1[_156].field_8)
                    mem[_157 + 128] = uint256(stor2[_156].field_0)
                    mem[_157 + 160] = bool(uint8(ownerOf[_156].field_0))
                    mem[_157 + 192] = bool(uint8(ownerOf[_156].field_8))
                    if u >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u) + _36 + 32] = ('signextend', 15, ('var', 0))
                    if u == -1:
                        revert with 0, 17
                    if u + 1 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 1) + _36 + 32] = ('signextend', 15, ('var', 1))
                    if u + 1 == -1:
                        revert with 0, 17
                    if u + 2 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 2) + _36 + 32] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 0, ('stor', ('array', ('var', '_156'), ('name', 'stor1', 1)))))))))
                    if u + 2 == -1:
                        revert with 0, 17
                    if u + 3 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 3) + _36 + 32] = _155
                    if u + 3 == -1:
                        revert with 0, 17
                    if u + 4 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 4) + _36 + 32] = uint256(stor2[_156].field_0)
                    if u + 4 == -1:
                        revert with 0, 17
                    if u + 5 >= mem[_36]:
                        revert with 0, 50
                    mem[(32 * u + 5) + _36 + 32] = uint8(stor1[_156].field_8)
                    if u + 5 == -1:
                        revert with 0, 17
                    if t == -1:
                        revert with 0, 17
                    t = t + 1
                    u = u + 6
                    continue 
            if ('signextend', 15, ('var', 1)) == 0x7fffffffffffffffffffffffffffffff:
                revert with 0, 17
            s = ('signextend', 15, ('var', 1)) + 1
            continue 
        if ('signextend', 15, ('var', 0)) == 0x7fffffffffffffffffffffffffffffff:
            revert with 0, 17
        idx = ('signextend', 15, ('var', 0)) + 1
        continue 
    mem[mem[64]] = 32
    _72 = mem[_36]
    mem[mem[64] + 32] = mem[_36]
    mem[mem[64] + 64 len 32 * _72] = mem[_36 + 32 len 32 * _72]
    return 32, mem[mem[64] + 32 len (32 * _72) + 32]
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not address(ownerOf[arg3].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg3].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg3].field_0) != msg.sender:
        if not address(ownerOf[arg3].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor6[address(stor3[arg3].field_0)][address(msg.sender)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer caller is not owner nor approved'
    if not address(ownerOf[arg3].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg3].field_0) != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer of token that is not own'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer to the zero address'
    if not arg1:
        stor10[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor8[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor8[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor4[address(arg1)] - 1]
                stor8[stor7[address(arg1)][stor4[address(arg1)] - 1]] = stor8[arg3]
            stor8[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor4[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor4[address(arg2)]] = arg3
            stor8[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor10[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor10[arg3]] = tokenByIndex[tokenByIndex.length]
        stor10[stor9[stor9.length]] = stor10[arg3]
        stor10[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
        mem[352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)
        idx = 352
        s = 0
        while (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
            mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
    idx = 0
    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
            revert with 0, 50
        if mem[(32 * idx) + 352] == arg3:
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                revert with 0, 17
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19)))))))))), 20)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 49
            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19)))))))))), 20))
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    uint8(sub_631edbd0[arg3].field_768) = 0
    uint256(sub_631edbd0[arg3].field_512) = 0
    approved[arg3] = 0
    if not address(ownerOf[arg3].field_0):
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(address(ownerOf[arg3].field_0), 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    address(ownerOf[arg3].field_0) = arg2
    emit Transfer(arg1, arg2, arg3);
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    require arg4 + arg4.length + 36 <= calldata.size
    if not address(ownerOf[arg3].field_0):
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg3].field_0):
        revert with 0, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg3].field_0) != msg.sender:
        if not address(ownerOf[arg3].field_0):
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor6[address(stor3[arg3].field_0)][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not address(ownerOf[arg3].field_0):
        revert with 0, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg3].field_0) != arg1:
        revert with 0, 'ERC721: transfer of token that is not own'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    if not arg1:
        stor10[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor8[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor8[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor4[address(arg1)] - 1]
                stor8[stor7[address(arg1)][stor4[address(arg1)] - 1]] = stor8[arg3]
            stor8[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor4[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor4[address(arg2)]] = arg3
            stor8[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor10[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor10[arg3]] = tokenByIndex[tokenByIndex.length]
        stor10[stor9[stor9.length]] = stor10[arg3]
        stor10[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
        mem[ceil32(ceil32(arg4.length)) + 353] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)
        idx = ceil32(ceil32(arg4.length)) + 353
        s = 0
        while ceil32(ceil32(arg4.length)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)) + 321 > idx:
            mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
    idx = 0
    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
            revert with 0, 50
        if mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 353] == arg3:
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                revert with 0, 17
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19)))))))))), 20)
            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 49
            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'sub_631edbd0', 19)))))))))), 20))
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg3'), ('name', 'stor19', 19)))))))))].field_0)--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    uint8(sub_631edbd0[arg3].field_768) = 0
    uint256(sub_631edbd0[arg3].field_512) = 0
    approved[arg3] = 0
    if not address(ownerOf[arg3].field_0):
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(address(ownerOf[arg3].field_0), 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    address(ownerOf[arg3].field_0) = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        require ext_code.size(arg2)
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
        if not ext_call.success:
            if not return_data.size:
                if not arg4.length:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with arg4[all]
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function tokenURI(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not uint8(sub_631edbd0[arg1].field_776):
        revert with 0, 'Not a tent'
    mem[0] = arg1
    mem[32] = 19
    mem[96] = 5
    if uint8(sub_631edbd0[arg1].field_264):
        mem[128] = 0x5768697465000000000000000000000000000000000000000000000000000000
        mem[160] = 1928
        mem[192 len 1928] = 0xfe6956424f5277304b47676f414141414e53556845556741414142384141414167434159414141447167714e42414141414247644254554541414c4750432f7868425141414143426a53464a4e414142364a6741416749514141506f41414143413641414164544141414f7067414141366d41414146334363756c4538414141416147565953575a4e54514171414141414341414541515941417741414141454141674141415249414177414141414541415141414153674141774141414145414167414168326b4142414141414145414141412b41414141414141446f4145414177414141414541415141416f4149414241414141414541414141666f414d4142414141414145414141416741414141414e454a66356f4141414c69615652596446684e5444706a6232307559575276596d557565473177414141414141413865447034625842745a585268494868746247357a4f6e6739496d466b62324a6c4f6d357a4f6d316c64474576496942344f6e68746348527250534a5954564167513239795a5341324c6a41754d43492b43694167494478795a475936556b5247494868746247357a4f6e4a6b5a6a30696148523063446f764c336433647935334d793576636d63764d546b354f5338774d6938794d6931795a47597463336c75644746344c57357a4979492b4369416749434167494478795a4759365247567a59334a706348527062323467636d526d4f6d4669623356305053496943694167494341674943416749434167494868746247357a4f6e52705a6d5939496d6830644841364c793975637935685a4739695a53356a6232307664476c6d5a6938784c6a417649676f674943416749434167494341674943423462577875637a706c65476c6d50534a6f644852774f693876626e4d7559575276596d5575593239744c325634615759764d5334774c79492b4369416749434167494341674944783061575a6d4f6b4e76625842795a584e7a61573975506a45384c3352705a6d59365132397463484a6c63334e706232342b4369416749434167494341674944783061575a6d4f6c4a6c633239736458527062323556626d6c30506a49384c3352705a6d5936556d567a6232783164476c76626c56756158512b4369416749434167494341674944783061575a6d4f6b3979615756756447463061573975506a45384c3352705a6d593654334a705a573530595852706232342b4369416749434167494341674944783061575a6d4f6c426f6233527662575630636d6c6a535735305a584a77636d5630595852706232342b4d6a777664476c6d5a6a7051614739306232316c64484a7059306c756447567963484a6c644746306157397550676f674943416749434167494341385a5868705a6a70516158686c624668456157316c626e4e706232342b4d7a45384c3256346157593655476c345a57785952476c745a57357a6157397550676f674943416749434167494341385a5868705a6a704462327876636c4e7759574e6c506a45384c325634615759365132397362334a546347466a5a54344b494341674943416749434167504756346157593655476c345a57785a52476c745a57357a61573975506a4d795043396c65476c6d4f6c427065475673575552706257567563326c76626a344b4943416749434167504339795a4759365247567a59334a70634852706232342b4369416749447776636d526d4f6c4a45526a344b504339344f6e68746347316c6447452b436f73482b38674141414850535552425645674e745a652f53675178454d626e5a4e4574564b345143314551354370743946354448384433384130736243787366514966514239414379733562625351565252735242443856367969724d7a71684777326b387a6b4e4d564e64704c35666c38534e7477434a4c6144766533712b4f53797770676f415a3255516753753950756d39485177674e583144625757757341466635517674596e7a69304a74594d54594633526373463279744e674437524749345345776d644161454d456c344251445562674c666e31364941346270547351684b6541795a484541417366426977313449573759424c444f4e476474682b6a2f64414f744f4161384d337a4441742f4c30737a78686c6f774456676f787a6f78417759654167633049384f685178304e726432717558355437447636716a69377753383033464c666332476a75563559777065785765334757537034496161387548486341466d323558314d4a70503169586a33566c76716274613336516b4f49496637363971505979634152385163325263446266424a4d345a694b316542666542687a4567686f66414d514d30376b59525841496d59653449614e794f55626747544d4a5341304634436c686a67495848774d58314855783976514647727356327741755067546d594c78387930494c2f4a5a6a4d63415961385038416877775975415a4d3534334373584d6e4f455a3342327134426d794c7066545241504b775a66694443576e44565265482b31433043746167747a445879766f53784b766876676d2b48494c5a44384c646f2f707a53576f4139545038527748417636732b45364663364c3233363544374456782f2b787047443967704141414141456c46546b5375516d43
        mem[2176] = 0x7b226e616d65223a202200000000000000000000000000000000000000000000
        mem[2186] = 0x5768697465000000000000000000000000000000000000000000000000000000
        mem[2191] = 0x2054656e74000000000000000000000000000000000000000000000000000000
        mem[2196] = '", "description": "Rarity Homest'
        mem[2228] = 'ead - Tent", "image": "data:imag'
        mem[2260] = 0x652f706e673b6261736536342c00000000000000000000000000000000000000
        mem[2273 len 1952] = 0xfe6956424f5277304b47676f414141414e53556845556741414142384141414167434159414141447167714e42414141414247644254554541414c4750432f7868425141414143426a53464a4e414142364a6741416749514141506f41414143413641414164544141414f7067414141366d41414146334363756c4538414141416147565953575a4e54514171414141414341414541515941417741414141454141674141415249414177414141414541415141414153674141774141414145414167414168326b4142414141414145414141412b41414141414141446f4145414177414141414541415141416f4149414241414141414541414141666f414d4142414141414145414141416741414141414e454a66356f4141414c69615652596446684e5444706a6232307559575276596d557565473177414141414141413865447034625842745a585268494868746247357a4f6e6739496d466b62324a6c4f6d357a4f6d316c64474576496942344f6e68746348527250534a5954564167513239795a5341324c6a41754d43492b43694167494478795a475936556b5247494868746247357a4f6e4a6b5a6a30696148523063446f764c336433647935334d793576636d63764d546b354f5338774d6938794d6931795a47597463336c75644746344c57357a4979492b4369416749434167494478795a4759365247567a59334a706348527062323467636d526d4f6d4669623356305053496943694167494341674943416749434167494868746247357a4f6e52705a6d5939496d6830644841364c793975637935685a4739695a53356a6232307664476c6d5a6938784c6a417649676f674943416749434167494341674943423462577875637a706c65476c6d50534a6f644852774f693876626e4d7559575276596d5575593239744c325634615759764d5334774c79492b4369416749434167494341674944783061575a6d4f6b4e76625842795a584e7a61573975506a45384c3352705a6d59365132397463484a6c63334e706232342b4369416749434167494341674944783061575a6d4f6c4a6c633239736458527062323556626d6c30506a49384c3352705a6d5936556d567a6232783164476c76626c56756158512b4369416749434167494341674944783061575a6d4f6b3979615756756447463061573975506a45384c3352705a6d593654334a705a573530595852706232342b4369416749434167494341674944783061575a6d4f6c426f6233527662575630636d6c6a535735305a584a77636d5630595852706232342b4d6a777664476c6d5a6a7051614739306232316c64484a7059306c756447567963484a6c644746306157397550676f674943416749434167494341385a5868705a6a70516158686c624668456157316c626e4e706232342b4d7a45384c3256346157593655476c345a57785952476c745a57357a6157397550676f674943416749434167494341385a5868705a6a704462327876636c4e7759574e6c506a45384c325634615759365132397362334a546347466a5a54344b494341674943416749434167504756346157593655476c345a57785a52476c745a57357a61573975506a4d795043396c65476c6d4f6c427065475673575552706257567563326c76626a344b4943416749434167504339795a4759365247567a59334a70634852706232342b4369416749447776636d526d4f6c4a45526a344b504339344f6e68746347316c6447452b436f73482b38674141414850535552425645674e745a652f53675178454d626e5a4e4574564b345143314551354370743946354448384433384130736243787366514966514239414379733562625351565252735242443856367969724d7a71684777326b387a6b4e4d564e64704c35666c38534e7477434a4c6144766533712b4f53797770676f415a3255516753753950756d39485177674e583144625757757341466635517674596e7a69304a74594d54594633526373463279744e674437524749345345776d644161454d456c344251445562674c666e31364941346270547351684b6541795a484541417366426977313449573759424c444f4e476474682b6a2f64414f744f4161384d337a4441742f4c30737a78686c6f774456676f787a6f78417759654167633049384f685178304e726432717558355437447636716a69377753383033464c666332476a75563559777065785765334757537034496161387548486341466d323558314d4a70503169586a33566c76716274613336516b4f49496637363971505979634152385163325263446266424a4d345a694b316542666542687a4567686f66414d514d30376b59525841496d59653449614e794f55626747544d4a5341304634436c686a67495848774d58314855783976514647727356327741755067546d594c78387930494c2f4a5a6a4d63415961385038416877775975415a4d3534334373584d6e4f455a3342327134426d794c7066545241504b775a66694443576e44565265482b31433043746167747a445879766f53784b766876676d2b48494c5a44384c646f2f707a53576f4139545038527748417636732b45364663364c3233363544374456782f2b787047443967704141414141456c46546b5375516d43, mem[2120 len 24]
        mem[4201] = 0x227d000000000000000000000000000000000000000000000000000000000000
        mem[2144] = 2027
        if 32 > !(4 * 2029 / 3):
            revert with 0, 17
        if (4 * 2029 / 3) + 32 > test266151307():
            revert with 0, 65
        mem[4203] = (4 * 2029 / 3) + 32
        if not (4 * 2029 / 3) + 32:
            mem[64] = ceil32(4 * 2029 / 3) + 4332
            mem[ceil32(4 * 2029 / 3) + 4236] = 64
            mem[ceil32(4 * 2029 / 3) + 4268 len 64] = 0x434142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b
            idx = 0
            s = 4235
            while idx < 2027:
                mem[s] = mem[ceil32(4 * 2029 / 3) + (mem[idx + 2147] % 64) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 6, mem[idx + 2147]) >> 6) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 12, mem[idx + 2147]) >> 12) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 18, mem[idx + 2147]) >> 18) + 4237] << 8) << 8) << 8) << 224
                idx = idx + 3
                s = s + 4
                continue 
            mem[ceil32(4 * 2029 / 3) + 4364] = 'data:application/json;base64,'
            mem[ceil32(4 * 2029 / 3) + 4393 len ceil32(4 * 2029 / 3)] = mem[4235 len ceil32(4 * 2029 / 3)]
            if ceil32(4 * 2029 / 3) <= 4 * 2029 / 3:
                _4171 = mem[ceil32(4 * 2029 / 3) + 4332]
                mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425] = mem[ceil32(4 * 2029 / 3) + 4332]
                mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])] = mem[ceil32(4 * 2029 / 3) + 4364 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]
                if ceil32(mem[ceil32(4 * 2029 / 3) + 4332]) <= mem[ceil32(4 * 2029 / 3) + 4332]:
                    return Array(len=mem[ceil32(4 * 2029 / 3) + 4332], data=mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]), 
                mem[mem[ceil32(4 * 2029 / 3) + 4332] + (4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457] = 0
                return 32, mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425 len ceil32(_4171) + 32]
            _4172 = mem[ceil32(4 * 2029 / 3) + 4332]
            mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425] = mem[ceil32(4 * 2029 / 3) + 4332]
            mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])] = mem[ceil32(4 * 2029 / 3) + 4364 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]
            if ceil32(mem[ceil32(4 * 2029 / 3) + 4332]) <= mem[ceil32(4 * 2029 / 3) + 4332]:
                return Array(len=mem[ceil32(4 * 2029 / 3) + 4332], data=mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]), 
            mem[mem[ceil32(4 * 2029 / 3) + 4332] + (4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457] = 0
            return 32, mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425 len ceil32(_4172) + 32]
        mem[4235 len (4 * 2029 / 3) + 32] = call.data[calldata.size len (4 * 2029 / 3) + 32]
        mem[64] = ceil32(4 * 2029 / 3) + 4332
        mem[ceil32(4 * 2029 / 3) + 4236] = 64
        mem[ceil32(4 * 2029 / 3) + 4268 len 64] = 0x434142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b
        idx = 0
        s = 4235
        while idx < 2027:
            mem[s] = mem[ceil32(4 * 2029 / 3) + (mem[idx + 2147] % 64) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 6, mem[idx + 2147]) >> 6) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 12, mem[idx + 2147]) >> 12) + 4268 len 1] + (mem[ceil32(4 * 2029 / 3) + (Mask(6, 18, mem[idx + 2147]) >> 18) + 4237] << 8) << 8) << 8) << 224
            idx = idx + 3
            s = s + 4
            continue 
        mem[ceil32(4 * 2029 / 3) + 4364] = 'data:application/json;base64,'
        mem[ceil32(4 * 2029 / 3) + 4393 len ceil32(4 * 2029 / 3)] = mem[4235 len ceil32(4 * 2029 / 3)]
        if ceil32(4 * 2029 / 3) <= 4 * 2029 / 3:
            _4177 = mem[ceil32(4 * 2029 / 3) + 4332]
            mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425] = mem[ceil32(4 * 2029 / 3) + 4332]
            mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])] = mem[ceil32(4 * 2029 / 3) + 4364 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]
            if ceil32(mem[ceil32(4 * 2029 / 3) + 4332]) <= mem[ceil32(4 * 2029 / 3) + 4332]:
                return Array(len=mem[ceil32(4 * 2029 / 3) + 4332], data=mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]), 
            mem[mem[ceil32(4 * 2029 / 3) + 4332] + (4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457] = 0
            return 32, mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425 len ceil32(_4177) + 32]
        _4178 = mem[ceil32(4 * 2029 / 3) + 4332]
        mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425] = mem[ceil32(4 * 2029 / 3) + 4332]
        mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])] = mem[ceil32(4 * 2029 / 3) + 4364 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]
        if ceil32(mem[ceil32(4 * 2029 / 3) + 4332]) <= mem[ceil32(4 * 2029 / 3) + 4332]:
            return Array(len=mem[ceil32(4 * 2029 / 3) + 4332], data=mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457 len ceil32(mem[ceil32(4 * 2029 / 3) + 4332])]), 
        mem[mem[ceil32(4 * 2029 / 3) + 4332] + (4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4457] = 0
        return 32, mem[(4 * 2029 / 3) + ceil32(4 * 2029 / 3) + 4425 len ceil32(_4178) + 32]
    mem[128] = 0x477265656e000000000000000000000000000000000000000000000000000000
    mem[160] = 1940
    mem[192 len 1940] = 0x436956424f5277304b47676f414141414e53556845556741414142384141414167434159414141447167714e42414141414247644254554541414c4750432f7868425141414143426a53464a4e414142364a6741416749514141506f41414143413641414164544141414f7067414141366d41414146334363756c4538414141416147565953575a4e54514171414141414341414541515941417741414141454141674141415249414177414141414541415141414153674141774141414145414167414168326b4142414141414145414141412b41414141414141446f4145414177414141414541415141416f4149414241414141414541414141666f414d4142414141414145414141416741414141414e454a66356f4141414c69615652596446684e5444706a6232307559575276596d557565473177414141414141413865447034625842745a585268494868746247357a4f6e6739496d466b62324a6c4f6d357a4f6d316c64474576496942344f6e68746348527250534a5954564167513239795a5341324c6a41754d43492b43694167494478795a475936556b5247494868746247357a4f6e4a6b5a6a30696148523063446f764c336433647935334d793576636d63764d546b354f5338774d6938794d6931795a47597463336c75644746344c57357a4979492b4369416749434167494478795a4759365247567a59334a706348527062323467636d526d4f6d4669623356305053496943694167494341674943416749434167494868746247357a4f6e52705a6d5939496d6830644841364c793975637935685a4739695a53356a6232307664476c6d5a6938784c6a417649676f674943416749434167494341674943423462577875637a706c65476c6d50534a6f644852774f693876626e4d7559575276596d5575593239744c325634615759764d5334774c79492b4369416749434167494341674944783061575a6d4f6b4e76625842795a584e7a61573975506a45384c3352705a6d59365132397463484a6c63334e706232342b4369416749434167494341674944783061575a6d4f6c4a6c633239736458527062323556626d6c30506a49384c3352705a6d5936556d567a6232783164476c76626c56756158512b4369416749434167494341674944783061575a6d4f6b3979615756756447463061573975506a45384c3352705a6d593654334a705a573530595852706232342b4369416749434167494341674944783061575a6d4f6c426f6233527662575630636d6c6a535735305a584a77636d5630595852706232342b4d6a777664476c6d5a6a7051614739306232316c64484a7059306c756447567963484a6c644746306157397550676f674943416749434167494341385a5868705a6a70516158686c624668456157316c626e4e706232342b4d7a45384c3256346157593655476c345a57785952476c745a57357a6157397550676f674943416749434167494341385a5868705a6a704462327876636c4e7759574e6c506a45384c325634615759365132397362334a546347466a5a54344b494341674943416749434167504756346157593655476c345a57785a52476c745a57357a61573975506a4d795043396c65476c6d4f6c427065475673575552706257567563326c76626a344b4943416749434167504339795a4759365247567a59334a70634852706232342b4369416749447776636d526d4f6c4a45526a344b504339344f6e68746347316c6447452b436f73482b38674141414859535552425645674e745a652f53304d78454d657674525136464d51666b364175646e41516f5a4f7a73354f545530662f43346336754471362b6764306369354f306b454b7861483459796d69517a66526f5643515a2b2f68686277307564796c6d7146334c386c395039386b764e41486b4e6a327a343679752f756e44474f69424a5253436847346439413070512b3950677a614e326f746459454c2f70682b35535a652b3839714132566a58354334594c746b73396b4137524749345279595447674e694f4153634971424b4e774630786b547a42656c4f3844435538426b526d4967434638454c4458676862746745734f34584b33626a3947633234453575415a38756e595368483950706d59735a4b41413134434e4d70504544426734423262306f304f6367644c35785758576d5854427671756a69723854384537484c665531473770557178616d3446563858447545636971346f4b5a38514d50494e647575724966312b6b706573724f3635533131562b75626c415248384f5062533636484d5754414238512b656c33566342744d34694544736457723444377749676245634134634d30446a626854424a574153446830426a64737843746541535668716749576e67445547677641592b48303467717447457a4347576d7748765041594f41547a39584d473575422f4353597a49514d462b482b414f514d477267485465614e77374e774a6a74486467527975416474694b546b61514236324376356768375468716c766a542b694e6230314a61355a64777767326472644e483563514c34647a452b3078424f4d48346344757450505a42365455414a5a56384239465a3969314a52624b75666665466b62754432457035712f797135784b4141414141456c46546b5375516d43
    mem[2176] = 0x7b226e616d65223a202200000000000000000000000000000000000000000000
    mem[2186] = 0x477265656e000000000000000000000000000000000000000000000000000000
    mem[2191] = 0x2054656e74000000000000000000000000000000000000000000000000000000
    mem[2196] = '", "description": "Rarity Homest'
    mem[2228] = 'ead - Tent", "image": "data:imag'
    mem[2260] = 0x652f706e673b6261736536342c00000000000000000000000000000000000000
    mem[2273 len 1952] = 0x436956424f5277304b47676f414141414e53556845556741414142384141414167434159414141447167714e42414141414247644254554541414c4750432f7868425141414143426a53464a4e414142364a6741416749514141506f41414143413641414164544141414f7067414141366d41414146334363756c4538414141416147565953575a4e54514171414141414341414541515941417741414141454141674141415249414177414141414541415141414153674141774141414145414167414168326b4142414141414145414141412b41414141414141446f4145414177414141414541415141416f4149414241414141414541414141666f414d4142414141414145414141416741414141414e454a66356f4141414c69615652596446684e5444706a6232307559575276596d557565473177414141414141413865447034625842745a585268494868746247357a4f6e6739496d466b62324a6c4f6d357a4f6d316c64474576496942344f6e68746348527250534a5954564167513239795a5341324c6a41754d43492b43694167494478795a475936556b5247494868746247357a4f6e4a6b5a6a30696148523063446f764c336433647935334d793576636d63764d546b354f5338774d6938794d6931795a47597463336c75644746344c57357a4979492b4369416749434167494478795a4759365247567a59334a706348527062323467636d526d4f6d4669623356305053496943694167494341674943416749434167494868746247357a4f6e52705a6d5939496d6830644841364c793975637935685a4739695a53356a6232307664476c6d5a6938784c6a417649676f674943416749434167494341674943423462577875637a706c65476c6d50534a6f644852774f693876626e4d7559575276596d5575593239744c325634615759764d5334774c79492b4369416749434167494341674944783061575a6d4f6b4e76625842795a584e7a61573975506a45384c3352705a6d59365132397463484a6c63334e706232342b4369416749434167494341674944783061575a6d4f6c4a6c633239736458527062323556626d6c30506a49384c3352705a6d5936556d567a6232783164476c76626c56756158512b4369416749434167494341674944783061575a6d4f6b3979615756756447463061573975506a45384c3352705a6d593654334a705a573530595852706232342b4369416749434167494341674944783061575a6d4f6c426f6233527662575630636d6c6a535735305a584a77636d5630595852706232342b4d6a777664476c6d5a6a7051614739306232316c64484a7059306c756447567963484a6c644746306157397550676f674943416749434167494341385a5868705a6a70516158686c624668456157316c626e4e706232342b4d7a45384c3256346157593655476c345a57785952476c745a57357a6157397550676f674943416749434167494341385a5868705a6a704462327876636c4e7759574e6c506a45384c325634615759365132397362334a546347466a5a54344b494341674943416749434167504756346157593655476c345a57785a52476c745a57357a61573975506a4d795043396c65476c6d4f6c427065475673575552706257567563326c76626a344b4943416749434167504339795a4759365247567a59334a70634852706232342b4369416749447776636d526d4f6c4a45526a344b504339344f6e68746347316c6447452b436f73482b38674141414859535552425645674e745a652f53304d78454d657674525136464d51666b364175646e41516f5a4f7a73354f545530662f43346336754471362b6764306369354f306b454b7861483459796d69517a66526f5643515a2b2f68686277307564796c6d7146334c386c395039386b764e41486b4e6a327a343679752f756e44474f69424a5253436847346439413070512b3950677a614e326f746459454c2f70682b35535a652b3839714132566a58354334594c746b73396b4137524749345279595447674e694f4153634971424b4e774630786b547a42656c4f3844435538426b526d4967434638454c4458676862746745734f34584b33626a3947633234453575415a38756e595368483950706d59735a4b41413134434e4d70504544426734423262306f304f6367644c35785758576d5854427671756a69723854384537484c665531473770557178616d3446563858447545636971346f4b5a38514d50494e647575724966312b6b706573724f3635533131562b75626c415248384f5062533636484d5754414238512b656c33566342744d34694544736457723444377749676245634134634d30446a626854424a574153446830426a64737843746541535668716749576e67445547677641592b48303467717447457a4347576d7748765041594f41547a39584d473575422f4353597a49514d462b482b414f514d477267485465614e77374e774a6a74486467527975416474694b546b61514236324376356768375468716c766a542b694e6230314a61355a64777767326472644e483563514c34647a452b3078424f4d48346344757450505a42365455414a5a56384239465a3969314a52624b75666665466b62754432457035712f797135784b4141414141456c46546b5375516d43, mem[2132 len 12]
    mem[4213] = 0x227d000000000000000000000000000000000000000000000000000000000000
    mem[2144] = 2039
    if 32 > !(4 * 2041 / 3):
        revert with 0, 17
    if (4 * 2041 / 3) + 32 > test266151307():
        revert with 0, 65
    mem[4215] = (4 * 2041 / 3) + 32
    if not (4 * 2041 / 3) + 32:
        mem[64] = ceil32(4 * 2041 / 3) + 4344
        mem[ceil32(4 * 2041 / 3) + 4248] = 64
        mem[ceil32(4 * 2041 / 3) + 4280 len 64] = 0x434142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b
        idx = 0
        s = 4247
        while idx < 2039:
            mem[s] = mem[ceil32(4 * 2041 / 3) + (mem[idx + 2147] % 64) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 6, mem[idx + 2147]) >> 6) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 12, mem[idx + 2147]) >> 12) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 18, mem[idx + 2147]) >> 18) + 4249] << 8) << 8) << 8) << 224
            idx = idx + 3
            s = s + 4
            continue 
        mem[ceil32(4 * 2041 / 3) + 4376] = 'data:application/json;base64,'
        mem[ceil32(4 * 2041 / 3) + 4405 len ceil32(4 * 2041 / 3)] = mem[4247 len ceil32(4 * 2041 / 3)]
        if ceil32(4 * 2041 / 3) <= 4 * 2041 / 3:
            _4219 = mem[ceil32(4 * 2041 / 3) + 4344]
            mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437] = mem[ceil32(4 * 2041 / 3) + 4344]
            mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])] = mem[ceil32(4 * 2041 / 3) + 4376 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]
            if ceil32(mem[ceil32(4 * 2041 / 3) + 4344]) <= mem[ceil32(4 * 2041 / 3) + 4344]:
                return Array(len=mem[ceil32(4 * 2041 / 3) + 4344], data=mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]), 
            mem[mem[ceil32(4 * 2041 / 3) + 4344] + (4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469] = 0
            return 32, mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437 len ceil32(_4219) + 32]
        _4220 = mem[ceil32(4 * 2041 / 3) + 4344]
        mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437] = mem[ceil32(4 * 2041 / 3) + 4344]
        mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])] = mem[ceil32(4 * 2041 / 3) + 4376 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]
        if ceil32(mem[ceil32(4 * 2041 / 3) + 4344]) <= mem[ceil32(4 * 2041 / 3) + 4344]:
            return Array(len=mem[ceil32(4 * 2041 / 3) + 4344], data=mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]), 
        mem[mem[ceil32(4 * 2041 / 3) + 4344] + (4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469] = 0
        return 32, mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437 len ceil32(_4220) + 32]
    mem[4247 len (4 * 2041 / 3) + 32] = call.data[calldata.size len (4 * 2041 / 3) + 32]
    mem[64] = ceil32(4 * 2041 / 3) + 4344
    mem[ceil32(4 * 2041 / 3) + 4248] = 64
    mem[ceil32(4 * 2041 / 3) + 4280 len 64] = 0x434142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b
    idx = 0
    s = 4247
    while idx < 2039:
        mem[s] = mem[ceil32(4 * 2041 / 3) + (mem[idx + 2147] % 64) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 6, mem[idx + 2147]) >> 6) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 12, mem[idx + 2147]) >> 12) + 4280 len 1] + (mem[ceil32(4 * 2041 / 3) + (Mask(6, 18, mem[idx + 2147]) >> 18) + 4249] << 8) << 8) << 8) << 224
        idx = idx + 3
        s = s + 4
        continue 
    mem[ceil32(4 * 2041 / 3) + 4376] = 'data:application/json;base64,'
    mem[ceil32(4 * 2041 / 3) + 4405 len ceil32(4 * 2041 / 3)] = mem[4247 len ceil32(4 * 2041 / 3)]
    if ceil32(4 * 2041 / 3) <= 4 * 2041 / 3:
        _4225 = mem[ceil32(4 * 2041 / 3) + 4344]
        mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437] = mem[ceil32(4 * 2041 / 3) + 4344]
        mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])] = mem[ceil32(4 * 2041 / 3) + 4376 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]
        if ceil32(mem[ceil32(4 * 2041 / 3) + 4344]) <= mem[ceil32(4 * 2041 / 3) + 4344]:
            return Array(len=mem[ceil32(4 * 2041 / 3) + 4344], data=mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]), 
        mem[mem[ceil32(4 * 2041 / 3) + 4344] + (4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469] = 0
        return 32, mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437 len ceil32(_4225) + 32]
    _4226 = mem[ceil32(4 * 2041 / 3) + 4344]
    mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437] = mem[ceil32(4 * 2041 / 3) + 4344]
    mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])] = mem[ceil32(4 * 2041 / 3) + 4376 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]
    if ceil32(mem[ceil32(4 * 2041 / 3) + 4344]) <= mem[ceil32(4 * 2041 / 3) + 4344]:
        return Array(len=mem[ceil32(4 * 2041 / 3) + 4344], data=mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469 len ceil32(mem[ceil32(4 * 2041 / 3) + 4344])]), 
    mem[mem[ceil32(4 * 2041 / 3) + 4344] + (4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4469] = 0
    return 32, mem[(4 * 2041 / 3) + ceil32(4 * 2041 / 3) + 4437 len ceil32(_4226) + 32]
}

function sub_a2796df8(?) {
    require calldata.size - 4 >= 160
    require arg3 == ('signextend', 15, ('param', 'arg3'))
    require arg4 == ('signextend', 15, ('param', 'arg4'))
    require arg5 == ('signextend', 0, ('param', 'arg5'))
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                revert with 0, 'Can't do that!'
    require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
    staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.0x7d88159d with:
            gas gas_remaining wei
           args ('signextend', 15, ('param', 'arg3')), ('signextend', 15, ('param', 'arg4'))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
    staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.0x6352211e with:
            gas gas_remaining wei
           args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] != arg2:
        revert with 0, 'Cannot modify plot'
    require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
    staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.getApproved(uint256 arg1) with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] == msg.sender:
        require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
        staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                gas gas_remaining wei
               args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 192
        require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
        require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
        require ext_call.return_data[64] == ext_call.return_data[80 len 16]
        require ext_call.return_data[128] == ext_call.return_data[144 len 16]
        require ext_call.return_data[160] == bool(ext_call.return_data[160])
        if ext_call.return_data[144 len 16] <= 19:
            revert with 0, 'Not high enough quality to place here'
        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            mem[(6 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
            idx = (6 * ceil32(return_data.size)) + 352
            s = 0
            while (6 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                idx = idx + 32
                s = s + 1
                continue 
        idx = 0
        while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if mem[(32 * idx) + (6 * ceil32(return_data.size)) + 352] == arg1:
                if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                    revert with 0, 17
                if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 49
                mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
        staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] == msg.sender:
            require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
            staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                    gas gas_remaining wei
                   args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 192
            require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
            require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
            require ext_call.return_data[64] == ext_call.return_data[80 len 16]
            require ext_call.return_data[128] == ext_call.return_data[144 len 16]
            require ext_call.return_data[160] == bool(ext_call.return_data[160])
            if ext_call.return_data[144 len 16] <= 19:
                revert with 0, 'Not high enough quality to place here'
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                mem[(7 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
                idx = (7 * ceil32(return_data.size)) + 352
                s = 0
                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
            idx = 0
            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 352] == arg1:
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                        revert with 0, 17
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 49
                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
        else:
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0xe985e9c5 with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), msg.sender
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not ext_call.return_data[0]:
                revert with 0, 'Cannot modify plot'
            require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
            staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                    gas gas_remaining wei
                   args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 192
            require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
            require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
            require ext_call.return_data[64] == ext_call.return_data[80 len 16]
            require ext_call.return_data[128] == ext_call.return_data[144 len 16]
            require ext_call.return_data[160] == bool(ext_call.return_data[160])
            if ext_call.return_data[144 len 16] <= 19:
                revert with 0, 'Not high enough quality to place here'
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                mem[(10 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
                idx = (10 * ceil32(return_data.size)) + 352
                s = 0
                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
            idx = 0
            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 352] == arg1:
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                        revert with 0, 17
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 49
                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
    uint8(sub_631edbd0[arg1].field_768) = 0
    sub_631edbd0[arg1].field_0 = uint128(('signextend', 15, ('param', 'arg3')))
    sub_631edbd0[arg1].field_128 = uint128(('signextend', 15, ('param', 'arg4')))
    uint8(sub_631edbd0[arg1].field_256) = uint8(('signextend', 0, ('param', 'arg5')))
    uint8(sub_631edbd0[arg1].field_768) = 1
    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))].field_0)++
    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))].field_0)].field_0) = arg1
}

function sub_5cae52ee(?) {
    require calldata.size - 4 >= 192
    require arg3 == ('signextend', 15, ('param', 'arg3'))
    require arg4 == ('signextend', 15, ('param', 'arg4'))
    require arg5 == ('signextend', 0, ('param', 'arg5'))
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not address(ownerOf[arg1].field_0):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(ownerOf[arg1].field_0) != msg.sender:
        if not address(ownerOf[arg1].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg1] != msg.sender:
            if not stor6[address(stor3[arg1].field_0)][address(msg.sender)]:
                revert with 0, 'Can't do that!'
    require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
    staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.0x7d88159d with:
            gas gas_remaining wei
           args ('signextend', 15, ('param', 'arg3')), ('signextend', 15, ('param', 'arg4'))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
    staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.0x6352211e with:
            gas gas_remaining wei
           args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] != arg2:
        revert with 0, 'Cannot modify plot'
    require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
    staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.getApproved(uint256 arg1) with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] == msg.sender:
        require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
        staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                gas gas_remaining wei
               args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 192
        require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
        require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
        require ext_call.return_data[64] == ext_call.return_data[80 len 16]
        require ext_call.return_data[128] == ext_call.return_data[144 len 16]
        require ext_call.return_data[160] == bool(ext_call.return_data[160])
        if ext_call.return_data[144 len 16] <= 19:
            revert with 0, 'Not high enough quality to place here'
        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            mem[(6 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
            idx = (6 * ceil32(return_data.size)) + 352
            s = 0
            while (6 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                idx = idx + 32
                s = s + 1
                continue 
        idx = 0
        while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                revert with 0, 50
            if mem[(32 * idx) + (6 * ceil32(return_data.size)) + 352] == arg1:
                if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                    revert with 0, 17
                if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 49
                mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
        staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] == msg.sender:
            require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
            staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                    gas gas_remaining wei
                   args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 192
            require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
            require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
            require ext_call.return_data[64] == ext_call.return_data[80 len 16]
            require ext_call.return_data[128] == ext_call.return_data[144 len 16]
            require ext_call.return_data[160] == bool(ext_call.return_data[160])
            if ext_call.return_data[144 len 16] <= 19:
                revert with 0, 'Not high enough quality to place here'
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                mem[(7 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
                idx = (7 * ceil32(return_data.size)) + 352
                s = 0
                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
            idx = 0
            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 352] == arg1:
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                        revert with 0, 17
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 49
                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
        else:
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0xe985e9c5 with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), msg.sender
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not ext_call.return_data[0]:
                revert with 0, 'Cannot modify plot'
            require ext_code.size(0xef86d4ba2a6bd9038a2acee23155fbc64f530e55)
            staticcall 0xef86d4ba2a6bd9038a2acee23155fbc64f530e55.plots(uint256 arg1) with:
                    gas gas_remaining wei
                   args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 192
            require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
            require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
            require ext_call.return_data[64] == ext_call.return_data[80 len 16]
            require ext_call.return_data[128] == ext_call.return_data[144 len 16]
            require ext_call.return_data[160] == bool(ext_call.return_data[160])
            if ext_call.return_data[144 len 16] <= 19:
                revert with 0, 'Not high enough quality to place here'
            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                mem[(10 * ceil32(return_data.size)) + 352] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)
                idx = (10 * ceil32(return_data.size)) + 352
                s = 0
                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)) + 320 > idx:
                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
            idx = 0
            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                    revert with 0, 50
                if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 352] == arg1:
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) < 1:
                        revert with 0, 17
                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 50
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20)
                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0):
                        revert with 0, 49
                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'sub_631edbd0', 19)))))))))), 20))
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('param', 'arg1'), ('name', 'stor19', 19)))))))))].field_0)--
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
    uint8(sub_631edbd0[arg1].field_768) = 0
    sub_631edbd0[arg1].field_0 = uint128(('signextend', 15, ('param', 'arg3')))
    sub_631edbd0[arg1].field_128 = uint128(('signextend', 15, ('param', 'arg4')))
    uint8(sub_631edbd0[arg1].field_256) = uint8(('signextend', 0, ('param', 'arg5')))
    uint8(sub_631edbd0[arg1].field_768) = 1
    if arg6:
        uint256(sub_631edbd0[arg1].field_512) = arg6
    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))].field_0)++
    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('param', 'arg3')))][('signextend', 15, ('signextend', 15, ('param', 'arg4')))].field_0)].field_0) = arg1
}

function sub_af7c2fff(?) payable {
    require calldata.size - 4 >= 32
    mem[100] = arg1
    require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
    staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.getApproved(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] == msg.sender:
        require ext_code.size(0x51c0b29a1d84611373ba301706c6b4b72283c80f)
        staticcall 0x51c0b29a1d84611373ba301706c6b4b72283c80f.get_skills(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        mem[ceil32(return_data.size) + 96 len 1152] = ext_call.return_data[0 len 1152]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 1152
        require ceil32(return_data.size) + 127 < ceil32(return_data.size) + return_data.size + 96
        if not bool((2 * ceil32(return_data.size)) + 1248 <= test266151307()):
            revert with 0, 65
        require return_data.size >= 1152
        s = ceil32(return_data.size) + 96
        t = (2 * ceil32(return_data.size)) + 96
        idx = 0
        while idx < 36:
            require mem[s] == mem[s + 31 len 1]
            mem[t] = mem[s]
            s = s + 32
            t = t + 32
            idx = idx + 1
            continue 
        if not mem[(2 * ceil32(return_data.size)) + 287 len 1]:
            revert with 0, 'Not a crafter'
        mem[(2 * ceil32(return_data.size)) + 1252] = arg1
        mem[(2 * ceil32(return_data.size)) + 1284] = 1
        require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
        staticcall 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0xb183b67f with:
                gas gas_remaining wei
               args arg1, 1
        mem[(2 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if msg.value < donation:
            if ext_call.return_data[0] >= sub_cbe4e8e5:
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 1, sub_cbe4e8e5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 2, sub_ad74321a
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 3, sub_a4653009
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                     gas gas_remaining wei
                    args arg1, sub_0d3f9cf5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(4 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 192
                require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                mem[(6 * ceil32(return_data.size)) + 1252] = arg1
                require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(6 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 1 > !ext_call.return_data[0]:
                    revert with 0, 17
                if 9 == uint32(ext_call.return_data[96]):
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(7 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var130001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var134001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var135001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var139001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var137001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (7 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var141001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(7 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var138001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var142001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var143001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var147001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var145001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (7 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var149001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
            else:
                mem[(4 * ceil32(return_data.size)) + 1252] = arg1
                mem[(4 * ceil32(return_data.size)) + 1284] = 0
                mem[(4 * ceil32(return_data.size)) + 1316] = sub_512697d5
                require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, 0, sub_512697d5
                mem[(4 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 2, sub_ad74321a
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 3, sub_a4653009
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                     gas gas_remaining wei
                    args arg1, sub_0d3f9cf5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(6 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 192
                require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                mem[(7 * ceil32(return_data.size)) + 1252] = arg1
                require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(7 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 1 > !ext_call.return_data[0]:
                    revert with 0, 17
                if uint32(ext_call.return_data[96]) != 9:
                    if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(8 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var149001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var153001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var151001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (8 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(8 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var136001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var140001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var141001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var145001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var143001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (8 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var147001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
        else:
            if ext_call.return_data[0] >= sub_cbe4e8e5:
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 1, sub_cbe4e8e5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 2, sub_ad74321a
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 3, sub_a4653009
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                     gas gas_remaining wei
                    args arg1, sub_0d3f9cf5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(4 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 192
                require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                mem[(6 * ceil32(return_data.size)) + 1252] = arg1
                require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(6 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 1 > !ext_call.return_data[0]:
                    revert with 0, 17
                if 9 == uint32(ext_call.return_data[96]):
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(7 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var131001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var135001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var136001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var140001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var138001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (7 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var142001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(7 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var139001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var143001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var144001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (7 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var148001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(7 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(7 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(7 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(7 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(7 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(7 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(7 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var146001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(7 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (7 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (7 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var150001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(7 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
            else:
                mem[(4 * ceil32(return_data.size)) + 1252] = arg1
                mem[(4 * ceil32(return_data.size)) + 1284] = 0
                mem[(4 * ceil32(return_data.size)) + 1316] = sub_512697d5
                require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args arg1, 0, sub_512697d5
                mem[(4 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 2, sub_ad74321a
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                     gas gas_remaining wei
                    args arg1, 3, sub_a4653009
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                     gas gas_remaining wei
                    args arg1, sub_0d3f9cf5
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(6 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 192
                require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                mem[(7 * ceil32(return_data.size)) + 1252] = arg1
                require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                        gas gas_remaining wei
                       args arg1
                mem[(7 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 1 > !ext_call.return_data[0]:
                    revert with 0, 17
                if uint32(ext_call.return_data[96]) != 9:
                    if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(8 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var150001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var154001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var152001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (8 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                        revert with 0, 17
                    if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                        revert with 0, 17
                    mem[(8 * ceil32(return_data.size)) + 1248] = 0
                    if not msg.sender:
                        revert with 0, 'ERC721: mint to the zero address'
                    if address(ownerOf[stor11].field_0):
                        revert with 0, 'ERC721: token already minted'
                    stor10[stor11] = tokenByIndex.length
                    tokenByIndex.length++
                    tokenByIndex[tokenByIndex.length] = stor11
                    if msg.sender:
                        if not msg.sender:
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var137001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var141001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                            stor8[stor11] = balanceOf[address(msg.sender)]
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var142001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var146001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor10[stor11] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                        stor10[stor9[stor9.length]] = stor10[stor11]
                        stor10[stor11] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                        mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                        mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                        mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                        mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                        mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                        mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                        mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var144001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            idx = (8 * ceil32(return_data.size)) + 1536
                            s = 0
                            while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            idx = 0
                            while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    revert with 0, 50
                                if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                        revert with 0, 17
                                    if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                    mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                    if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 49
                                    mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                    uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            uint8(sub_631edbd0[stor11].field_768) = 0
                            uint256(sub_631edbd0[stor11].field_512) = 0
                            if balanceOf[address(msg.sender)] > -2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)]++
                            address(ownerOf[stor11].field_0) = msg.sender
                            emit Transfer(0, msg.sender, stor11);
                            if ext_code.size(msg.sender):
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                var148001 = 0
                                require ext_code.size(msg.sender)
                                call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, 0, stor11, 128, 0, None
                                mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    stor11++
                    if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 250, 5, 1, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                        uint8(sub_631edbd0[stor11].field_264) = 0
                    else:
                        uint8(sub_631edbd0[stor11].field_264) = 1
    else:
        mem[ceil32(return_data.size) + 100] = arg1
        require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
        staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                gas gas_remaining wei
               args arg1
        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] == msg.sender:
            require ext_code.size(0x51c0b29a1d84611373ba301706c6b4b72283c80f)
            staticcall 0x51c0b29a1d84611373ba301706c6b4b72283c80f.get_skills(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            mem[(2 * ceil32(return_data.size)) + 96 len 1152] = ext_call.return_data[0 len 1152]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 1152
            require (2 * ceil32(return_data.size)) + 127 < (2 * ceil32(return_data.size)) + return_data.size + 96
            if not bool((4 * ceil32(return_data.size)) + 1248 <= test266151307()):
                revert with 0, 65
            require return_data.size >= 1152
            s = (2 * ceil32(return_data.size)) + 96
            t = (4 * ceil32(return_data.size)) + 96
            idx = 0
            while idx < 36:
                require mem[s] == mem[s + 31 len 1]
                mem[t] = mem[s]
                s = s + 32
                t = t + 32
                idx = idx + 1
                continue 
            if not mem[(4 * ceil32(return_data.size)) + 287 len 1]:
                revert with 0, 'Not a crafter'
            mem[(4 * ceil32(return_data.size)) + 1252] = arg1
            mem[(4 * ceil32(return_data.size)) + 1284] = 1
            require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
            staticcall 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0xb183b67f with:
                    gas gas_remaining wei
                   args arg1, 1
            mem[(4 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if msg.value < donation:
                if ext_call.return_data[0] >= sub_cbe4e8e5:
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 1, sub_cbe4e8e5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(6 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(7 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(7 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if 9 == uint32(ext_call.return_data[96]):
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(8 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var139001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var143001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var144001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var148001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var146001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var150001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(8 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var147001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var151001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var152001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var156001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var154001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var158001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    mem[(6 * ceil32(return_data.size)) + 1252] = arg1
                    mem[(6 * ceil32(return_data.size)) + 1284] = 0
                    mem[(6 * ceil32(return_data.size)) + 1316] = sub_512697d5
                    require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                    call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, 0, sub_512697d5
                    mem[(6 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(7 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(8 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(8 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if uint32(ext_call.return_data[96]) != 9:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(10 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var158001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var162001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var160001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (10 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(10 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var145001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var149001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var150001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var154001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var152001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (10 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var156001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
            else:
                if ext_call.return_data[0] >= sub_cbe4e8e5:
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 1, sub_cbe4e8e5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(6 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(7 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(7 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if 9 == uint32(ext_call.return_data[96]):
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(8 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var140001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var144001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var145001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var149001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var147001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var151001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(8 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var148001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var152001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var153001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (8 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var157001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(8 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(8 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(8 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(8 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(8 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(8 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(8 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var155001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(8 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (8 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (8 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var159001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(8 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    mem[(6 * ceil32(return_data.size)) + 1252] = arg1
                    mem[(6 * ceil32(return_data.size)) + 1284] = 0
                    mem[(6 * ceil32(return_data.size)) + 1316] = sub_512697d5
                    require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                    call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, 0, sub_512697d5
                    mem[(6 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(7 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(8 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(8 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if uint32(ext_call.return_data[96]) != 9:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(10 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var159001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var163001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var161001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (10 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(10 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var146001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var150001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var151001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (10 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var155001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(10 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(10 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(10 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(10 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(10 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(10 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(10 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var153001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(10 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (10 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (10 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var157001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(10 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mask_shl', 249, 5, 2, ('add', 31, 'returndatasize'))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
        else:
            mem[(2 * ceil32(return_data.size)) + 100] = arg1
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0x6352211e with:
                    gas gas_remaining wei
                   args arg1
            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            mem[(4 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
            mem[(4 * ceil32(return_data.size)) + 132] = msg.sender
            require ext_code.size(0xce761d788df608bd21bdd59d6f4b54b2e27f25bb)
            staticcall 0xce761d788df608bd21bdd59d6f4b54b2e27f25bb.0xe985e9c5 with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), msg.sender
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not ext_call.return_data[0]:
                revert with 0, 'Not your summoner'
            require ext_code.size(0x51c0b29a1d84611373ba301706c6b4b72283c80f)
            staticcall 0x51c0b29a1d84611373ba301706c6b4b72283c80f.get_skills(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            mem[(6 * ceil32(return_data.size)) + 96 len 1152] = ext_call.return_data[0 len 1152]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 1152
            require (6 * ceil32(return_data.size)) + 127 < (6 * ceil32(return_data.size)) + return_data.size + 96
            if not bool((7 * ceil32(return_data.size)) + 1248 <= test266151307()):
                revert with 0, 65
            require return_data.size >= 1152
            s = (6 * ceil32(return_data.size)) + 96
            t = (7 * ceil32(return_data.size)) + 96
            idx = 0
            while idx < 36:
                require mem[s] == mem[s + 31 len 1]
                mem[t] = mem[s]
                s = s + 32
                t = t + 32
                idx = idx + 1
                continue 
            if not mem[(7 * ceil32(return_data.size)) + 287 len 1]:
                revert with 0, 'Not a crafter'
            mem[(7 * ceil32(return_data.size)) + 1252] = arg1
            mem[(7 * ceil32(return_data.size)) + 1284] = 1
            require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
            staticcall 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0xb183b67f with:
                    gas gas_remaining wei
                   args arg1, 1
            mem[(7 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if msg.value < donation:
                if ext_call.return_data[0] >= sub_cbe4e8e5:
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 1, sub_cbe4e8e5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(8 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(10 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(10 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if 9 == uint32(ext_call.return_data[96]):
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(11 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var155001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var159001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var160001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var164001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var162001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (11 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var166001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(11 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var163001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var167001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var168001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var172001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var170001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (11 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var174001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    mem[(8 * ceil32(return_data.size)) + 1252] = arg1
                    mem[(8 * ceil32(return_data.size)) + 1284] = 0
                    mem[(8 * ceil32(return_data.size)) + 1316] = sub_512697d5
                    require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                    call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, 0, sub_512697d5
                    mem[(8 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(10 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(11 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(11 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if uint32(ext_call.return_data[96]) != 9:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(12 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var174001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var178001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var176001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (12 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and 0 > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and 0 < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(12 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var161001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var165001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var166001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var170001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var168001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (12 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var172001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32)))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
            else:
                if ext_call.return_data[0] >= sub_cbe4e8e5:
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 1, sub_cbe4e8e5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(8 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(10 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(10 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if 9 == uint32(ext_call.return_data[96]):
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(11 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var156001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var160001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var161001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var165001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var163001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (11 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var167001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(11 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var164001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var168001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var169001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (11 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var173001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(11 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(11 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(11 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(11 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(11 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(11 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(11 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var171001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(11 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (11 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (11 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var175001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(11 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                else:
                    mem[(8 * ceil32(return_data.size)) + 1252] = arg1
                    mem[(8 * ceil32(return_data.size)) + 1284] = 0
                    mem[(8 * ceil32(return_data.size)) + 1316] = sub_512697d5
                    require ext_code.size(0xc5e80eef433af03e9380123c75231a08dc18c4b6)
                    call 0xc5e80eef433af03e9380123c75231a08dc18c4b6.transfer(uint256 arg1, uint256 arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args arg1, 0, sub_512697d5
                    mem[(8 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 2, sub_ad74321a
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529)
                    call 0x408ce6feb12e41eb6b71fa97fe7b15fcb697b529.0x42342e06 with:
                         gas gas_remaining wei
                        args arg1, 3, sub_a4653009
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xadaffe49f91e9541fb8253ba7f3c4547e8f90373)
                    call 0xadaffe49f91e9541fb8253ba7f3c4547e8f90373.0xe4a0d1b7 with:
                         gas gas_remaining wei
                        args arg1, sub_0d3f9cf5
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1)
                    staticcall 0xb5f5af1087a8da62a23b08c00c6ec9af21f397a1.ability_scores(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(10 * ceil32(return_data.size)) + 1248 len 192] = ext_call.return_data[0 len 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 192
                    require ext_call.return_data[0] == ext_call.return_data[28 len 4]
                    require ext_call.return_data[32] == ext_call.return_data[60 len 4]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    require ext_call.return_data[96] == ext_call.return_data[124 len 4]
                    require ext_call.return_data[128] == ext_call.return_data[156 len 4]
                    require ext_call.return_data[160] == ext_call.return_data[188 len 4]
                    mem[(11 * ceil32(return_data.size)) + 1252] = arg1
                    require ext_code.size(0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4)
                    staticcall 0x7426dbe5207c2b5dac57d8e55f0959fcd99661d4.d20(uint256 arg1) with:
                            gas gas_remaining wei
                           args arg1
                    mem[(11 * ceil32(return_data.size)) + 1248] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 1 > !ext_call.return_data[0]:
                        revert with 0, 17
                    if uint32(ext_call.return_data[96]) != 9:
                        if ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))) < -118:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)) < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(12 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var175001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var179001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var177001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (12 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', ('signextend', 0, ('sdiv', ('signextend', 0, ('add', -10, ('signextend', 0, ('mask_shl', 32, 0, 0, ('ext_call.return_data', 96, 32))))), 2)), ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
                    else:
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) >= 0 and -1 > -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) < 0 and -1 < -('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) >= 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) > -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) < 0 and ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))) < -('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))) - 128:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) >= 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) > -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) + 127:
                            revert with 0, 17
                        if ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) < 0 and ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))) < -('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))) - 128:
                            revert with 0, 17
                        mem[(12 * ceil32(return_data.size)) + 1248] = 0
                        if not msg.sender:
                            revert with 0, 'ERC721: mint to the zero address'
                        if address(ownerOf[stor11].field_0):
                            revert with 0, 'ERC721: token already minted'
                        stor10[stor11] = tokenByIndex.length
                        tokenByIndex.length++
                        tokenByIndex[tokenByIndex.length] = stor11
                        if msg.sender:
                            if not msg.sender:
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var162001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var166001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not msg.sender:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(msg.sender)][stor4[address(msg.sender)]] = stor11
                                stor8[stor11] = balanceOf[address(msg.sender)]
                                mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                                mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                                mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                                mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                                mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                                mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                                mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var167001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                    idx = (12 * ceil32(return_data.size)) + 1536
                                    s = 0
                                    while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                        mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    idx = 0
                                    while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                                revert with 0, 17
                                            if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 50
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                            mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                                revert with 0, 49
                                            mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                            uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    uint8(sub_631edbd0[stor11].field_768) = 0
                                    uint256(sub_631edbd0[stor11].field_512) = 0
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    address(ownerOf[stor11].field_0) = msg.sender
                                    emit Transfer(0, msg.sender, stor11);
                                    if ext_code.size(msg.sender):
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                        var171001 = 0
                                        require ext_code.size(msg.sender)
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor11, 128, 0, None
                                        mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor10[stor11] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor10[stor11]] = tokenByIndex[tokenByIndex.length]
                            stor10[stor9[stor9.length]] = stor10[stor11]
                            stor10[stor11] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                            mem[(12 * ceil32(return_data.size)) + 1280] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1312] = ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))
                            mem[(12 * ceil32(return_data.size)) + 1344] = ('signextend', 0, ('signextend', 0, ('signextend', 0, ('type', 256, ('field', 256, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))
                            mem[(12 * ceil32(return_data.size)) + 1376] = uint8(sub_631edbd0[stor11].field_264)
                            mem[(12 * ceil32(return_data.size)) + 1408] = uint256(sub_631edbd0[stor11].field_512)
                            mem[(12 * ceil32(return_data.size)) + 1440] = bool(uint8(sub_631edbd0[stor11].field_768))
                            mem[(12 * ceil32(return_data.size)) + 1472] = bool(uint8(sub_631edbd0[stor11].field_776))
                            mem[(12 * ceil32(return_data.size)) + 1504] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                            if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var169001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[(12 * ceil32(return_data.size)) + 1536] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)
                                idx = (12 * ceil32(return_data.size)) + 1536
                                s = 0
                                while (12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1504 > idx:
                                    mem[idx + 32] = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                idx = 0
                                while idx < uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                    if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                        revert with 0, 50
                                    if mem[(32 * idx) + (12 * ceil32(return_data.size)) + 1536] == stor11:
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) < 1:
                                            revert with 0, 17
                                        if uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0) - 1 >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        if idx >= uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 50
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][idx].field_0) = uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0)
                                        mem[32] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20)
                                        if not uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0):
                                            revert with 0, 49
                                        mem[0] = sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19))))))))), sha3(('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'sub_631edbd0', 19)))))))))), 20))
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))][uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)].field_0) = 0
                                        uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                uint8(sub_631edbd0[stor11].field_768) = 0
                                uint256(sub_631edbd0[stor11].field_512) = 0
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                address(ownerOf[stor11].field_0) = msg.sender
                                emit Transfer(0, msg.sender, stor11);
                                if ext_code.size(msg.sender):
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1540] = msg.sender
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1572] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1604] = stor11
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1636] = 128
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1668] = 0
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1700 len 0] = None
                                    var173001 = 0
                                    require ext_code.size(msg.sender)
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, 0, stor11, 128, 0, None
                                    mem[(12 * ceil32(return_data.size)) + (32 * uint256(sub_4bc8a89c[('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('type', 256, ('field', 0, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19))))))))))][('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('signextend', 15, ('field', 128, ('stor', ('map', ('stor', ('name', 'stor11', 11)), ('name', 'stor19', 19)))))))))].field_0)) + 1536] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        stor11++
                        if ('signextend', 0, ('add', ('signextend', 0, ('stor', ('name', 'sub_7f012530', 18))), ('signextend', 0, ('add', ('signextend', 0, ('mem', ('range', ('add', 287, ('mul', 7, ('mask_shl', 251, 5, 0, ('add', 31, 'returndatasize')))), 1))), ('signextend', 0, ('add', -1, ('signextend', 0, ('add', 1, ('ext_call.return_data', 0, 32))))))))) <= 17:
                            uint8(sub_631edbd0[stor11].field_264) = 0
                        else:
                            uint8(sub_631edbd0[stor11].field_264) = 1
    uint8(sub_631edbd0[stor11].field_776) = 1
}



}
