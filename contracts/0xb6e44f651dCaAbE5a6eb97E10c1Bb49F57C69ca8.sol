contract main {




// =====================  Runtime code  =====================


#
#  - mint(uint256 arg1, uint256 arg2)
#  - sub_3237d719(?)
#  - _fallback()
#
uint8 stor0; offset 160
uint8 stor0; offset 168
uint16 stor0; offset 160
address owner;
uint256 stor1;
address oracleAddress;
address sub_e4d75cf8Address;
address collateralAddress;
address dollarAddress;
address policyAddress;
address shareAddress;
address collateralReserveAddress;
mapping of uint256 redeem_share_balances;
mapping of uint256 redeem_collateral_balances;
uint256 unclaimed_pool_collateral;
uint256 unclaimed_pool_share;
mapping of uint256 last_redeemed;
uint256 sub_3b0dc351;
address routerAddress;
array of address router_path;
address stor17;
uint8 stor18;
uint256 stor18; offset 8
uint256 stor18;
uint8 mint_paused;
uint8 redeem_paused; offset 8
uint8 sub_e049b24e; offset 16
uint256 stor19; offset 16
uint256 stor19; offset 8
uint256 stor19;

function policy() {
    return policyAddress
}

function sub_3b0dc351(?) {
    return sub_3b0dc351
}

function collateralReserve() {
    return collateralReserveAddress
}

function dollar() {
    return dollarAddress
}

function redeem_share_balances(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return redeem_share_balances[arg1]
}

function router_path(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < router_path.length
    return address(router_path[arg1])
}

function oracle() {
    return oracleAddress
}

function redeem_paused() {
    return bool(redeem_paused)
}

function owner() {
    return owner
}

function share() {
    return shareAddress
}

function mint_paused() {
    return bool(mint_paused)
}

function unclaimed_pool_share() {
    return unclaimed_pool_share
}

function redeem_collateral_balances(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return redeem_collateral_balances[arg1]
}

function collateral() {
    return collateralAddress
}

function last_redeemed(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return last_redeemed[arg1]
}

function sub_e049b24e(?) {
    return bool(sub_e049b24e)
}

function sub_e4d75cf8(?) {
    return sub_e4d75cf8Address
}

function router() {
    return routerAddress
}

function unclaimed_pool_collateral() {
    return unclaimed_pool_collateral
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_6a7250be(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(240, 0, stor19.field_16) = Mask(240, 0, not sub_e049b24e)
}

function toggleRedeeming() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(248, 0, stor19.field_8) = Mask(248, 0, not redeem_paused)
}

function toggleMinting() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    uint256(stor19.field_0) = not mint_paused or Mask(248, 8, uint256(stor19.field_0))
}

function sub_9a9f1c30(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor17 = address(arg1)
}

function sub_f6fc5516(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 100000:
        revert with 0, 'ZAP SLIPPAGE TOO HIGH'
    sub_3b0dc351 = arg1
}

function setOracle(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'Invalid address'
    oracleAddress = arg1
}

function setPolicy(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'Invalid address'
    policyAddress = arg1
}

function setCollateralReserve(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'invalidAddress'
    collateralReserveAddress = arg1
}

function sub_cc070ef0(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0, 'Invalid address'
    sub_e4d75cf8Address = address(arg1)
}

function sub_548f8939(?) {
    require ext_code.size(shareAddress)
    staticcall shareAddress.0x18160ddd with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_bfa3e19b(?) {
    require ext_code.size(dollarAddress)
    staticcall dollarAddress.0x18160ddd with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function getCollateralBalance() {
    require ext_code.size(collateralAddress)
    staticcall collateralAddress.0x70a08231 with:
            gas gas_remaining wei
           args collateralReserveAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function globalCollateralBalance() {
    require ext_code.size(collateralAddress)
    staticcall collateralAddress.0x70a08231 with:
            gas gas_remaining wei
           args collateralReserveAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < unclaimed_pool_collateral:
        revert with 0, 17
    return (ext_call.return_data[0] - unclaimed_pool_collateral)
}

function sub_14362530(?) {
    if not sub_e4d75cf8Address:
        return 0
    require ext_code.size(sub_e4d75cf8Address)
    staticcall sub_e4d75cf8Address.consult(address arg1, uint256 arg2) with:
            gas gas_remaining wei
           args stor17, 10^18
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    return (10^6 * ext_call.return_data[0] / 10^18)
}

function setRouter(address arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'Invalid router'
    routerAddress = arg1
    router_path.length = arg2.length
    if not arg2.length:
        idx = 0
        while router_path.length > idx:
            uint256(router_path[idx]) = 0
            idx = idx + 1
            continue 
    else:
        s = 0
        idx = arg2 + 36
        while arg2 + (32 * arg2.length) + 36 > idx:
            address(router_path[s]) = address(cd[idx])
            s = s + 1
            idx = idx + 32
            continue 
        idx = Mask(251, 0, (32 * arg2.length) + 31) >> 5
        while router_path.length > idx:
            uint256(router_path[idx]) = 0
            idx = idx + 1
            continue 
}

function sub_508f657d(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(collateralAddress)
    staticcall collateralAddress.0x70a08231 with:
            gas gas_remaining wei
           args collateralReserveAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not msg.sender:
        revert with 0, 'Invalid reserve address'
    require ext_code.size(collateralReserveAddress)
    call collateralReserveAddress.transferTo(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args collateralAddress, this.address, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(stor17)
    call stor17.withdraw(uint256 arg1) with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    call msg.sender with:
       value ext_call.return_data[0] wei
         gas 2300 * is_zero(value) wei
}

function init(address arg1, address arg2, address arg3, address arg4, address arg5, address arg6) {
    require calldata.size - 4 >= 192
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    require arg6 == arg6
    if not uint8(stor0.field_168):
        if uint8(stor0.field_160):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
        if not uint8(stor0.field_168):
            uint16(stor0.field_160) = 257
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    oracleAddress = arg1
    dollarAddress = arg2
    shareAddress = arg3
    collateralAddress = arg4
    require ext_code.size(arg4)
    staticcall arg4.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if 18 < ext_call.return_data[31 len 1]:
        revert with 0, 17
    uint8(stor18.field_0) = uint8(-ext_call.return_data[31 len 1] + 18)
    Mask(248, 0, stor18.field_8) = 0
    collateralReserveAddress = arg5
    policyAddress = arg6
    if not uint8(stor0.field_168):
        uint8(stor0.field_168) = 0
}

function sub_5d25639f(?) {
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x12eb1119 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        return (10^6 * ext_call.return_data[0])
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        return (10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1])
    s = 10
    t = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    return (10^6 * ext_call.return_data[0] / s * t)
}

function sub_99bcc775(?) {
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x43be1230 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        return (10^6 * ext_call.return_data[0])
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        return (10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1])
    s = 10
    t = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    return (10^6 * ext_call.return_data[0] / s * t)
}

function getDollarPrice() {
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0xe61574b0 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        return (10^6 * ext_call.return_data[0])
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        return (10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1])
    s = 10
    t = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    return (10^6 * ext_call.return_data[0] / s * t)
}

function getCollateralPrice() {
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x12eb1119 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        return (10^6 * ext_call.return_data[0])
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        return (10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1])
    s = 10
    t = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    return (10^6 * ext_call.return_data[0] / s * t)
}

function collectRedemption() {
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require ext_code.size(policyAddress)
    staticcall policyAddress.redemption_delay() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if last_redeemed[msg.sender] > !ext_call.return_data[0]:
        revert with 0, 17
    if last_redeemed[msg.sender] + ext_call.return_data[0] > block.timestamp:
        revert with 0, '<redemption_delay'
    require ext_code.size(policyAddress)
    call policyAddress.0xd33f1986 with:
         gas gas_remaining wei
        args 1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if not redeem_share_balances[msg.sender]:
        if redeem_collateral_balances[msg.sender]:
            redeem_collateral_balances[msg.sender] = 0
            if unclaimed_pool_collateral < redeem_collateral_balances[msg.sender]:
                revert with 0, 17
            unclaimed_pool_collateral -= redeem_collateral_balances[msg.sender]
            if not msg.sender:
                revert with 0, 'Invalid reserve address'
            require ext_code.size(collateralReserveAddress)
            call collateralReserveAddress.transferTo(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args collateralAddress, this.address, redeem_collateral_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(stor17)
            call stor17.withdraw(uint256 arg1) with:
                 gas gas_remaining wei
                args redeem_collateral_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call msg.sender with:
               value redeem_collateral_balances[msg.sender] wei
                 gas 2300 * is_zero(value) wei
    else:
        redeem_share_balances[msg.sender] = 0
        if unclaimed_pool_share < redeem_share_balances[msg.sender]:
            revert with 0, 17
        unclaimed_pool_share -= redeem_share_balances[msg.sender]
        if not redeem_collateral_balances[msg.sender]:
            require ext_code.size(collateralReserveAddress)
            call collateralReserveAddress.transferTo(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args shareAddress, msg.sender, redeem_share_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
        else:
            redeem_collateral_balances[msg.sender] = 0
            if unclaimed_pool_collateral < redeem_collateral_balances[msg.sender]:
                revert with 0, 17
            unclaimed_pool_collateral -= redeem_collateral_balances[msg.sender]
            require ext_code.size(collateralReserveAddress)
            call collateralReserveAddress.transferTo(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args shareAddress, msg.sender, redeem_share_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if not msg.sender:
                revert with 0, 'Invalid reserve address'
            require ext_code.size(collateralReserveAddress)
            call collateralReserveAddress.transferTo(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args collateralAddress, this.address, redeem_collateral_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(stor17)
            call stor17.withdraw(uint256 arg1) with:
                 gas gas_remaining wei
                args redeem_collateral_balances[msg.sender]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call msg.sender with:
               value redeem_collateral_balances[msg.sender] wei
                 gas 2300 * is_zero(value) wei
    stor1 = 1
}

function globalCollateralValue() {
    if not uint256(stor18.field_0):
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0x12eb1119 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(collateralAddress)
            staticcall collateralAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args collateralReserveAddress
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < unclaimed_pool_collateral:
                revert with 0, 17
            if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
                revert with 0, 17
            if (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]) and 1 > -1 / (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]):
                revert with 0, 17
            return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]) / 10^6)
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(collateralAddress)
            staticcall collateralAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args collateralReserveAddress
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < unclaimed_pool_collateral:
                revert with 0, 17
            if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
                revert with 0, 17
            if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) and 1 > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                revert with 0, 17
            return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) / 10^6)
        s = 10
        t = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(collateralAddress)
        staticcall collateralAddress.0x70a08231 with:
                gas gas_remaining wei
               args collateralReserveAddress
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < unclaimed_pool_collateral:
            revert with 0, 17
        if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / s * t > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
            revert with 0, 17
        if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t) and 1 > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t):
            revert with 0, 17
        return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t) / 10^6)
    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0x12eb1119 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(collateralAddress)
            staticcall collateralAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args collateralReserveAddress
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < unclaimed_pool_collateral:
                revert with 0, 17
            if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
                revert with 0, 17
            if (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]) and 10^uint256(stor18.field_0) > -1 / (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]):
                revert with 0, 17
            return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint256(stor18.field_0)) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0] * 10^uint256(stor18.field_0)) / 10^6)
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(collateralAddress)
            staticcall collateralAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args collateralReserveAddress
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < unclaimed_pool_collateral:
                revert with 0, 17
            if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
                revert with 0, 17
            if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) and 10^uint256(stor18.field_0) > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                revert with 0, 17
            return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) * 10^uint256(stor18.field_0)) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) * 10^uint256(stor18.field_0)) / 10^6)
        s = 10
        t = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(collateralAddress)
        staticcall collateralAddress.0x70a08231 with:
                gas gas_remaining wei
               args collateralReserveAddress
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < unclaimed_pool_collateral:
            revert with 0, 17
        if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / s * t > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
            revert with 0, 17
        if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t) and 10^uint256(stor18.field_0) > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t):
            revert with 0, 17
        return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / s * t * 10^uint256(stor18.field_0)) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / s * t * 10^uint256(stor18.field_0)) / 10^6)
    s = 10
    t = 1
    idx = uint256(stor18.field_0)
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x12eb1119 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        require ext_code.size(collateralAddress)
        staticcall collateralAddress.0x70a08231 with:
                gas gas_remaining wei
               args collateralReserveAddress
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < unclaimed_pool_collateral:
            revert with 0, 17
        if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
            revert with 0, 17
        if (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]) and s * t > -1 / (10^6 * ext_call.return_data[0] * ext_call.return_data[0]) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0]):
            revert with 0, 17
        return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] * s * t) - (10^6 * unclaimed_pool_collateral * ext_call.return_data[0] * s * t) / 10^6)
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        require ext_code.size(collateralAddress)
        staticcall collateralAddress.0x70a08231 with:
                gas gas_remaining wei
               args collateralReserveAddress
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < unclaimed_pool_collateral:
            revert with 0, 17
        if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
            revert with 0, 17
        if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) and s * t > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
            revert with 0, 17
        return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) * s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) * s * t) / 10^6)
    u = 10
    v = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if u > -1 / u:
            revert with 0, 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = u * v
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not u * v:
        revert with 0, 18
    require ext_code.size(collateralAddress)
    staticcall collateralAddress.0x70a08231 with:
            gas gas_remaining wei
           args collateralReserveAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < unclaimed_pool_collateral:
        revert with 0, 17
    if ext_call.return_data[0] - unclaimed_pool_collateral and 10^6 * ext_call.return_data[0] / u * v > -1 / ext_call.return_data[0] - unclaimed_pool_collateral:
        revert with 0, 17
    if (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / u * v) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / u * v) and s * t > -1 / (ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / u * v) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / u * v):
        revert with 0, 17
    return ((ext_call.return_data[0] * 10^6 * ext_call.return_data[0] / u * v * s * t) - (unclaimed_pool_collateral * 10^6 * ext_call.return_data[0] / u * v * s * t) / 10^6)
}

function sub_b12f0b6b(?) {
    require ext_code.size(policyAddress)
    staticcall policyAddress.minting_fee() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(policyAddress)
    staticcall policyAddress.redemption_fee() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(policyAddress)
    staticcall policyAddress.0x965ff461 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x43be1230 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0x12eb1119 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not 10^ext_call.return_data[63 len 1]:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            s = 10
            t = 1
            idx = ext_call.return_data[63 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not 10^ext_call.return_data[63 len 1]:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            s = 10
            t = 1
            idx = ext_call.return_data[63 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / s * t,
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        s = 10
        t = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0xe61574b0 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        u = 10
        v = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0] / u * v,
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0x12eb1119 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not 10^ext_call.return_data[63 len 1]:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            s = 10
            t = 1
            idx = ext_call.return_data[63 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not 10^ext_call.return_data[63 len 1]:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.target_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.effective_collateral_ratio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return ext_call.return_data[0], 
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       bool(mint_paused),
                       bool(redeem_paused),
                       bool(sub_e049b24e),
                       unclaimed_pool_collateral,
                       unclaimed_pool_share
            s = 10
            t = 1
            idx = ext_call.return_data[63 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / s * t,
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        s = 10
        t = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0xe61574b0 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        u = 10
        v = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0] / u * v,
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    s = 10
    t = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x12eb1119 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0xe61574b0 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        u = 10
        v = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / u * v,
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0xe61574b0 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(policyAddress)
            staticcall policyAddress.target_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.effective_collateral_ratio() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return ext_call.return_data[0], 
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   10^6 * ext_call.return_data[0] / s * t,
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   bool(mint_paused),
                   bool(redeem_paused),
                   bool(sub_e049b24e),
                   unclaimed_pool_collateral,
                   unclaimed_pool_share
        u = 10
        v = 1
        idx = ext_call.return_data[63 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
               10^6 * ext_call.return_data[0] / u * v,
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    u = 10
    v = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if u > -1 / u:
            revert with 0, 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = u * v
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not u * v:
        revert with 0, 18
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0xe61574b0 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0] / u * v,
               10^6 * ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        if not 10^ext_call.return_data[63 len 1]:
            revert with 0, 18
        require ext_code.size(policyAddress)
        staticcall policyAddress.target_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(policyAddress)
        staticcall policyAddress.effective_collateral_ratio() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0], 
               ext_call.return_data[0],
               ext_call.return_data[0],
               10^6 * ext_call.return_data[0] / s * t,
               10^6 * ext_call.return_data[0] / u * v,
               10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]),
               ext_call.return_data[0],
               ext_call.return_data[0],
               bool(mint_paused),
               bool(redeem_paused),
               bool(sub_e049b24e),
               unclaimed_pool_collateral,
               unclaimed_pool_share
    w = 10
    x = 1
    idx = ext_call.return_data[63 len 1]
    while idx > 1:
        if w > -1 / w:
            revert with 0, 17
        if not bool(idx):
            w = w * w
            x = x
            idx = uint255(idx) * 0.5
            continue 
        w = w * w
        x = w * x
        idx = uint255(idx) * 0.5
        continue 
    if x > -1 / w:
        revert with 0, 17
    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
        revert with 0, 17
    if not w * x:
        revert with 0, 18
    require ext_code.size(policyAddress)
    staticcall policyAddress.target_collateral_ratio() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(policyAddress)
    staticcall policyAddress.effective_collateral_ratio() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0], 
           ext_call.return_data[0],
           ext_call.return_data[0],
           10^6 * ext_call.return_data[0] / s * t,
           10^6 * ext_call.return_data[0] / u * v,
           10^6 * ext_call.return_data[0] / w * x,
           ext_call.return_data[0],
           ext_call.return_data[0],
           bool(mint_paused),
           bool(redeem_paused),
           bool(sub_e049b24e),
           unclaimed_pool_collateral,
           unclaimed_pool_share
}

function redeem(uint256 arg1, uint256 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.0x43be1230 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
    if not ext_call.return_data[63 len 1]:
        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
            revert with 0, 17
        require ext_code.size(oracleAddress)
        staticcall oracleAddress.0xe61574b0 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
        if not ext_call.return_data[63 len 1]:
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            require ext_code.size(policyAddress)
            staticcall policyAddress.redemption_fee() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.0x965ff461 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(policyAddress)
            staticcall policyAddress.price_target() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 10^6 * ext_call.return_data[0] >= ext_call.return_data[0]:
                require ext_code.size(policyAddress)
                staticcall policyAddress.getEffectiveCollateralRatio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(oracleAddress)
                staticcall oracleAddress.0x12eb1119 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                if not ext_call.return_data[63 len 1]:
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 10^6 * ext_call.return_data[0] <= 0:
                        revert with 0, 'Invalid collateral price'
                    if 10^6 * ext_call.return_data[0] <= 0:
                        revert with 0, 'Invalid share price'
                    if arg1 and ext_call.return_data[0] > -1 / arg1:
                        revert with 0, 17
                    if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] >= 10^6:
                        if not ext_call.return_data[0]:
                            require ext_code.size(collateralAddress)
                            staticcall collateralAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args collateralReserveAddress
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                revert with 0, 17
                            if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                revert with 0, '<collateralBalance'
                            if arg3 > 0:
                                revert with 0, '>> slippage than expected...'
                            if arg2 > 0:
                                revert with 0, '>> slippage than expected......'
                        else:
                            if not uint256(stor18.field_0):
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                            else:
                                if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if not 10^uint256(stor18.field_0):
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint256(stor18.field_0)
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                        last_redeemed[address(msg.sender)] = block.timestamp
                        require ext_code.size(dollarAddress)
                        call dollarAddress.0xa8a778ae with:
                             gas gas_remaining wei
                            args msg.sender, arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                            revert with 0, 17
                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                            revert with 0, 17
                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                            revert with 0, 17
                        if not 10^6 * ext_call.return_data[0]:
                            revert with 0, 18
                        if not ext_call.return_data[0]:
                            require ext_code.size(collateralAddress)
                            staticcall collateralAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args collateralReserveAddress
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                revert with 0, 17
                            if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                revert with 0, '<collateralBalance'
                            if arg3 > 0:
                                revert with 0, '>> slippage than expected...'
                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                revert with 0, '>> slippage than expected......'
                        else:
                            if not uint256(stor18.field_0):
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                            else:
                                if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if not 10^uint256(stor18.field_0):
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint256(stor18.field_0)
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                        if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                            if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                revert with 0, 17
                            redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                revert with 0, 17
                            unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                        last_redeemed[address(msg.sender)] = block.timestamp
                        require ext_code.size(dollarAddress)
                        call dollarAddress.0xa8a778ae with:
                             gas gas_remaining wei
                            args msg.sender, arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                            if not collateralReserveAddress:
                                revert with 0, 'Invalid reserve address'
                            require ext_code.size(shareAddress)
                            call shareAddress.0xb4f56b26 with:
                                 gas gas_remaining wei
                                args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if not 10^ext_call.return_data[63 len 1]:
                            revert with 0, 18
                        if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        s = 10
                        t = 1
                        idx = ext_call.return_data[63 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if 10^6 * ext_call.return_data[0] / s * t <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] > !ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.getEffectiveCollateralRatio() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(oracleAddress)
                staticcall oracleAddress.0x12eb1119 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                if not ext_call.return_data[63 len 1]:
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 10^6 * ext_call.return_data[0] <= 0:
                        revert with 0, 'Invalid collateral price'
                    if 10^6 * ext_call.return_data[0] <= 0:
                        revert with 0, 'Invalid share price'
                    if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                        revert with 0, 17
                    if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] >= 10^6:
                        if not ext_call.return_data[0]:
                            require ext_code.size(collateralAddress)
                            staticcall collateralAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args collateralReserveAddress
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                revert with 0, 17
                            if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                revert with 0, '<collateralBalance'
                            if arg3 > 0:
                                revert with 0, '>> slippage than expected...'
                            if arg2 > 0:
                                revert with 0, '>> slippage than expected......'
                        else:
                            if not uint256(stor18.field_0):
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                            else:
                                if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if not 10^uint256(stor18.field_0):
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint256(stor18.field_0)
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                        last_redeemed[address(msg.sender)] = block.timestamp
                        require ext_code.size(dollarAddress)
                        call dollarAddress.0xa8a778ae with:
                             gas gas_remaining wei
                            args msg.sender, arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                            revert with 0, 17
                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                            revert with 0, 17
                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                            revert with 0, 17
                        if not 10^6 * ext_call.return_data[0]:
                            revert with 0, 18
                        if not ext_call.return_data[0]:
                            require ext_code.size(collateralAddress)
                            staticcall collateralAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args collateralReserveAddress
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                revert with 0, 17
                            if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                revert with 0, '<collateralBalance'
                            if arg3 > 0:
                                revert with 0, '>> slippage than expected...'
                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                revert with 0, '>> slippage than expected......'
                        else:
                            if not uint256(stor18.field_0):
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                            else:
                                if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if not 10^uint256(stor18.field_0):
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint256(stor18.field_0)
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                        if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                            if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                revert with 0, 17
                            redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                revert with 0, 17
                            unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                        last_redeemed[address(msg.sender)] = block.timestamp
                        require ext_code.size(dollarAddress)
                        call dollarAddress.0xa8a778ae with:
                             gas gas_remaining wei
                            args msg.sender, arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                            if not collateralReserveAddress:
                                revert with 0, 'Invalid reserve address'
                            require ext_code.size(shareAddress)
                            call shareAddress.0xb4f56b26 with:
                                 gas gas_remaining wei
                                args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if not 10^ext_call.return_data[63 len 1]:
                            revert with 0, 18
                        if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        s = 10
                        t = 1
                        idx = ext_call.return_data[63 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if 10^6 * ext_call.return_data[0] / s * t <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
        else:
            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not 10^ext_call.return_data[63 len 1]:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.redemption_fee() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.0x965ff461 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.price_target() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) >= ext_call.return_data[0]:
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] > !ext_call.return_data[0]:
                        revert with 0, 17
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
            else:
                s = 10
                t = 1
                idx = ext_call.return_data[63 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(policyAddress)
                staticcall policyAddress.redemption_fee() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.0x965ff461 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.price_target() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 10^6 * ext_call.return_data[0] / s * t >= ext_call.return_data[0]:
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] > !ext_call.return_data[0]:
                        revert with 0, 17
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0]:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0]:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
    else:
        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not 10^ext_call.return_data[63 len 1]:
                revert with 0, 18
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.redemption_fee() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.0x965ff461 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.price_target() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 10^6 * ext_call.return_data[0] >= ext_call.return_data[0]:
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] > !ext_call.return_data[0]:
                        revert with 0, 17
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            s = 10
                            t = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if not 10^ext_call.return_data[63 len 1]:
                        revert with 0, 18
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.redemption_fee() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.0x965ff461 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.price_target() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) >= ext_call.return_data[0]:
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                s = 10
                                t = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] > !ext_call.return_data[0]:
                            revert with 0, 17
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                s = 10
                                t = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    s = 10
                    t = 1
                    idx = ext_call.return_data[63 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.redemption_fee() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.0x965ff461 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.price_target() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 10^6 * ext_call.return_data[0] / s * t >= ext_call.return_data[0]:
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                s = 10
                                t = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] > !ext_call.return_data[0]:
                            revert with 0, 17
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                s = 10
                                t = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / s * t
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / s * t
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / s * t
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
        else:
            s = 10
            t = 1
            idx = ext_call.return_data[63 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(oracleAddress)
            staticcall oracleAddress.0xe61574b0 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[32] == ext_call.return_data[63 len 1]
            if not ext_call.return_data[63 len 1]:
                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                require ext_code.size(policyAddress)
                staticcall policyAddress.redemption_fee() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.0x965ff461 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(policyAddress)
                staticcall policyAddress.price_target() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 10^6 * ext_call.return_data[0] >= ext_call.return_data[0]:
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] / s * t <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0] / s * t:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            u = 10
                            v = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 0, 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = u * v
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not u * v:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            w = 10
                                            x = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if w > -1 / w:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    w = w * w
                                                    x = x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                w = w * w
                                                x = w * x
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if x > -1 / w:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not w * x:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] > !ext_call.return_data[0]:
                        revert with 0, 17
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.getEffectiveCollateralRatio() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(oracleAddress)
                    staticcall oracleAddress.0x12eb1119 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                    if not ext_call.return_data[63 len 1]:
                        if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 10^6 * ext_call.return_data[0] <= 0:
                            revert with 0, 'Invalid collateral price'
                        if 10^6 * ext_call.return_data[0] / s * t <= 0:
                            revert with 0, 'Invalid share price'
                        if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                            revert with 0, 17
                        if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] >= 10^6:
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > 0:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        s = 10
                                        t = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                revert with 0, 17
                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                revert with 0, 17
                            if not 10^6 * ext_call.return_data[0] / s * t:
                                revert with 0, 18
                            if not ext_call.return_data[0]:
                                require ext_code.size(collateralAddress)
                                staticcall collateralAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args collateralReserveAddress
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                    revert with 0, 17
                                if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                    revert with 0, '<collateralBalance'
                                if arg3 > 0:
                                    revert with 0, '>> slippage than expected...'
                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, '>> slippage than expected......'
                            else:
                                if not uint256(stor18.field_0):
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0]:
                                        revert with 0, 18
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                    if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                        if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                        if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                            revert with 0, 17
                                        unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                else:
                                    if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not 10^uint256(stor18.field_0):
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                    else:
                                        u = 10
                                        v = 1
                                        idx = uint256(stor18.field_0)
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                    revert with 0, 17
                                redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                    revert with 0, 17
                                unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                            last_redeemed[address(msg.sender)] = block.timestamp
                            require ext_code.size(dollarAddress)
                            call dollarAddress.0xa8a778ae with:
                                 gas gas_remaining wei
                                args msg.sender, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                if not collateralReserveAddress:
                                    revert with 0, 'Invalid reserve address'
                                require ext_code.size(shareAddress)
                                call shareAddress.0xb4f56b26 with:
                                     gas gas_remaining wei
                                    args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not 10^ext_call.return_data[63 len 1]:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            u = 10
                            v = 1
                            idx = ext_call.return_data[63 len 1]
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 0, 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = u * v
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 0, 17
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if not u * v:
                                revert with 0, 18
                            if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            w = 10
                                            x = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if w > -1 / w:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    w = w * w
                                                    x = x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                w = w * w
                                                x = w * x
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if x > -1 / w:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not w * x:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if not 10^ext_call.return_data[63 len 1]:
                        revert with 0, 18
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.redemption_fee() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.0x965ff461 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.price_target() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) >= ext_call.return_data[0]:
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                u = 10
                                v = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not u * v:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                w = 10
                                                x = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if w > -1 / w:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        w = w * w
                                                        x = x
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    w = w * w
                                                    x = w * x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if x > -1 / w:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not w * x:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] > !ext_call.return_data[0]:
                            revert with 0, 17
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                u = 10
                                v = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not u * v:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                w = 10
                                                x = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if w > -1 / w:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        w = w * w
                                                        x = x
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    w = w * w
                                                    x = w * x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if x > -1 / w:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not w * x:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    u = 10
                    v = 1
                    idx = ext_call.return_data[63 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if not u * v:
                        revert with 0, 18
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.redemption_fee() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.0x965ff461 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(policyAddress)
                    staticcall policyAddress.price_target() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 10^6 * ext_call.return_data[0] / u * v >= ext_call.return_data[0]:
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                u = 10
                                v = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not u * v:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < arg1 * ext_call.return_data[0] / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) < (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6) - ((arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                w = 10
                                                x = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if w > -1 / w:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        w = w * w
                                                        x = x
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    w = w * w
                                                    x = w * x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if x > -1 / w:
                                                    revert with 0, 17
                                                if arg1 - (arg1 * ext_call.return_data[0] / 10^6) and ext_call.return_data[0] > -1 / arg1 - (arg1 * ext_call.return_data[0] / 10^6):
                                                    revert with 0, 17
                                                if not w * x:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * arg1 * ext_call.return_data[0] / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - (arg1 * ext_call.return_data[0] / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] > !ext_call.return_data[0]:
                            revert with 0, 17
                        require ext_code.size(policyAddress)
                        staticcall policyAddress.getEffectiveCollateralRatio() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(oracleAddress)
                        staticcall oracleAddress.0x12eb1119 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[32] == ext_call.return_data[63 len 1]
                        if not ext_call.return_data[63 len 1]:
                            if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 10^6 * ext_call.return_data[0] <= 0:
                                revert with 0, 'Invalid collateral price'
                            if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                revert with 0, 'Invalid share price'
                            if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                revert with 0, 17
                            if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] >= 10^6:
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > 0:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            s = 10
                                            t = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0]
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                    revert with 0, 17
                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                    revert with 0, 17
                                if not 10^6 * ext_call.return_data[0] / s * t:
                                    revert with 0, 18
                                if not ext_call.return_data[0]:
                                    require ext_code.size(collateralAddress)
                                    staticcall collateralAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args collateralReserveAddress
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < unclaimed_pool_collateral:
                                        revert with 0, 17
                                    if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                        revert with 0, '<collateralBalance'
                                    if arg3 > 0:
                                        revert with 0, '>> slippage than expected...'
                                    if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, '>> slippage than expected......'
                                else:
                                    if not uint256(stor18.field_0):
                                        if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                            revert with 0, 17
                                        if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                            revert with 0, 17
                                        if not 10^6 * ext_call.return_data[0]:
                                            revert with 0, 18
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                        if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]:
                                            if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                            if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]):
                                                revert with 0, 17
                                            unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0]
                                    else:
                                        if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not 10^uint256(stor18.field_0):
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0]
                                        else:
                                            u = 10
                                            v = 1
                                            idx = uint256(stor18.field_0)
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                    if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                        revert with 0, 17
                                    unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                last_redeemed[address(msg.sender)] = block.timestamp
                                require ext_code.size(dollarAddress)
                                call dollarAddress.0xa8a778ae with:
                                     gas gas_remaining wei
                                    args msg.sender, arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                    if not collateralReserveAddress:
                                        revert with 0, 'Invalid reserve address'
                                    require ext_code.size(shareAddress)
                                    call shareAddress.0xb4f56b26 with:
                                         gas gas_remaining wei
                                        args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if bool(bool(ext_call.return_data[63 len 1] < 78)) or bool(bool(ext_call.return_data[63 len 1] < 32)):
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not 10^ext_call.return_data[63 len 1]:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1] <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                            else:
                                                u = 10
                                                v = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if u > -1 / u:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        u = u * u
                                                        v = v
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    u = u * u
                                                    v = u * v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if v > -1 / u:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not u * v:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / 10^ext_call.return_data[63 len 1]:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]) > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32]):
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / u * v / 10^6 * ext_call.return_data[0] / 10^uint8(ext_call.return_data[32])
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                u = 10
                                v = 1
                                idx = ext_call.return_data[63 len 1]
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                if ext_call.return_data[0] and 10^6 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                if not u * v:
                                    revert with 0, 18
                                if 10^6 * ext_call.return_data[0] / u * v <= 0:
                                    revert with 0, 'Invalid collateral price'
                                if 10^6 * ext_call.return_data[0] / s * t <= 0:
                                    revert with 0, 'Invalid share price'
                                if arg1 and 2 * ext_call.return_data[0] > -1 / arg1:
                                    revert with 0, 17
                                if arg1 < (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6:
                                    revert with 0, 17
                                if ext_call.return_data[0] >= 10^6:
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > 0:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > 0:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                s = 10
                                                t = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if s > -1 / s:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        s = s * s
                                                        t = t
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    s = s * s
                                                    t = s * t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if t > -1 / s:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not s * t:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > 0:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / s * t / 10^6 * ext_call.return_data[0] / u * v
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) < (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                        revert with 0, 17
                                    if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) and 10^6 > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - ((arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6):
                                        revert with 0, 17
                                    if not 10^6 * ext_call.return_data[0] / s * t:
                                        revert with 0, 18
                                    if not ext_call.return_data[0]:
                                        require ext_code.size(collateralAddress)
                                        staticcall collateralAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args collateralReserveAddress
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < unclaimed_pool_collateral:
                                            revert with 0, 17
                                        if 0 > ext_call.return_data[0] - unclaimed_pool_collateral:
                                            revert with 0, '<collateralBalance'
                                        if arg3 > 0:
                                            revert with 0, '>> slippage than expected...'
                                        if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                            revert with 0, '>> slippage than expected......'
                                    else:
                                        if not uint256(stor18.field_0):
                                            if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                revert with 0, 17
                                            if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6:
                                                revert with 0, 17
                                            if not 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, 18
                                            require ext_code.size(collateralAddress)
                                            staticcall collateralAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args collateralReserveAddress
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                revert with 0, 17
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                revert with 0, '<collateralBalance'
                                            if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                revert with 0, '>> slippage than expected...'
                                            if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                revert with 0, '>> slippage than expected......'
                                            if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v:
                                                if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                                if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v):
                                                    revert with 0, 17
                                                unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^6 * ext_call.return_data[0] / u * v
                                        else:
                                            if bool(bool(uint256(stor18.field_0) < 78)) or bool(bool(uint256(stor18.field_0) < 32)):
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not 10^uint256(stor18.field_0):
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0):
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / 10^uint256(stor18.field_0) / 10^6 * ext_call.return_data[0] / u * v
                                            else:
                                                w = 10
                                                x = 1
                                                idx = uint256(stor18.field_0)
                                                while idx > 1:
                                                    if w > -1 / w:
                                                        revert with 0, 17
                                                    if not bool(idx):
                                                        w = w * w
                                                        x = x
                                                        idx = uint255(idx) * 0.5
                                                        continue 
                                                    w = w * w
                                                    x = w * x
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                if x > -1 / w:
                                                    revert with 0, 17
                                                if arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) and ext_call.return_data[0] > -1 / arg1 - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6):
                                                    revert with 0, 17
                                                if not w * x:
                                                    revert with 0, 18
                                                if (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x and 10^6 > -1 / (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x:
                                                    revert with 0, 17
                                                if not 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, 18
                                                require ext_code.size(collateralAddress)
                                                staticcall collateralAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args collateralReserveAddress
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] < unclaimed_pool_collateral:
                                                    revert with 0, 17
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v > ext_call.return_data[0] - unclaimed_pool_collateral:
                                                    revert with 0, '<collateralBalance'
                                                if arg3 > 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    revert with 0, '>> slippage than expected...'
                                                if arg2 > (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                                    revert with 0, '>> slippage than expected......'
                                                if 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v:
                                                    if redeem_collateral_balances[msg.sender] > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    redeem_collateral_balances[msg.sender] += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                                    if unclaimed_pool_collateral > !(10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v):
                                                        revert with 0, 17
                                                    unclaimed_pool_collateral += 10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6 / w * x / 10^6 * ext_call.return_data[0] / u * v
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t:
                                        if redeem_share_balances[msg.sender] > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        redeem_share_balances[msg.sender] += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if unclaimed_pool_share > !((10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t):
                                            revert with 0, 17
                                        unclaimed_pool_share += (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                    last_redeemed[address(msg.sender)] = block.timestamp
                                    require ext_code.size(dollarAddress)
                                    call dollarAddress.0xa8a778ae with:
                                         gas gas_remaining wei
                                        args msg.sender, arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t > 0:
                                        if not collateralReserveAddress:
                                            revert with 0, 'Invalid reserve address'
                                        require ext_code.size(shareAddress)
                                        call shareAddress.0xb4f56b26 with:
                                             gas gas_remaining wei
                                            args collateralReserveAddress, (10^6 * arg1) - (10^6 * (ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6) - (10^6 * (arg1 * ext_call.return_data[0]) - ((ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * arg1) / 10^6 * ext_call.return_data[0]) / 10^6) / 10^6 * ext_call.return_data[0] / s * t
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
    stor1 = 1
}



}
