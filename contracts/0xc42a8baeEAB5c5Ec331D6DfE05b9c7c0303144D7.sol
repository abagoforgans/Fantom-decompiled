contract main {




// =====================  Runtime code  =====================


#
#  - earn()
#
const controllerFeeUL = 300

const controllerFeeMax = 10000

const sub_39714714(?) = 10

const buyBackRateMax = 10000

const withdrawFeeFactorMax = 10000

const buyBackAddress = 57005

const sub_7c717c09(?) = 9500

const withdrawFeeFactorLL = 9950

const sub_a613a28a(?) = 10000

const buyBackRateUL = 800

const slippageFactorUL = 995

const entranceFeeFactorLL = 9950

const entranceFeeFactorMax = 10000


address owner;
uint256 stor1;
uint8 stor2;
uint8 stor2; offset 8
uint8 stor2; offset 16
address farmContractAddress; offset 24
uint256 pid;
address wantAddress;
address token0Address;
address token1Address;
address earnedAddress;
address uniRouterAddress;
address sub_cb971847Address;
uint256 sub_1b61e055;
address sub_7edd3da5Address;
uint32 stor12;
address sub_88f9e800Address;
uint256 stor12;
address sub_b3ed4599Address;
address govAddress;
uint256 lastEarnBlock;
uint256 wantLockedTotal;
uint256 sharesTotal;
uint256 controllerFee;
uint256 buyBackRate;
uint256 entranceFeeFactor;
uint256 sub_25c7ce6b;
uint256 withdrawFeeFactor;
uint256 slippageFactor;
array of address sub_67eed8e0;
array of address earnedToToken0Path;
array of address earnedToToken1Path;
array of address token0ToEarnedPath;
array of address token1ToEarnedPath;
array of address sub_6597b04f;
array of address sub_6b99e24b;
address poolAddress;
uint256 sub_c567dada;
uint256 sub_3ab24b3e;
uint256 borrowRate;
uint256 borrowRateMax;
uint256 borrowDepth;
uint256 sub_9a14ff17;

function token1ToEarnedPath(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < token1ToEarnedPath.length
    return token1ToEarnedPath[arg1]
}

function sub_0ddea8c3(?) payable {
    return bool(uint8(stor2.field_8))
}

function borrowRateMax() payable {
    return borrowRateMax
}

function lastEarnBlock() payable {
    return lastEarnBlock
}

function entranceFeeFactor() payable {
    return entranceFeeFactor
}

function poolAddress() payable {
    return poolAddress
}

function buyBackRate() payable {
    return buyBackRate
}

function sub_1b61e055(?) payable {
    return sub_1b61e055
}

function sub_25c7ce6b(?) payable {
    return sub_25c7ce6b
}

function sub_3ab24b3e(?) payable {
    return sub_3ab24b3e
}

function wantLockedTotal() payable {
    return wantLockedTotal
}

function sharesTotal() payable {
    return sharesTotal
}

function govAddress() payable {
    return govAddress
}

function paused() payable {
    return bool(uint8(stor2.field_0))
}

function sub_6597b04f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_6597b04f.length
    return sub_6597b04f[arg1]
}

function sub_67eed8e0(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_67eed8e0.length
    return sub_67eed8e0[arg1]
}

function withdrawFeeFactor() payable {
    return withdrawFeeFactor
}

function uniRouterAddress() payable {
    return uniRouterAddress
}

function sub_6b99e24b(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_6b99e24b.length
    return sub_6b99e24b[arg1]
}

function sub_7edd3da5(?) payable {
    return sub_7edd3da5Address
}

function token0Address() payable {
    return token0Address
}

function controllerFee() payable {
    return controllerFee
}

function sub_88f9e800(?) payable {
    return address(sub_88f9e800Address)
}

function owner() payable {
    return owner
}

function earnedToToken1Path(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < earnedToToken1Path.length
    return earnedToToken1Path[arg1]
}

function borrowDepth() payable {
    return borrowDepth
}

function sub_9a14ff17(?) payable {
    return sub_9a14ff17
}

function farmContractAddress() payable {
    return farmContractAddress
}

function sub_b3ed4599(?) payable {
    return sub_b3ed4599Address
}

function token0ToEarnedPath(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < token0ToEarnedPath.length
    return token0ToEarnedPath[arg1]
}

function sub_c567dada(?) payable {
    return sub_c567dada
}

function earnedToToken0Path(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < earnedToToken0Path.length
    return earnedToToken0Path[arg1]
}

function borrowRate() payable {
    return borrowRate
}

function sub_cb971847(?) payable {
    return sub_cb971847Address
}

function token1Address() payable {
    return token1Address
}

function isAutoComp() payable {
    return bool(uint8(stor2.field_16))
}

function earnedAddress() payable {
    return earnedAddress
}

function wantAddress() payable {
    return wantAddress
}

function pid() payable {
    return pid
}

function slippageFactor() payable {
    return slippageFactor
}

function _fallback() payable {
    revert
}

function convertDustToEarned() payable {
  stop
}

function setGov(address arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    govAddress = arg1
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function setBuybackRouterAddress(address arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    sub_cb971847Address = arg1
}

function pause() payable {
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if uint8(stor2.field_0):
        revert with 0, 'Pausable: paused'
    uint8(stor2.field_0) = 1
    emit Paused(msg.sender);
}

function setControllerFee(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 > 300:
        revert with 0, 'too high'
    controllerFee = arg1
}

function setbuyBackRate(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if buyBackRate > 800:
        revert with 0, 'too high'
    buyBackRate = arg1
}

function unpause() payable {
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if not uint8(stor2.field_0):
        revert with 0, 'Pausable: not paused'
    uint8(stor2.field_0) = 0
    emit Unpaused(msg.sender);
}

function setDepositFeeFactor(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 <= 9500:
        revert with 0, '!safe - too low'
    if arg1 > 10000:
        revert with 0, '!safe - too high'
    sub_25c7ce6b = arg1
}

function setEntranceFeeFactor(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 <= 9950:
        revert with 0, '!safe - too low'
    if arg1 > 10000:
        revert with 0, '!safe - too high'
    entranceFeeFactor = arg1
}

function setWithdrawFeeFactor(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 <= 9950:
        revert with 0, '!safe - too low'
    if arg1 > 10000:
        revert with 0, '!safe - too high'
    withdrawFeeFactor = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0xfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function updateBalances() payable {
    require ext_code.size(poolAddress)
    call poolAddress.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_c567dada = ext_call.return_data[0]
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
}

function inCaseTokensGetStuck(address arg1, uint256 arg2, address arg3) payable {
    require calldata.size - 4 >= 96
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 == earnedAddress:
        revert with 0, '!safe'
    if arg1 == wantAddress:
        revert with 0, '!safe'
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
    if ext_code.size(arg1) <= 0:
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg3) << 64, 0, Mask(224, 32, arg2) >> 32
    mem[324 len 0] = 0
    call arg1 with:
         gas gas_remaining wei
        args Mask(224, 32, arg2) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), address(arg3) << 64, 0, arg2
        if not unknown_0xa9059cbb(?????), address(arg3) << 64:
            revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function farm() payable {
    mem[64] = 96
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    mem[100] = this.address
    require ext_code.size(wantAddress)
    staticcall wantAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < sub_9a14ff17:
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(poolAddress)
        call poolAddress.mint(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(poolAddress)
        call poolAddress.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        sub_c567dada = ext_call.return_data[0]
        require ext_code.size(poolAddress)
        call poolAddress.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
    else:
        idx = 0
        s = mem[mem[64]]
        while idx < borrowDepth:
            require ext_code.size(poolAddress)
            call poolAddress.mint(uint256 arg1) with:
                 gas gas_remaining wei
                args s
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if not s:
                _59 = mem[64]
                mem[64] = mem[64] + 64
                mem[_59] = 26
                mem[_59 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(poolAddress)
                call poolAddress.borrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = idx + 1
                s = 0
                continue 
            require s
            if s * borrowRate / s != borrowRate:
                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _62 = mem[64]
            mem[64] = mem[64] + 64
            mem[_62] = 26
            mem[_62 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = s * borrowRate / 100
            require ext_code.size(poolAddress)
            call poolAddress.borrow(uint256 arg1) with:
                 gas gas_remaining wei
                args (s * borrowRate / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            idx = idx + 1
            s = s * borrowRate / 100
            continue 
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(poolAddress)
        call poolAddress.mint(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(poolAddress)
        call poolAddress.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        sub_c567dada = ext_call.return_data[0]
        require ext_code.size(poolAddress)
        call poolAddress.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    stor1 = 1
}

function rebalance(uint256 arg1, uint256 arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    if govAddress != msg.sender:
        revert with 0, 'Not authorised'
    if arg1 > borrowRateMax:
        revert with 0, '!rate'
    if arg2 > 10:
        revert with 0, '!depth'
    require ext_code.size(wantAddress)
    staticcall wantAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[100] = this.address
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    s = mem[mem[64]]
    t = ext_call.return_data[0]
    while t < s:
        require ext_code.size(poolAddress)
        if t <= 0:
            call poolAddress.borrowBalanceCurrent(address arg1) with:
                 gas gas_remaining wei
                args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                _235 = mem[64]
                mem[64] = mem[64] + 64
                mem[_235] = 26
                mem[_235 + 32] = 'SafeMath: division by zero'
                if borrowRate <= 0:
                    _239 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 26
                    idx = 0
                    while idx < 26:
                        mem[_239 + idx + 68] = mem[_235 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_239 + 68] = mem[_239 + 74 len 26]
                    revert with memory
                      from mem[64]
                       len _239 + -mem[64] + 100
                require borrowRate
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _277 = mem[64]
                mem[64] = mem[64] + 64
                mem[_277] = 30
                mem[_277 + 32] = 'SafeMath: subtraction overflow'
                if 0 / borrowRate > ext_call.return_data[0]:
                    _288 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 30
                    idx = 0
                    while idx < 30:
                        mem[_288 + idx + 68] = mem[_277 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_288 + 68] = mem[_288 + 70 len 30]
                    revert with memory
                      from mem[64]
                       len _288 + -mem[64] + 100
                require ext_code.size(poolAddress)
                call poolAddress.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (0 / borrowRate))
            else:
                require ext_call.return_data[0]
                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                _238 = mem[64]
                mem[64] = mem[64] + 64
                mem[_238] = 26
                mem[_238 + 32] = 'SafeMath: division by zero'
                if borrowRate <= 0:
                    _248 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 26
                    idx = 0
                    while idx < 26:
                        mem[_248 + idx + 68] = mem[_238 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_248 + 68] = mem[_248 + 74 len 26]
                    revert with memory
                      from mem[64]
                       len _248 + -mem[64] + 100
                require borrowRate
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _287 = mem[64]
                mem[64] = mem[64] + 64
                mem[_287] = 30
                mem[_287 + 32] = 'SafeMath: subtraction overflow'
                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                    _299 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 30
                    idx = 0
                    while idx < 30:
                        mem[_299 + idx + 68] = mem[_287 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_299 + 68] = mem[_299 + 70 len 30]
                    revert with memory
                      from mem[64]
                       len _299 + -mem[64] + 100
                require ext_code.size(poolAddress)
                call poolAddress.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
        else:
            call poolAddress.repayBorrow(uint256 arg1) with:
                 gas gas_remaining wei
                args t
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(poolAddress)
            call poolAddress.borrowBalanceCurrent(address arg1) with:
                 gas gas_remaining wei
                args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                _252 = mem[64]
                mem[64] = mem[64] + 64
                mem[_252] = 26
                mem[_252 + 32] = 'SafeMath: division by zero'
                if borrowRate <= 0:
                    _261 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 26
                    idx = 0
                    while idx < 26:
                        mem[_261 + idx + 68] = mem[_252 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_261 + 68] = mem[_261 + 74 len 26]
                    revert with memory
                      from mem[64]
                       len _261 + -mem[64] + 100
                require borrowRate
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _306 = mem[64]
                mem[64] = mem[64] + 64
                mem[_306] = 30
                mem[_306 + 32] = 'SafeMath: subtraction overflow'
                if 0 / borrowRate > ext_call.return_data[0]:
                    _317 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 30
                    idx = 0
                    while idx < 30:
                        mem[_317 + idx + 68] = mem[_306 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_317 + 68] = mem[_317 + 70 len 30]
                    revert with memory
                      from mem[64]
                       len _317 + -mem[64] + 100
                require ext_code.size(poolAddress)
                call poolAddress.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (0 / borrowRate))
            else:
                require ext_call.return_data[0]
                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                _260 = mem[64]
                mem[64] = mem[64] + 64
                mem[_260] = 26
                mem[_260 + 32] = 'SafeMath: division by zero'
                if borrowRate <= 0:
                    _272 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 26
                    idx = 0
                    while idx < 26:
                        mem[_272 + idx + 68] = mem[_260 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_272 + 68] = mem[_272 + 74 len 26]
                    revert with memory
                      from mem[64]
                       len _272 + -mem[64] + 100
                require borrowRate
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _316 = mem[64]
                mem[64] = mem[64] + 64
                mem[_316] = 30
                mem[_316 + 32] = 'SafeMath: subtraction overflow'
                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                    _329 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 30
                    idx = 0
                    while idx < 30:
                        mem[_329 + idx + 68] = mem[_316 + idx + 32]
                        idx = idx + 32
                        continue 
                    mem[_329 + 68] = mem[_329 + 70 len 30]
                    revert with memory
                      from mem[64]
                       len _329 + -mem[64] + 100
                require ext_code.size(poolAddress)
                call poolAddress.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[mem[64] + 4] = this.address
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        s = ext_call.return_data[0]
        t = ext_call.return_data[0]
        continue 
    require ext_code.size(poolAddress)
    call poolAddress.repayBorrow(uint256 arg1) with:
         gas gas_remaining wei
        args -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(poolAddress)
    staticcall poolAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(poolAddress)
    call poolAddress.redeem(uint256 arg1) with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(poolAddress)
    call poolAddress.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_c567dada = ext_call.return_data[0]
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    borrowRate = arg1
    borrowDepth = arg2
    require ext_code.size(wantAddress)
    staticcall wantAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] >= sub_9a14ff17:
        idx = 0
        s = mem[mem[64]]
        while idx < borrowDepth:
            require ext_code.size(poolAddress)
            call poolAddress.mint(uint256 arg1) with:
                 gas gas_remaining wei
                args s
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if not s:
                _445 = mem[64]
                mem[64] = mem[64] + 64
                mem[_445] = 26
                mem[_445 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(poolAddress)
                call poolAddress.borrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = idx + 1
                s = 0
                continue 
            require s
            if s * borrowRate / s != borrowRate:
                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _448 = mem[64]
            mem[64] = mem[64] + 64
            mem[_448] = 26
            mem[_448 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = s * borrowRate / 100
            require ext_code.size(poolAddress)
            call poolAddress.borrow(uint256 arg1) with:
                 gas gas_remaining wei
                args (s * borrowRate / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            idx = idx + 1
            s = s * borrowRate / 100
            continue 
    require ext_code.size(wantAddress)
    staticcall wantAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(poolAddress)
    call poolAddress.mint(uint256 arg1) with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(poolAddress)
    call poolAddress.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_c567dada = ext_call.return_data[0]
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
}

function deposit(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    if uint8(stor2.field_0):
        revert with 0, 'Pausable: paused'
    require ext_code.size(poolAddress)
    call poolAddress.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_c567dada = ext_call.return_data[0]
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    mem[132] = msg.sender
    mem[164] = this.address
    mem[196] = arg2
    mem[96] = 100
    mem[132 len 28] = Mask(224, 32, msg.sender) >> 32
    mem[128 len 4] = unknown_0x23b872dd(?????)
    mem[64] = 292
    mem[228] = 32
    mem[260] = 'SafeERC20: low-level call failed'
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
    if ext_code.size(wantAddress) <= 0:
        revert with 0, 'Address: call to non-contract'
    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
    mem[416 len 4] = 0
    mem[388 len 0] = 0
    call wantAddress with:
         gas gas_remaining wei
        args Mask(224, 32, arg2) << 480, mem[388 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 
                        32,
                        42,
                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                        mem[402 len 14],
                        0,
                        mem[420 len 4]
        if sub_25c7ce6b >= 10000:
            if wantLockedTotal <= 0:
                if sharesTotal + arg2 < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2
                mem[296] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[292] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6752 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6752] = 26
                            mem[_6752 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6908 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6908] = 26
                        mem[_6908 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return arg2
            if sharesTotal <= 0:
                if sharesTotal + arg2 < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2
                mem[296] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[292] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6753 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6753] = 26
                            mem[_6753 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6909 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6909] = 26
                        mem[_6909 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return arg2
            if not arg2:
                mem[292] = 26
                mem[324] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = 420
                mem[356] = 26
                mem[388] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[424] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[420] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6756 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6756] = 26
                            mem[_6756 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6912 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6912] = 26
                        mem[_6912 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2
            if arg2 * sharesTotal / arg2 != sharesTotal:
                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
            if not arg2 * sharesTotal:
                mem[292] = 26
                mem[324] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = 420
                mem[356] = 26
                mem[388] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[424] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[420] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6755 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6755] = 26
                            mem[_6755 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6911 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6911] = 26
                        mem[_6911 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2 * sharesTotal
            if arg2 * sharesTotal * entranceFeeFactor / arg2 * sharesTotal != entranceFeeFactor:
                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
            mem[292] = 26
            mem[324] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = 420
            mem[356] = 26
            mem[388] = 'SafeMath: division by zero'
            if sharesTotal + (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
            mem[424] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[420] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6754 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6754] = 26
                        mem[_6754 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6910 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6910] = 26
                    mem[_6910 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000)
        if not arg2:
            mem[64] = 356
            mem[292] = 26
            mem[324] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                if sharesTotal < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                mem[360] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[356] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6762 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6762] = 26
                            mem[_6762 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6918 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6918] = 26
                        mem[_6918 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return 0
            if sharesTotal <= 0:
                if sharesTotal < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                mem[360] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[356] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6763 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6763] = 26
                            mem[_6763 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6919 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6919] = 26
                        mem[_6919 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return 0
            mem[356] = 26
            mem[388] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = 484
            mem[420] = 26
            mem[452] = 'SafeMath: division by zero'
            if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += 0 / wantLockedTotal / 10000
            mem[488] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[484] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6764 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6764] = 26
                        mem[_6764 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6920 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6920] = 26
                    mem[_6920 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (0 / wantLockedTotal / 10000)
        require arg2
        if arg2 * sub_25c7ce6b / arg2 != sub_25c7ce6b:
            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
        mem[64] = 356
        mem[292] = 26
        mem[324] = 'SafeMath: division by zero'
        if wantLockedTotal <= 0:
            if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += arg2 * sub_25c7ce6b / 10000
            mem[360] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[356] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6757 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6757] = 26
                        mem[_6757 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6913 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6913] = 26
                    mem[_6913 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (arg2 * sub_25c7ce6b / 10000)
        if sharesTotal <= 0:
            if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += arg2 * sub_25c7ce6b / 10000
            mem[360] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[356] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6758 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6758] = 26
                        mem[_6758 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6914 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6914] = 26
                    mem[_6914 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (arg2 * sub_25c7ce6b / 10000)
        if not arg2 * sub_25c7ce6b / 10000:
            mem[356] = 26
            mem[388] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = 484
            mem[420] = 26
            mem[452] = 'SafeMath: division by zero'
            if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += 0 / wantLockedTotal / 10000
            mem[488] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[484] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6761 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6761] = 26
                        mem[_6761 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6917 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6917] = 26
                    mem[_6917 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (0 / wantLockedTotal / 10000)
        require arg2 * sub_25c7ce6b / 10000
        if arg2 * sub_25c7ce6b / 10000 * sharesTotal / arg2 * sub_25c7ce6b / 10000 != sharesTotal:
            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[457 len 31]
        if not arg2 * sub_25c7ce6b / 10000 * sharesTotal:
            mem[356] = 26
            mem[388] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = 484
            mem[420] = 26
            mem[452] = 'SafeMath: division by zero'
            if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += 0 / wantLockedTotal / 10000
            mem[488] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[484] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6760 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6760] = 26
                        mem[_6760 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6916 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6916] = 26
                    mem[_6916 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_3ab24b3e = ext_call.return_data[0]
            wantLockedTotal = sub_c567dada - sub_3ab24b3e
            stor1 = 1
            return (0 / wantLockedTotal / 10000)
        require arg2 * sub_25c7ce6b / 10000 * sharesTotal
        if arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / arg2 * sub_25c7ce6b / 10000 * sharesTotal != entranceFeeFactor:
            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[457 len 31]
        mem[356] = 26
        mem[388] = 'SafeMath: division by zero'
        if wantLockedTotal <= 0:
            revert with 0, 'SafeMath: division by zero'
        require wantLockedTotal
        mem[64] = 484
        mem[420] = 26
        mem[452] = 'SafeMath: division by zero'
        if sharesTotal + (arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
            revert with 0, 'SafeMath: addition overflow'
        sharesTotal += arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
        mem[488] = this.address
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[484] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < sub_9a14ff17:
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(poolAddress)
            call poolAddress.mint(uint256 arg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(poolAddress)
            call poolAddress.balanceOfUnderlying(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_c567dada = ext_call.return_data[0]
            require ext_code.size(poolAddress)
            call poolAddress.borrowBalanceCurrent(address arg1) with:
                 gas gas_remaining wei
                args this.address
        else:
            idx = 0
            s = mem[mem[64]]
            while idx < borrowDepth:
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args s
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if not s:
                    _6759 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6759] = 26
                    mem[_6759 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = 0
                    continue 
                require s
                if s * borrowRate / s != borrowRate:
                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                _6915 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6915] = 26
                mem[_6915 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = s * borrowRate / 100
                require ext_code.size(poolAddress)
                call poolAddress.borrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args (s * borrowRate / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = idx + 1
                s = s * borrowRate / 100
                continue 
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(poolAddress)
            call poolAddress.mint(uint256 arg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(poolAddress)
            call poolAddress.balanceOfUnderlying(address arg1) with:
                 gas gas_remaining wei
                args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            sub_c567dada = ext_call.return_data[0]
            require ext_code.size(poolAddress)
            call poolAddress.borrowBalanceCurrent(address arg1) with:
                 gas gas_remaining wei
                args address(this.address)
    else:
        mem[64] = ceil32(return_data.size) + 293
        mem[292] = return_data.size
        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size <= 0:
            if sub_25c7ce6b >= 10000:
                if wantLockedTotal <= 0:
                    if sharesTotal + arg2 < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += arg2
                    mem[ceil32(return_data.size) + 297] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 293] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6765 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6765] = 26
                                mem[_6765 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6921 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6921] = 26
                            mem[_6921 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return arg2
                if sharesTotal <= 0:
                    if sharesTotal + arg2 < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += arg2
                    mem[ceil32(return_data.size) + 297] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 293] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6766 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6766] = 26
                                mem[_6766 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6922 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6922] = 26
                            mem[_6922 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return arg2
                if not arg2:
                    mem[ceil32(return_data.size) + 293] = 26
                    mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                    if wantLockedTotal <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require wantLockedTotal
                    mem[64] = ceil32(return_data.size) + 421
                    mem[ceil32(return_data.size) + 357] = 26
                    mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                    if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += 0 / wantLockedTotal / 10000
                    mem[ceil32(return_data.size) + 425] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6769 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6769] = 26
                                mem[_6769 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6925 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6925] = 26
                            mem[_6925 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return (0 / wantLockedTotal / 10000)
                require arg2
                if arg2 * sharesTotal / arg2 != sharesTotal:
                    revert with 0, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 394 len 31]
                if not arg2 * sharesTotal:
                    mem[ceil32(return_data.size) + 293] = 26
                    mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                    if wantLockedTotal <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require wantLockedTotal
                    mem[64] = ceil32(return_data.size) + 421
                    mem[ceil32(return_data.size) + 357] = 26
                    mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                    if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += 0 / wantLockedTotal / 10000
                    mem[ceil32(return_data.size) + 425] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6768 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6768] = 26
                                mem[_6768 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6924 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6924] = 26
                            mem[_6924 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return (0 / wantLockedTotal / 10000)
                require arg2 * sharesTotal
                if arg2 * sharesTotal * entranceFeeFactor / arg2 * sharesTotal != entranceFeeFactor:
                    revert with 0, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 394 len 31]
                mem[ceil32(return_data.size) + 293] = 26
                mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 421
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if sharesTotal + (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 425] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6767 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6767] = 26
                            mem[_6767 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6923 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6923] = 26
                        mem[_6923 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000)
            if not arg2:
                mem[64] = ceil32(return_data.size) + 357
                mem[ceil32(return_data.size) + 293] = 26
                mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    if sharesTotal < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[ceil32(return_data.size) + 361] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6775 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6775] = 26
                                mem[_6775 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6931 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6931] = 26
                            mem[_6931 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return 0
                if sharesTotal <= 0:
                    if sharesTotal < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[ceil32(return_data.size) + 361] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6776 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6776] = 26
                                mem[_6776 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6932 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6932] = 26
                            mem[_6932 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return 0
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6777 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6777] = 26
                            mem[_6777 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6933 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6933] = 26
                        mem[_6933 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2
            if arg2 * sub_25c7ce6b / arg2 != sub_25c7ce6b:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 394 len 31]
            mem[64] = ceil32(return_data.size) + 357
            mem[ceil32(return_data.size) + 293] = 26
            mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sub_25c7ce6b / 10000
                mem[ceil32(return_data.size) + 361] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6770 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6770] = 26
                            mem[_6770 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6926 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6926] = 26
                        mem[_6926 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sub_25c7ce6b / 10000)
            if sharesTotal <= 0:
                if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sub_25c7ce6b / 10000
                mem[ceil32(return_data.size) + 361] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6771 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6771] = 26
                            mem[_6771 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6927 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6927] = 26
                        mem[_6927 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sub_25c7ce6b / 10000)
            if not arg2 * sub_25c7ce6b / 10000:
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6774 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6774] = 26
                            mem[_6774 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6930 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6930] = 26
                        mem[_6930 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2 * sub_25c7ce6b / 10000
            if arg2 * sub_25c7ce6b / 10000 * sharesTotal / arg2 * sub_25c7ce6b / 10000 != sharesTotal:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 458 len 31]
            if not arg2 * sub_25c7ce6b / 10000 * sharesTotal:
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6773 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6773] = 26
                            mem[_6773 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6929 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6929] = 26
                        mem[_6929 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2 * sub_25c7ce6b / 10000 * sharesTotal
            if arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / arg2 * sub_25c7ce6b / 10000 * sharesTotal != entranceFeeFactor:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 458 len 31]
            mem[ceil32(return_data.size) + 357] = 26
            mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = ceil32(return_data.size) + 485
            mem[ceil32(return_data.size) + 421] = 26
            mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
            if sharesTotal + (arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
            mem[ceil32(return_data.size) + 489] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6772 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6772] = 26
                        mem[_6772 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6928 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6928] = 26
                    mem[_6928 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
        else:
            require return_data.size >= 32
            if not mem[324]:
                revert with 0, 
                            32,
                            42,
                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 403 len 22]
            if sub_25c7ce6b >= 10000:
                if wantLockedTotal <= 0:
                    if sharesTotal + arg2 < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += arg2
                    mem[ceil32(return_data.size) + 297] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 293] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6778 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6778] = 26
                                mem[_6778 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6934 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6934] = 26
                            mem[_6934 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return arg2
                if sharesTotal <= 0:
                    if sharesTotal + arg2 < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += arg2
                    mem[ceil32(return_data.size) + 297] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 293] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6779 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6779] = 26
                                mem[_6779 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6935 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6935] = 26
                            mem[_6935 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return arg2
                if not arg2:
                    mem[ceil32(return_data.size) + 293] = 26
                    mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                    if wantLockedTotal <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require wantLockedTotal
                    mem[64] = ceil32(return_data.size) + 421
                    mem[ceil32(return_data.size) + 357] = 26
                    mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                    if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += 0 / wantLockedTotal / 10000
                    mem[ceil32(return_data.size) + 425] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6782 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6782] = 26
                                mem[_6782 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6938 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6938] = 26
                            mem[_6938 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return (0 / wantLockedTotal / 10000)
                require arg2
                if arg2 * sharesTotal / arg2 != sharesTotal:
                    revert with 0, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 394 len 31]
                if not arg2 * sharesTotal:
                    mem[ceil32(return_data.size) + 293] = 26
                    mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                    if wantLockedTotal <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require wantLockedTotal
                    mem[64] = ceil32(return_data.size) + 421
                    mem[ceil32(return_data.size) + 357] = 26
                    mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                    if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    sharesTotal += 0 / wantLockedTotal / 10000
                    mem[ceil32(return_data.size) + 425] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6781 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6781] = 26
                                mem[_6781 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6937 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6937] = 26
                            mem[_6937 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return (0 / wantLockedTotal / 10000)
                require arg2 * sharesTotal
                if arg2 * sharesTotal * entranceFeeFactor / arg2 * sharesTotal != entranceFeeFactor:
                    revert with 0, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 394 len 31]
                mem[ceil32(return_data.size) + 293] = 26
                mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 421
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if sharesTotal + (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 425] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 421] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6780 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6780] = 26
                            mem[_6780 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6936 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6936] = 26
                        mem[_6936 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000)
            if not arg2:
                mem[64] = ceil32(return_data.size) + 357
                mem[ceil32(return_data.size) + 293] = 26
                mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    if sharesTotal < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[ceil32(return_data.size) + 361] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6788 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6788] = 26
                                mem[_6788 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6944 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6944] = 26
                            mem[_6944 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return 0
                if sharesTotal <= 0:
                    if sharesTotal < sharesTotal:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[ceil32(return_data.size) + 361] = this.address
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < sub_9a14ff17:
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                    else:
                        idx = 0
                        s = mem[mem[64]]
                        while idx < borrowDepth:
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args s
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not s:
                                _6789 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_6789] = 26
                                mem[_6789 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = 0
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = 0
                                continue 
                            require s
                            if s * borrowRate / s != borrowRate:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _6945 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6945] = 26
                            mem[_6945 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = s * borrowRate / 100
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (s * borrowRate / 100)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = s * borrowRate / 100
                            continue 
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(poolAddress)
                        call poolAddress.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        sub_c567dada = ext_call.return_data[0]
                        require ext_code.size(poolAddress)
                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_3ab24b3e = ext_call.return_data[0]
                    wantLockedTotal = sub_c567dada - sub_3ab24b3e
                    stor1 = 1
                    return 0
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6790 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6790] = 26
                            mem[_6790 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6946 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6946] = 26
                        mem[_6946 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2
            if arg2 * sub_25c7ce6b / arg2 != sub_25c7ce6b:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 394 len 31]
            mem[64] = ceil32(return_data.size) + 357
            mem[ceil32(return_data.size) + 293] = 26
            mem[ceil32(return_data.size) + 325] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sub_25c7ce6b / 10000
                mem[ceil32(return_data.size) + 361] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6783 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6783] = 26
                            mem[_6783 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6939 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6939] = 26
                        mem[_6939 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sub_25c7ce6b / 10000)
            if sharesTotal <= 0:
                if sharesTotal + (arg2 * sub_25c7ce6b / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += arg2 * sub_25c7ce6b / 10000
                mem[ceil32(return_data.size) + 361] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 357] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6784 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6784] = 26
                            mem[_6784 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6940 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6940] = 26
                        mem[_6940 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sub_25c7ce6b / 10000)
            if not arg2 * sub_25c7ce6b / 10000:
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6787 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6787] = 26
                            mem[_6787 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6943 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6943] = 26
                        mem[_6943 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2 * sub_25c7ce6b / 10000
            if arg2 * sub_25c7ce6b / 10000 * sharesTotal / arg2 * sub_25c7ce6b / 10000 != sharesTotal:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 458 len 31]
            if not arg2 * sub_25c7ce6b / 10000 * sharesTotal:
                mem[ceil32(return_data.size) + 357] = 26
                mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
                if wantLockedTotal <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require wantLockedTotal
                mem[64] = ceil32(return_data.size) + 485
                mem[ceil32(return_data.size) + 421] = 26
                mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
                if sharesTotal + (0 / wantLockedTotal / 10000) < sharesTotal:
                    revert with 0, 'SafeMath: addition overflow'
                sharesTotal += 0 / wantLockedTotal / 10000
                mem[ceil32(return_data.size) + 489] = this.address
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < sub_9a14ff17:
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                else:
                    idx = 0
                    s = mem[mem[64]]
                    while idx < borrowDepth:
                        require ext_code.size(poolAddress)
                        call poolAddress.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if not s:
                            _6786 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6786] = 26
                            mem[_6786 + 32] = 'SafeMath: division by zero'
                            mem[mem[64] + 4] = 0
                            require ext_code.size(poolAddress)
                            call poolAddress.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        require s
                        if s * borrowRate / s != borrowRate:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _6942 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6942] = 26
                        mem[_6942 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = s * borrowRate / 100
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (s * borrowRate / 100)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = s * borrowRate / 100
                        continue 
                    require ext_code.size(wantAddress)
                    staticcall wantAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    sub_c567dada = ext_call.return_data[0]
                    require ext_code.size(poolAddress)
                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / wantLockedTotal / 10000)
            require arg2 * sub_25c7ce6b / 10000 * sharesTotal
            if arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / arg2 * sub_25c7ce6b / 10000 * sharesTotal != entranceFeeFactor:
                revert with 0, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[ceil32(return_data.size) + 458 len 31]
            mem[ceil32(return_data.size) + 357] = 26
            mem[ceil32(return_data.size) + 389] = 'SafeMath: division by zero'
            if wantLockedTotal <= 0:
                revert with 0, 'SafeMath: division by zero'
            require wantLockedTotal
            mem[64] = ceil32(return_data.size) + 485
            mem[ceil32(return_data.size) + 421] = 26
            mem[ceil32(return_data.size) + 453] = 'SafeMath: division by zero'
            if sharesTotal + (arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000) < sharesTotal:
                revert with 0, 'SafeMath: addition overflow'
            sharesTotal += arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000
            mem[ceil32(return_data.size) + 489] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[ceil32(return_data.size) + 485] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < sub_9a14ff17:
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
            else:
                idx = 0
                s = mem[mem[64]]
                while idx < borrowDepth:
                    require ext_code.size(poolAddress)
                    call poolAddress.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if not s:
                        _6785 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6785] = 26
                        mem[_6785 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(poolAddress)
                        call poolAddress.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    require s
                    if s * borrowRate / s != borrowRate:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _6941 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6941] = 26
                    mem[_6941 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = s * borrowRate / 100
                    require ext_code.size(poolAddress)
                    call poolAddress.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (s * borrowRate / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = s * borrowRate / 100
                    continue 
                require ext_code.size(wantAddress)
                staticcall wantAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.mint(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(poolAddress)
                call poolAddress.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_c567dada = ext_call.return_data[0]
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    stor1 = 1
    return (arg2 * sub_25c7ce6b / 10000 * sharesTotal * entranceFeeFactor / wantLockedTotal / 10000)
}

function withdraw(address arg1, uint256 arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    if arg2 <= 0:
        revert with 0, '_wantAmt <= 0'
    require ext_code.size(poolAddress)
    call poolAddress.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_c567dada = ext_call.return_data[0]
    require ext_code.size(poolAddress)
    call poolAddress.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    if not arg2:
        require ext_code.size(farmContractAddress)
        call farmContractAddress.claimComp(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not arg2:
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            mem[160] = 30
            mem[192] = 'SafeMath: subtraction overflow'
            if 0 / ext_call.return_data[0] <= sharesTotal:
                sharesTotal -= 0 / ext_call.return_data[0]
                if arg2 <= ext_call.return_data[0]:
                    if withdrawFeeFactor >= 10000:
                        mem[260] = address(sub_88f9e800Address)
                        mem[292] = arg2
                        mem[224] = 68
                        mem[260 len 28] = Mask(224, 0, stor12)
                        mem[256 len 4] = unknown_0xa9059cbb(?????)
                        mem[324] = 32
                        mem[356] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2) >> 32
                        mem[480 len 4] = 0
                        mem[452 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, arg2) << 224, mem[452 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 389
                        mem[388] = return_data.size
                        mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25299 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25299] = 26
                                        mem[_25299 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25827 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25827] = 26
                                    mem[_25827 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[420]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 499 len 22]
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25300 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25300] = 26
                                        mem[_25300 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25828 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25828] = 26
                                    mem[_25828 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        if not arg2:
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = 0
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                            mem[544 len 4] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args 0, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25307 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25307] = 26
                                            mem[_25307 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25835 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25835] = 26
                                        mem[_25835 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25308 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25308] = 26
                                            mem[_25308 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25836 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25836] = 26
                                        mem[_25836 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            require arg2
                            if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = arg2 * withdrawFeeFactor / 10000
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2 * withdrawFeeFactor / 10000) >> 32
                            mem[544 len 4] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(224, 32, arg2 * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25303 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25303] = 26
                                            mem[_25303 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25831 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25831] = 26
                                        mem[_25831 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25304 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25304] = 26
                                            mem[_25304 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25832 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25832] = 26
                                        mem[_25832 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                else:
                    if withdrawFeeFactor >= 10000:
                        mem[260] = address(sub_88f9e800Address)
                        mem[292] = ext_call.return_data[0]
                        mem[224] = 68
                        mem[260 len 28] = Mask(224, 0, stor12)
                        mem[256 len 4] = unknown_0xa9059cbb(?????)
                        mem[324] = 32
                        mem[356] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), ext_call.return_data[0 len 28]
                        mem[480 len 4] = 0
                        mem[452 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[452 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 389
                        mem[388] = return_data.size
                        mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25311 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25311] = 26
                                        mem[_25311 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25839 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25839] = 26
                                    mem[_25839 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[420]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 499 len 22]
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25312 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25312] = 26
                                        mem[_25312 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25840 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25840] = 26
                                    mem[_25840 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        if not ext_call.return_data[0]:
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = 0
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                            mem[544 len 4] = 0
                            mem[516 len 0] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(480, -256, unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0) << 256, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25319 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25319] = 26
                                            mem[_25319 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25847 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25847] = 26
                                        mem[_25847 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25320 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25320] = 26
                                            mem[_25320 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25848 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25848] = 26
                                        mem[_25848 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            require ext_call.return_data[0]
                            if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) >> 32
                            mem[544 len 4] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25315 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25315] = 26
                                            mem[_25315 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25843 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25843] = 26
                                        mem[_25843 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25316 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25316] = 26
                                            mem[_25316 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25844 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25844] = 26
                                        mem[_25844 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / ext_call.return_data[0])
            if sharesTotal > sharesTotal:
                revert with 0, 'SafeMath: subtraction overflow'
            sharesTotal = 0
            if arg2 > ext_call.return_data[0]:
                if withdrawFeeFactor >= 10000:
                    mem[260] = address(sub_88f9e800Address)
                    mem[292] = ext_call.return_data[0]
                    mem[224] = 68
                    mem[260 len 28] = Mask(224, 0, stor12)
                    mem[256 len 4] = unknown_0xa9059cbb(?????)
                    mem[324] = 32
                    mem[356] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), ext_call.return_data[0 len 28]
                    mem[480 len 4] = 0
                    call wantAddress with:
                       funct uint32(stor12)
                         gas gas_remaining wei
                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[452 len 4]
                    if not return_data.size:
                        require not ext_call.success
                        revert with 'SafeMath: division by zero'
                    mem[64] = ceil32(return_data.size) + 389
                    mem[388] = return_data.size
                    mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25335 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25335] = 26
                                    mem[_25335 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25863 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25863] = 26
                                mem[_25863 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                    else:
                        require return_data.size >= 32
                        if not mem[420]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 499 len 22]
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25336 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25336] = 26
                                    mem[_25336 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25864 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25864] = 26
                                mem[_25864 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                else:
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = 0
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                        mem[544 len 4] = 0
                        mem[516 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(480, -256, unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0) << 256, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25343 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25343] = 26
                                        mem[_25343 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25871 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25871] = 26
                                    mem[_25871 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25344 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25344] = 26
                                        mem[_25344 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25872 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25872] = 26
                                    mem[_25872 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        require ext_call.return_data[0]
                        if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) >> 32
                        mem[544 len 4] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25339 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25339] = 26
                                        mem[_25339 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25867 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25867] = 26
                                    mem[_25867 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25340 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25340] = 26
                                        mem[_25340 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25868 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25868] = 26
                                    mem[_25868 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
            else:
                if withdrawFeeFactor >= 10000:
                    mem[260] = address(sub_88f9e800Address)
                    mem[292] = arg2
                    mem[224] = 68
                    mem[260 len 28] = Mask(224, 0, stor12)
                    mem[256 len 4] = unknown_0xa9059cbb(?????)
                    mem[324] = 32
                    mem[356] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2) >> 32
                    mem[480 len 4] = 0
                    mem[452 len 0] = 0
                    call wantAddress with:
                       funct uint32(stor12)
                         gas gas_remaining wei
                        args Mask(224, 32, arg2) << 224, mem[452 len 4]
                    if not return_data.size:
                        require not ext_call.success
                        revert with 'SafeMath: division by zero'
                    mem[64] = ceil32(return_data.size) + 389
                    mem[388] = return_data.size
                    mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25323 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25323] = 26
                                    mem[_25323 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25851 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25851] = 26
                                mem[_25851 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                    else:
                        require return_data.size >= 32
                        if not mem[420]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 499 len 22]
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25324 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25324] = 26
                                    mem[_25324 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25852 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25852] = 26
                                mem[_25852 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                else:
                    if not arg2:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = 0
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                        mem[544 len 4] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args 0, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25331 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25331] = 26
                                        mem[_25331 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25859 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25859] = 26
                                    mem[_25859 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25332 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25332] = 26
                                        mem[_25332 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25860 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25860] = 26
                                    mem[_25860 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        require arg2
                        if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = arg2 * withdrawFeeFactor / 10000
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2 * withdrawFeeFactor / 10000) >> 32
                        mem[544 len 4] = 0
                        mem[516 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, arg2 * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25327 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25327] = 26
                                        mem[_25327 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25855 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25855] = 26
                                    mem[_25855 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25328 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25328] = 26
                                        mem[_25328 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25856 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25856] = 26
                                    mem[_25856 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
        else:
            require arg2
            if arg2 * sharesTotal / arg2 != sharesTotal:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            mem[160] = 30
            mem[192] = 'SafeMath: subtraction overflow'
            if arg2 * sharesTotal / ext_call.return_data[0] <= sharesTotal:
                sharesTotal -= arg2 * sharesTotal / ext_call.return_data[0]
                if arg2 <= ext_call.return_data[0]:
                    if withdrawFeeFactor >= 10000:
                        mem[260] = address(sub_88f9e800Address)
                        mem[292] = arg2
                        mem[224] = 68
                        mem[260 len 28] = Mask(224, 0, stor12)
                        mem[256 len 4] = unknown_0xa9059cbb(?????)
                        mem[324] = 32
                        mem[356] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2) >> 32
                        mem[480 len 4] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, arg2) << 224, mem[452 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 389
                        mem[388] = return_data.size
                        mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25251 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25251] = 26
                                        mem[_25251 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25779 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25779] = 26
                                    mem[_25779 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[420]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 499 len 22]
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25252 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25252] = 26
                                        mem[_25252 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25780 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25780] = 26
                                    mem[_25780 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        if not arg2:
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = 0
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                            mem[544 len 4] = 0
                            mem[516 len 0] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(480, -256, unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0) << 256, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25259 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25259] = 26
                                            mem[_25259 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25787 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25787] = 26
                                        mem[_25787 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25260 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25260] = 26
                                            mem[_25260 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25788 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25788] = 26
                                        mem[_25788 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            require arg2
                            if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = arg2 * withdrawFeeFactor / 10000
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2 * withdrawFeeFactor / 10000) >> 32
                            mem[544 len 4] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(224, 32, arg2 * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25255 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25255] = 26
                                            mem[_25255 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25783 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25783] = 26
                                        mem[_25783 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25256 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25256] = 26
                                            mem[_25256 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25784 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25784] = 26
                                        mem[_25784 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                else:
                    if withdrawFeeFactor >= 10000:
                        mem[260] = address(sub_88f9e800Address)
                        mem[292] = ext_call.return_data[0]
                        mem[224] = 68
                        mem[260 len 28] = Mask(224, 0, stor12)
                        mem[256 len 4] = unknown_0xa9059cbb(?????)
                        mem[324] = 32
                        mem[356] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), ext_call.return_data[0 len 28]
                        mem[480 len 4] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[452 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 389
                        mem[388] = return_data.size
                        mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25263 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25263] = 26
                                        mem[_25263 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25791 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25791] = 26
                                    mem[_25791 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[420]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 499 len 22]
                            mem[ceil32(return_data.size) + 393] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25264 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25264] = 26
                                        mem[_25264 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25792 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25792] = 26
                                    mem[_25792 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        if not ext_call.return_data[0]:
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = 0
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                            mem[544 len 4] = 0
                            mem[516 len 0] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(480, -256, unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0) << 256, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25271 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25271] = 26
                                            mem[_25271 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25799 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25799] = 26
                                        mem[_25799 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25272 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25272] = 26
                                            mem[_25272 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25800 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25800] = 26
                                        mem[_25800 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            require ext_call.return_data[0]
                            if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            mem[224] = 26
                            mem[256] = 'SafeMath: division by zero'
                            mem[324] = address(sub_88f9e800Address)
                            mem[356] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                            mem[288] = 68
                            mem[324 len 28] = Mask(224, 0, stor12)
                            mem[320 len 4] = unknown_0xa9059cbb(?????)
                            mem[388] = 32
                            mem[420] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) >> 32
                            mem[544 len 4] = 0
                            mem[516 len 0] = 0
                            call wantAddress with:
                               funct uint32(stor12)
                                 gas gas_remaining wei
                                args Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                            if not return_data.size:
                                require not ext_call.success
                                revert with 'SafeMath: division by zero'
                            mem[64] = ceil32(return_data.size) + 453
                            mem[452] = return_data.size
                            mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25267 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25267] = 26
                                            mem[_25267 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25795 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25795] = 26
                                        mem[_25795 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[484]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 563 len 22]
                                mem[ceil32(return_data.size) + 457] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _25268 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25268] = 26
                                            mem[_25268 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _25796 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25796] = 26
                                        mem[_25796 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sharesTotal / ext_call.return_data[0])
            if sharesTotal > sharesTotal:
                revert with 0, 'SafeMath: subtraction overflow'
            sharesTotal = 0
            if arg2 <= ext_call.return_data[0]:
                if withdrawFeeFactor >= 10000:
                    mem[260] = address(sub_88f9e800Address)
                    mem[292] = arg2
                    mem[224] = 68
                    mem[260 len 28] = Mask(224, 0, stor12)
                    mem[256 len 4] = unknown_0xa9059cbb(?????)
                    mem[324] = 32
                    mem[356] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2) >> 32
                    mem[480 len 4] = 0
                    mem[452 len 0] = 0
                    call wantAddress with:
                       funct uint32(stor12)
                         gas gas_remaining wei
                        args Mask(224, 32, arg2) << 224, mem[452 len 4]
                    if not return_data.size:
                        require not ext_call.success
                        revert with 'SafeMath: division by zero'
                    mem[64] = ceil32(return_data.size) + 389
                    mem[388] = return_data.size
                    mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25275 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25275] = 26
                                    mem[_25275 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25803 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25803] = 26
                                mem[_25803 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                    else:
                        require return_data.size >= 32
                        if not mem[420]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 499 len 22]
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25276 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25276] = 26
                                    mem[_25276 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25804 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25804] = 26
                                mem[_25804 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                else:
                    if not arg2:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = 0
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                        mem[544 len 4] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args 0, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25283 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25283] = 26
                                        mem[_25283 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25811 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25811] = 26
                                    mem[_25811 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25284 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25284] = 26
                                        mem[_25284 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25812 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25812] = 26
                                    mem[_25812 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        require arg2
                        if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = arg2 * withdrawFeeFactor / 10000
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, arg2 * withdrawFeeFactor / 10000) >> 32
                        mem[544 len 4] = 0
                        mem[516 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, arg2 * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25279 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25279] = 26
                                        mem[_25279 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25807 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25807] = 26
                                    mem[_25807 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25280 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25280] = 26
                                        mem[_25280 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25808 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25808] = 26
                                    mem[_25808 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
            else:
                if withdrawFeeFactor >= 10000:
                    mem[260] = address(sub_88f9e800Address)
                    mem[292] = ext_call.return_data[0]
                    mem[224] = 68
                    mem[260 len 28] = Mask(224, 0, stor12)
                    mem[256 len 4] = unknown_0xa9059cbb(?????)
                    mem[324] = 32
                    mem[356] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[494 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[388 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), ext_call.return_data[0 len 28]
                    mem[480 len 4] = 0
                    call wantAddress with:
                       funct uint32(stor12)
                         gas gas_remaining wei
                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[452 len 4]
                    if not return_data.size:
                        require not ext_call.success
                        revert with 'SafeMath: division by zero'
                    mem[64] = ceil32(return_data.size) + 389
                    mem[388] = return_data.size
                    mem[420 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25287 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25287] = 26
                                    mem[_25287 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25815 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25815] = 26
                                mem[_25815 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                    else:
                        require return_data.size >= 32
                        if not mem[420]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 499 len 22]
                        mem[ceil32(return_data.size) + 393] = this.address
                        require ext_code.size(wantAddress)
                        staticcall wantAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 389] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < sub_9a14ff17:
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                        else:
                            idx = 0
                            s = mem[mem[64]]
                            while idx < borrowDepth:
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not s:
                                    _25288 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25288] = 26
                                    mem[_25288 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = 0
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                require s
                                if s * borrowRate / s != borrowRate:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                _25816 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_25816] = 26
                                mem[_25816 + 32] = 'SafeMath: division by zero'
                                mem[mem[64] + 4] = s * borrowRate / 100
                                require ext_code.size(poolAddress)
                                call poolAddress.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (s * borrowRate / 100)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = s * borrowRate / 100
                                continue 
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(poolAddress)
                            call poolAddress.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require ext_code.size(poolAddress)
                            call poolAddress.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            sub_c567dada = ext_call.return_data[0]
                            require ext_code.size(poolAddress)
                            call poolAddress.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args address(this.address)
                else:
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = 0
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0
                        mem[544 len 4] = 0
                        mem[516 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(480, -256, unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), 0) << 256, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25295 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25295] = 26
                                        mem[_25295 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25823 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25823] = 26
                                    mem[_25823 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25296 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25296] = 26
                                        mem[_25296 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25824 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25824] = 26
                                    mem[_25824 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        require ext_call.return_data[0]
                        if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        mem[324] = address(sub_88f9e800Address)
                        mem[356] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                        mem[288] = 68
                        mem[324 len 28] = Mask(224, 0, stor12)
                        mem[320 len 4] = unknown_0xa9059cbb(?????)
                        mem[388] = 32
                        mem[420] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[558 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[452 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor12), uint32(stor12), Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) >> 32
                        mem[544 len 4] = 0
                        mem[516 len 0] = 0
                        call wantAddress with:
                           funct uint32(stor12)
                             gas gas_remaining wei
                            args Mask(224, 32, ext_call.return_data[0] * withdrawFeeFactor / 10000) << 224, mem[516 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 'SafeMath: division by zero'
                        mem[64] = ceil32(return_data.size) + 453
                        mem[452] = return_data.size
                        mem[484 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25291 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25291] = 26
                                        mem[_25291 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25819 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25819] = 26
                                    mem[_25819 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[484]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 563 len 22]
                            mem[ceil32(return_data.size) + 457] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 453] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _25292 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25292] = 26
                                        mem[_25292 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _25820 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_25820] = 26
                                    mem[_25820 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
    else:
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[100] = this.address
        require ext_code.size(poolAddress)
        call poolAddress.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        s = mem[mem[64]]
        t = ext_call.return_data[0]
        while t < s:
            require ext_code.size(poolAddress)
            if t <= 0:
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    _12575 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12575] = 26
                    mem[_12575 + 32] = 'SafeMath: division by zero'
                    if borrowRate <= 0:
                        _12723 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 26
                        idx = 0
                        while idx < 26:
                            mem[_12723 + idx + 68] = mem[_12575 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_12723 + 68] = mem[_12723 + 74 len 26]
                        revert with memory
                          from mem[64]
                           len _12723 + -mem[64] + 100
                    require borrowRate
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _13193 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_13193] = 30
                    mem[_13193 + 32] = 'SafeMath: subtraction overflow'
                    if 0 / borrowRate > ext_call.return_data[0]:
                        _13444 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 30
                        idx = 0
                        while idx < 30:
                            mem[_13444 + idx + 68] = mem[_13193 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_13444 + 68] = mem[_13444 + 70 len 30]
                        revert with memory
                          from mem[64]
                           len _13444 + -mem[64] + 100
                    require ext_code.size(poolAddress)
                    call poolAddress.redeemUnderlying(uint256 arg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] - (0 / borrowRate))
                else:
                    require ext_call.return_data[0]
                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _12722 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12722] = 26
                    mem[_12722 + 32] = 'SafeMath: division by zero'
                    if borrowRate <= 0:
                        _12924 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 26
                        idx = 0
                        while idx < 26:
                            mem[_12924 + idx + 68] = mem[_12722 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_12924 + 68] = mem[_12924 + 74 len 26]
                        revert with memory
                          from mem[64]
                           len _12924 + -mem[64] + 100
                    require borrowRate
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _13443 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_13443] = 30
                    mem[_13443 + 32] = 'SafeMath: subtraction overflow'
                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                        _13840 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 30
                        idx = 0
                        while idx < 30:
                            mem[_13840 + idx + 68] = mem[_13443 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_13840 + 68] = mem[_13840 + 70 len 30]
                        revert with memory
                          from mem[64]
                           len _13840 + -mem[64] + 100
                    require ext_code.size(poolAddress)
                    call poolAddress.redeemUnderlying(uint256 arg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
            else:
                call poolAddress.repayBorrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args t
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(poolAddress)
                call poolAddress.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    _12928 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12928] = 26
                    mem[_12928 + 32] = 'SafeMath: division by zero'
                    if borrowRate <= 0:
                        _12985 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 26
                        idx = 0
                        while idx < 26:
                            mem[_12985 + idx + 68] = mem[_12928 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_12985 + 68] = mem[_12985 + 74 len 26]
                        revert with memory
                          from mem[64]
                           len _12985 + -mem[64] + 100
                    require borrowRate
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _13847 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_13847] = 30
                    mem[_13847 + 32] = 'SafeMath: subtraction overflow'
                    if 0 / borrowRate > ext_call.return_data[0]:
                        _14049 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 30
                        idx = 0
                        while idx < 30:
                            mem[_14049 + idx + 68] = mem[_13847 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_14049 + 68] = mem[_14049 + 70 len 30]
                        revert with memory
                          from mem[64]
                           len _14049 + -mem[64] + 100
                    require ext_code.size(poolAddress)
                    call poolAddress.redeemUnderlying(uint256 arg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] - (0 / borrowRate))
                else:
                    require ext_call.return_data[0]
                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    _12984 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12984] = 26
                    mem[_12984 + 32] = 'SafeMath: division by zero'
                    if borrowRate <= 0:
                        _13140 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 26
                        idx = 0
                        while idx < 26:
                            mem[_13140 + idx + 68] = mem[_12984 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_13140 + 68] = mem[_13140 + 74 len 26]
                        revert with memory
                          from mem[64]
                           len _13140 + -mem[64] + 100
                    require borrowRate
                    require ext_code.size(poolAddress)
                    call poolAddress.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _14048 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_14048] = 30
                    mem[_14048 + 32] = 'SafeMath: subtraction overflow'
                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                        _14637 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 30
                        idx = 0
                        while idx < 30:
                            mem[_14637 + idx + 68] = mem[_14048 + idx + 32]
                            idx = idx + 32
                            continue 
                        mem[_14637 + 68] = mem[_14637 + 70 len 30]
                        revert with memory
                          from mem[64]
                           len _14637 + -mem[64] + 100
                    require ext_code.size(poolAddress)
                    call poolAddress.redeemUnderlying(uint256 arg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            mem[mem[64] + 4] = this.address
            require ext_code.size(wantAddress)
            staticcall wantAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            s = ext_call.return_data[0]
            t = ext_call.return_data[0]
            continue 
        require ext_code.size(poolAddress)
        call poolAddress.repayBorrow(uint256 arg1) with:
             gas gas_remaining wei
            args -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(poolAddress)
        staticcall poolAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(poolAddress)
        call poolAddress.redeem(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(poolAddress)
        call poolAddress.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        sub_c567dada = ext_call.return_data[0]
        require ext_code.size(poolAddress)
        call poolAddress.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        sub_3ab24b3e = ext_call.return_data[0]
        wantLockedTotal = sub_c567dada - sub_3ab24b3e
        require ext_code.size(wantAddress)
        staticcall wantAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not arg2:
            _14787 = mem[64]
            mem[64] = mem[64] + 64
            mem[_14787] = 26
            mem[_14787 + 32] = 'SafeMath: division by zero'
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if 0 / ext_call.return_data[0] <= sharesTotal:
                _16845 = mem[64]
                mem[64] = mem[64] + 64
                mem[_16845] = 30
                mem[_16845 + 32] = 'SafeMath: subtraction overflow'
                sharesTotal -= 0 / ext_call.return_data[0]
                if arg2 <= ext_call.return_data[0]:
                    if withdrawFeeFactor >= 10000:
                        _17773 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = arg2
                        _17774 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17773 + 100] = 32
                        mem[_17773 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17773 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _17848 = mem[_17774]
                        mem[_17773 + 164 len floor32(mem[_17774])] = mem[_17774 + 32 len floor32(mem[_17774])]
                        mem[_17773 + floor32(mem[_17774]) + -(mem[_17774] % 32) + 196 len mem[_17774] % 32] = mem[_17774 + floor32(mem[_17774]) + -(mem[_17774] % 32) + 64 len mem[_17774] % 32]
                        call wantAddress with:
                             gas gas_remaining wei
                            args mem[_17773 + 168 len _17848 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17773 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17773 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33553 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33553] = 26
                                            mem[_33553 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33841 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33841] = 26
                                        mem[_33841 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17773 + 274 len 22]
                                mem[_17773 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17773 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33554] = 26
                                            mem[_33554 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33842 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33842] = 26
                                        mem[_33842 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17773 + ceil32(return_data.size) + 165
                            mem[_17773 + 164] = return_data.size
                            mem[_17773 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17773 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17773 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33555 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33555] = 26
                                            mem[_33555 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33843 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33843] = 26
                                        mem[_33843 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17773 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17773 + ceil32(return_data.size) + 275 len 22]
                                mem[_17773 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17773 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33556 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33556] = 26
                                            mem[_33556 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33844 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33844] = 26
                                        mem[_33844 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        if not arg2:
                            _17812 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17812] = 26
                            mem[_17812 + 32] = 'SafeMath: division by zero'
                            _17906 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = 0
                            _17907 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17906 + 100] = 32
                            mem[_17906 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17906 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18108 = mem[_17907]
                            mem[_17906 + 164 len floor32(mem[_17907])] = mem[_17907 + 32 len floor32(mem[_17907])]
                            mem[_17906 + floor32(mem[_17907]) + -(mem[_17907] % 32) + 196 len mem[_17907] % 32] = mem[_17907 + floor32(mem[_17907]) + -(mem[_17907] % 32) + 64 len mem[_17907] % 32]
                            call wantAddress with:
                                 gas gas_remaining wei
                                args mem[_17906 + 168 len _18108 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17906 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17906 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33561 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33561] = 26
                                                mem[_33561 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33849 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33849] = 26
                                            mem[_33849 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17906 + 274 len 22]
                                    mem[_17906 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17906 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33562 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33562] = 26
                                                mem[_33562 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33850 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33850] = 26
                                            mem[_33850 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17906 + ceil32(return_data.size) + 165
                                mem[_17906 + 164] = return_data.size
                                mem[_17906 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17906 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17906 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33563 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33563] = 26
                                                mem[_33563 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33851 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33851] = 26
                                            mem[_33851 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17906 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17906 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17906 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17906 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33564 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33564] = 26
                                                mem[_33564 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33852 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33852] = 26
                                            mem[_33852 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                        else:
                            require arg2
                            if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _17835 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17835] = 26
                            mem[_17835 + 32] = 'SafeMath: division by zero'
                            _17943 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = arg2 * withdrawFeeFactor / 10000
                            _17944 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17943 + 100] = 32
                            mem[_17943 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17943 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18200 = mem[_17944]
                            mem[_17943 + 164 len floor32(mem[_17944])] = mem[_17944 + 32 len floor32(mem[_17944])]
                            mem[_17943 + floor32(mem[_17944]) + -(mem[_17944] % 32) + 196 len mem[_17944] % 32] = mem[_17944 + -(mem[_17944] % 32) + floor32(mem[_17944]) + 64 len mem[_17944] % 32]
                            call wantAddress.mem[_17943 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_17943 + 168 len _18200 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17943 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17943 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33557 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33557] = 26
                                                mem[_33557 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33845 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33845] = 26
                                            mem[_33845 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17943 + 274 len 22]
                                    mem[_17943 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17943 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33558 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33558] = 26
                                                mem[_33558 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33846 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33846] = 26
                                            mem[_33846 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17943 + ceil32(return_data.size) + 165
                                mem[_17943 + 164] = return_data.size
                                mem[_17943 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17943 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17943 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33559 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33559] = 26
                                                mem[_33559 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33847 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33847] = 26
                                            mem[_33847 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17943 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17943 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17943 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17943 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33560 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33560] = 26
                                                mem[_33560 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33848 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33848] = 26
                                            mem[_33848 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                else:
                    if withdrawFeeFactor >= 10000:
                        _17780 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _17781 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17780 + 100] = 32
                        mem[_17780 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17780 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _17858 = mem[_17781]
                        mem[_17780 + 164 len floor32(mem[_17781])] = mem[_17781 + 32 len floor32(mem[_17781])]
                        mem[_17780 + floor32(mem[_17781]) + -(mem[_17781] % 32) + 196 len mem[_17781] % 32] = mem[_17781 + -(mem[_17781] % 32) + floor32(mem[_17781]) + 64 len mem[_17781] % 32]
                        call wantAddress.mem[_17780 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_17780 + 168 len _17858 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17780 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17780 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33565 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33565] = 26
                                            mem[_33565 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33853 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33853] = 26
                                        mem[_33853 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17780 + 274 len 22]
                                mem[_17780 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17780 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33566 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33566] = 26
                                            mem[_33566 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33854 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33854] = 26
                                        mem[_33854 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17780 + ceil32(return_data.size) + 165
                            mem[_17780 + 164] = return_data.size
                            mem[_17780 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17780 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17780 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33567 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33567] = 26
                                            mem[_33567 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33855 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33855] = 26
                                        mem[_33855 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17780 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17780 + ceil32(return_data.size) + 275 len 22]
                                mem[_17780 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17780 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33568 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33568] = 26
                                            mem[_33568 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33856 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33856] = 26
                                        mem[_33856 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        if not ext_call.return_data[0]:
                            _17822 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17822] = 26
                            mem[_17822 + 32] = 'SafeMath: division by zero'
                            _17925 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = 0
                            _17926 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17925 + 100] = 32
                            mem[_17925 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17925 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18150 = mem[_17926]
                            mem[_17925 + 164 len floor32(mem[_17926])] = mem[_17926 + 32 len floor32(mem[_17926])]
                            mem[_17925 + floor32(mem[_17926]) + -(mem[_17926] % 32) + 196 len mem[_17926] % 32] = mem[_17926 + floor32(mem[_17926]) + -(mem[_17926] % 32) + 64 len mem[_17926] % 32]
                            call wantAddress with:
                                 gas gas_remaining wei
                                args mem[_17925 + 168 len _18150 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17925 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17925 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33573 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33573] = 26
                                                mem[_33573 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33861 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33861] = 26
                                            mem[_33861 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17925 + 274 len 22]
                                    mem[_17925 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17925 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33574 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33574] = 26
                                                mem[_33574 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33862 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33862] = 26
                                            mem[_33862 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17925 + ceil32(return_data.size) + 165
                                mem[_17925 + 164] = return_data.size
                                mem[_17925 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17925 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17925 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33575 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33575] = 26
                                                mem[_33575 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33863 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33863] = 26
                                            mem[_33863 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17925 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17925 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17925 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17925 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33576 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33576] = 26
                                                mem[_33576 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33864 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33864] = 26
                                            mem[_33864 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                        else:
                            require ext_call.return_data[0]
                            if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _17851 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17851] = 26
                            mem[_17851 + 32] = 'SafeMath: division by zero'
                            _17970 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                            _17971 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17970 + 100] = 32
                            mem[_17970 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17970 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18255 = mem[_17971]
                            mem[_17970 + 164 len floor32(mem[_17971])] = mem[_17971 + 32 len floor32(mem[_17971])]
                            mem[_17970 + floor32(mem[_17971]) + -(mem[_17971] % 32) + 196 len mem[_17971] % 32] = mem[_17971 + floor32(mem[_17971]) + -(mem[_17971] % 32) + 64 len mem[_17971] % 32]
                            call wantAddress with:
                                 gas gas_remaining wei
                                args mem[_17970 + 168 len _18255 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17970 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17970 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33569 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33569] = 26
                                                mem[_33569 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33857 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33857] = 26
                                            mem[_33857 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17970 + 274 len 22]
                                    mem[_17970 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17970 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33570 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33570] = 26
                                                mem[_33570 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33858 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33858] = 26
                                            mem[_33858 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17970 + ceil32(return_data.size) + 165
                                mem[_17970 + 164] = return_data.size
                                mem[_17970 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17970 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17970 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33571 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33571] = 26
                                                mem[_33571 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33859 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33859] = 26
                                            mem[_33859 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17970 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17970 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17970 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17970 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33572 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33572] = 26
                                                mem[_33572 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33860 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33860] = 26
                                            mem[_33860 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (0 / ext_call.return_data[0])
            _16992 = mem[64]
            mem[64] = mem[64] + 64
            mem[_16992] = 30
            mem[_16992 + 32] = 'SafeMath: subtraction overflow'
            if sharesTotal > sharesTotal:
                revert with 0, 'SafeMath: subtraction overflow'
            sharesTotal = 0
            if arg2 <= ext_call.return_data[0]:
                if withdrawFeeFactor >= 10000:
                    _17783 = mem[64]
                    mem[mem[64] + 36] = address(sub_88f9e800Address)
                    mem[mem[64] + 68] = arg2
                    _17784 = mem[64]
                    mem[mem[64]] = 68
                    mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                    mem[64] = mem[64] + 164
                    mem[_17783 + 100] = 32
                    mem[_17783 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17783 + 270 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    _17862 = mem[_17784]
                    mem[_17783 + 164 len floor32(mem[_17784])] = mem[_17784 + 32 len floor32(mem[_17784])]
                    mem[_17783 + floor32(mem[_17784]) + -(mem[_17784] % 32) + 196 len mem[_17784] % 32] = mem[_17784 + floor32(mem[_17784]) + -(mem[_17784] % 32) + 64 len mem[_17784] % 32]
                    call wantAddress with:
                         gas gas_remaining wei
                        args mem[_17783 + 168 len _17862 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] <= 0:
                            mem[_17783 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17783 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33577 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33577] = 26
                                        mem[_33577 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33865] = 26
                                    mem[_33865 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17783 + 274 len 22]
                            mem[_17783 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17783 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33578 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33578] = 26
                                        mem[_33578 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33866 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33866] = 26
                                    mem[_33866 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        mem[64] = _17783 + ceil32(return_data.size) + 165
                        mem[_17783 + 164] = return_data.size
                        mem[_17783 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[_17783 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17783 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33579 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33579] = 26
                                        mem[_33579 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33867 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33867] = 26
                                    mem[_33867 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[_17783 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17783 + ceil32(return_data.size) + 275 len 22]
                            mem[_17783 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17783 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33580 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33580] = 26
                                        mem[_33580 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33868 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33868] = 26
                                    mem[_33868 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                else:
                    if not arg2:
                        _17825 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17825] = 26
                        mem[_17825 + 32] = 'SafeMath: division by zero'
                        _17928 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = 0
                        _17929 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17928 + 100] = 32
                        mem[_17928 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17928 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18158 = mem[_17929]
                        mem[_17928 + 164 len floor32(mem[_17929])] = mem[_17929 + 32 len floor32(mem[_17929])]
                        mem[_17928 + floor32(mem[_17929]) + -(mem[_17929] % 32) + 196 len mem[_17929] % 32] = mem[_17929 + -(mem[_17929] % 32) + floor32(mem[_17929]) + 64 len mem[_17929] % 32]
                        call wantAddress.mem[_17928 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_17928 + 168 len _18158 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17928 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17928 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33585 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33585] = 26
                                            mem[_33585 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33873 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33873] = 26
                                        mem[_33873 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17928 + 274 len 22]
                                mem[_17928 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17928 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33586 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33586] = 26
                                            mem[_33586 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33874 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33874] = 26
                                        mem[_33874 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17928 + ceil32(return_data.size) + 165
                            mem[_17928 + 164] = return_data.size
                            mem[_17928 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17928 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17928 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33587 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33587] = 26
                                            mem[_33587 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33875 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33875] = 26
                                        mem[_33875 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17928 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17928 + ceil32(return_data.size) + 275 len 22]
                                mem[_17928 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17928 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33588 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33588] = 26
                                            mem[_33588 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33876 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33876] = 26
                                        mem[_33876 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        require arg2
                        if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _17852 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17852] = 26
                        mem[_17852 + 32] = 'SafeMath: division by zero'
                        _17975 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = arg2 * withdrawFeeFactor / 10000
                        _17976 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17975 + 100] = 32
                        mem[_17975 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17975 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18267 = mem[_17976]
                        mem[_17975 + 164 len floor32(mem[_17976])] = mem[_17976 + 32 len floor32(mem[_17976])]
                        mem[_17975 + floor32(mem[_17976]) + -(mem[_17976] % 32) + 196 len mem[_17976] % 32] = mem[_17976 + -(mem[_17976] % 32) + floor32(mem[_17976]) + 64 len mem[_17976] % 32]
                        call wantAddress.mem[_17975 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_17975 + 168 len _18267 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17975 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17975 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33581 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33581] = 26
                                            mem[_33581 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33869 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33869] = 26
                                        mem[_33869 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17975 + 274 len 22]
                                mem[_17975 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17975 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33582 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33582] = 26
                                            mem[_33582 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33870 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33870] = 26
                                        mem[_33870 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17975 + ceil32(return_data.size) + 165
                            mem[_17975 + 164] = return_data.size
                            mem[_17975 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17975 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17975 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33583 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33583] = 26
                                            mem[_33583 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33871 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33871] = 26
                                        mem[_33871 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17975 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17975 + ceil32(return_data.size) + 275 len 22]
                                mem[_17975 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17975 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33584 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33584] = 26
                                            mem[_33584 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33872 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33872] = 26
                                        mem[_33872 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
            else:
                if withdrawFeeFactor >= 10000:
                    _17792 = mem[64]
                    mem[mem[64] + 36] = address(sub_88f9e800Address)
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _17793 = mem[64]
                    mem[mem[64]] = 68
                    mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                    mem[64] = mem[64] + 164
                    mem[_17792 + 100] = 32
                    mem[_17792 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17792 + 270 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    _17877 = mem[_17793]
                    mem[_17792 + 164 len floor32(mem[_17793])] = mem[_17793 + 32 len floor32(mem[_17793])]
                    mem[_17792 + floor32(mem[_17793]) + -(mem[_17793] % 32) + 196 len mem[_17793] % 32] = mem[_17793 + floor32(mem[_17793]) + -(mem[_17793] % 32) + 64 len mem[_17793] % 32]
                    call wantAddress with:
                         gas gas_remaining wei
                        args mem[_17792 + 168 len _17877 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] <= 0:
                            mem[_17792 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17792 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33589 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33589] = 26
                                        mem[_33589 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33877 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33877] = 26
                                    mem[_33877 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17792 + 274 len 22]
                            mem[_17792 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17792 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33590 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33590] = 26
                                        mem[_33590 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33878 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33878] = 26
                                    mem[_33878 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        mem[64] = _17792 + ceil32(return_data.size) + 165
                        mem[_17792 + 164] = return_data.size
                        mem[_17792 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[_17792 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17792 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33591 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33591] = 26
                                        mem[_33591 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33879 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33879] = 26
                                    mem[_33879 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[_17792 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17792 + ceil32(return_data.size) + 275 len 22]
                            mem[_17792 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17792 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33592 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33592] = 26
                                        mem[_33592 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33880 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33880] = 26
                                    mem[_33880 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                else:
                    if not ext_call.return_data[0]:
                        _17838 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17838] = 26
                        mem[_17838 + 32] = 'SafeMath: division by zero'
                        _17948 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = 0
                        _17949 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17948 + 100] = 32
                        mem[_17948 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17948 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18216 = mem[_17949]
                        mem[_17948 + 164 len floor32(mem[_17949])] = mem[_17949 + 32 len floor32(mem[_17949])]
                        mem[_17948 + floor32(mem[_17949]) + -(mem[_17949] % 32) + 196 len mem[_17949] % 32] = mem[_17949 + floor32(mem[_17949]) + -(mem[_17949] % 32) + 64 len mem[_17949] % 32]
                        call wantAddress with:
                             gas gas_remaining wei
                            args mem[_17948 + 168 len _18216 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17948 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17948 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33597 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33597] = 26
                                            mem[_33597 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33885 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33885] = 26
                                        mem[_33885 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17948 + 274 len 22]
                                mem[_17948 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17948 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33598 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33598] = 26
                                            mem[_33598 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33886 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33886] = 26
                                        mem[_33886 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17948 + ceil32(return_data.size) + 165
                            mem[_17948 + 164] = return_data.size
                            mem[_17948 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17948 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17948 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33599 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33599] = 26
                                            mem[_33599 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33887 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33887] = 26
                                        mem[_33887 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17948 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17948 + ceil32(return_data.size) + 275 len 22]
                                mem[_17948 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17948 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33600 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33600] = 26
                                            mem[_33600 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33888 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33888] = 26
                                        mem[_33888 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        require ext_call.return_data[0]
                        if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _17865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17865] = 26
                        mem[_17865 + 32] = 'SafeMath: division by zero'
                        _18011 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                        _18012 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_18011 + 100] = 32
                        mem[_18011 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_18011 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18319 = mem[_18012]
                        mem[_18011 + 164 len floor32(mem[_18012])] = mem[_18012 + 32 len floor32(mem[_18012])]
                        mem[_18011 + floor32(mem[_18012]) + -(mem[_18012] % 32) + 196 len mem[_18012] % 32] = mem[_18012 + -(mem[_18012] % 32) + floor32(mem[_18012]) + 64 len mem[_18012] % 32]
                        call wantAddress.mem[_18011 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_18011 + 168 len _18319 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_18011 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18011 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33593 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33593] = 26
                                            mem[_33593 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33881 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33881] = 26
                                        mem[_33881 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18011 + 274 len 22]
                                mem[_18011 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18011 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33594 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33594] = 26
                                            mem[_33594 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33882 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33882] = 26
                                        mem[_33882 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _18011 + ceil32(return_data.size) + 165
                            mem[_18011 + 164] = return_data.size
                            mem[_18011 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_18011 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18011 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33595 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33595] = 26
                                            mem[_33595 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33883 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33883] = 26
                                        mem[_33883 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_18011 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18011 + ceil32(return_data.size) + 275 len 22]
                                mem[_18011 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18011 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33596 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33596] = 26
                                            mem[_33596 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33884 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33884] = 26
                                        mem[_33884 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
        else:
            require arg2
            if arg2 * sharesTotal / arg2 != sharesTotal:
                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _15424 = mem[64]
            mem[64] = mem[64] + 64
            mem[_15424] = 26
            mem[_15424 + 32] = 'SafeMath: division by zero'
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if arg2 * sharesTotal / ext_call.return_data[0] <= sharesTotal:
                _17089 = mem[64]
                mem[64] = mem[64] + 64
                mem[_17089] = 30
                mem[_17089 + 32] = 'SafeMath: subtraction overflow'
                sharesTotal -= arg2 * sharesTotal / ext_call.return_data[0]
                if arg2 <= ext_call.return_data[0]:
                    if withdrawFeeFactor >= 10000:
                        _17786 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = arg2
                        _17787 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17786 + 100] = 32
                        mem[_17786 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17786 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _17867 = mem[_17787]
                        mem[_17786 + 164 len floor32(mem[_17787])] = mem[_17787 + 32 len floor32(mem[_17787])]
                        mem[_17786 + floor32(mem[_17787]) + -(mem[_17787] % 32) + 196 len mem[_17787] % 32] = mem[_17787 + floor32(mem[_17787]) + -(mem[_17787] % 32) + 64 len mem[_17787] % 32]
                        call wantAddress with:
                             gas gas_remaining wei
                            args mem[_17786 + 168 len _17867 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17786 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17786 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33505 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33505] = 26
                                            mem[_33505 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33793 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33793] = 26
                                        mem[_33793 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17786 + 274 len 22]
                                mem[_17786 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17786 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33506 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33506] = 26
                                            mem[_33506 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33794 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33794] = 26
                                        mem[_33794 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17786 + ceil32(return_data.size) + 165
                            mem[_17786 + 164] = return_data.size
                            mem[_17786 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17786 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17786 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33507 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33507] = 26
                                            mem[_33507 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33795 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33795] = 26
                                        mem[_33795 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17786 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17786 + ceil32(return_data.size) + 275 len 22]
                                mem[_17786 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17786 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33508 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33508] = 26
                                            mem[_33508 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33796 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33796] = 26
                                        mem[_33796 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        if not arg2:
                            _17830 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17830] = 26
                            mem[_17830 + 32] = 'SafeMath: division by zero'
                            _17932 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = 0
                            _17933 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17932 + 100] = 32
                            mem[_17932 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17932 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18174 = mem[_17933]
                            mem[_17932 + 164 len floor32(mem[_17933])] = mem[_17933 + 32 len floor32(mem[_17933])]
                            mem[_17932 + floor32(mem[_17933]) + -(mem[_17933] % 32) + 196 len mem[_17933] % 32] = mem[_17933 + -(mem[_17933] % 32) + floor32(mem[_17933]) + 64 len mem[_17933] % 32]
                            call wantAddress.mem[_17932 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_17932 + 168 len _18174 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17932 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17932 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33513 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33513] = 26
                                                mem[_33513 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33801 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33801] = 26
                                            mem[_33801 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17932 + 274 len 22]
                                    mem[_17932 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17932 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33514 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33514] = 26
                                                mem[_33514 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33802 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33802] = 26
                                            mem[_33802 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17932 + ceil32(return_data.size) + 165
                                mem[_17932 + 164] = return_data.size
                                mem[_17932 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17932 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17932 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33515 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33515] = 26
                                                mem[_33515 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33803 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33803] = 26
                                            mem[_33803 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17932 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17932 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17932 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17932 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33516 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33516] = 26
                                                mem[_33516 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33804 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33804] = 26
                                            mem[_33804 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                        else:
                            require arg2
                            if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _17853 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17853] = 26
                            mem[_17853 + 32] = 'SafeMath: division by zero'
                            _17981 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = arg2 * withdrawFeeFactor / 10000
                            _17982 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17981 + 100] = 32
                            mem[_17981 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17981 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18281 = mem[_17982]
                            mem[_17981 + 164 len floor32(mem[_17982])] = mem[_17982 + 32 len floor32(mem[_17982])]
                            mem[_17981 + floor32(mem[_17982]) + -(mem[_17982] % 32) + 196 len mem[_17982] % 32] = mem[_17982 + -(mem[_17982] % 32) + floor32(mem[_17982]) + 64 len mem[_17982] % 32]
                            call wantAddress.mem[_17981 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_17981 + 168 len _18281 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17981 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17981 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33509 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33509] = 26
                                                mem[_33509 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33797 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33797] = 26
                                            mem[_33797 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17981 + 274 len 22]
                                    mem[_17981 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17981 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33510 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33510] = 26
                                                mem[_33510 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33798 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33798] = 26
                                            mem[_33798 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17981 + ceil32(return_data.size) + 165
                                mem[_17981 + 164] = return_data.size
                                mem[_17981 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17981 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17981 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33511 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33511] = 26
                                                mem[_33511 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33799 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33799] = 26
                                            mem[_33799 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17981 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17981 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17981 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17981 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33512 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33512] = 26
                                                mem[_33512 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33800 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33800] = 26
                                            mem[_33800 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                else:
                    if withdrawFeeFactor >= 10000:
                        _17796 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _17797 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17796 + 100] = 32
                        mem[_17796 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17796 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _17881 = mem[_17797]
                        mem[_17796 + 164 len floor32(mem[_17797])] = mem[_17797 + 32 len floor32(mem[_17797])]
                        mem[_17796 + floor32(mem[_17797]) + -(mem[_17797] % 32) + 196 len mem[_17797] % 32] = mem[_17797 + -(mem[_17797] % 32) + floor32(mem[_17797]) + 64 len mem[_17797] % 32]
                        call wantAddress.mem[_17796 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_17796 + 168 len _17881 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17796 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17796 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33517 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33517] = 26
                                            mem[_33517 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33805 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33805] = 26
                                        mem[_33805 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17796 + 274 len 22]
                                mem[_17796 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17796 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33518 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33518] = 26
                                            mem[_33518 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33806 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33806] = 26
                                        mem[_33806 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17796 + ceil32(return_data.size) + 165
                            mem[_17796 + 164] = return_data.size
                            mem[_17796 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17796 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17796 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33519 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33519] = 26
                                            mem[_33519 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33807 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33807] = 26
                                        mem[_33807 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17796 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17796 + ceil32(return_data.size) + 275 len 22]
                                mem[_17796 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17796 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33520 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33520] = 26
                                            mem[_33520 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33808 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33808] = 26
                                        mem[_33808 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        if not ext_call.return_data[0]:
                            _17841 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17841] = 26
                            mem[_17841 + 32] = 'SafeMath: division by zero'
                            _17952 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = 0
                            _17953 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_17952 + 100] = 32
                            mem[_17952 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17952 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18226 = mem[_17953]
                            mem[_17952 + 164 len floor32(mem[_17953])] = mem[_17953 + 32 len floor32(mem[_17953])]
                            mem[_17952 + floor32(mem[_17953]) + -(mem[_17953] % 32) + 196 len mem[_17953] % 32] = mem[_17953 + floor32(mem[_17953]) + -(mem[_17953] % 32) + 64 len mem[_17953] % 32]
                            call wantAddress with:
                                 gas gas_remaining wei
                                args mem[_17952 + 168 len _18226 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_17952 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17952 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33525 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33525] = 26
                                                mem[_33525 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33813 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33813] = 26
                                            mem[_33813 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17952 + 274 len 22]
                                    mem[_17952 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17952 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33526 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33526] = 26
                                                mem[_33526 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33814 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33814] = 26
                                            mem[_33814 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _17952 + ceil32(return_data.size) + 165
                                mem[_17952 + 164] = return_data.size
                                mem[_17952 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_17952 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17952 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33527 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33527] = 26
                                                mem[_33527 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33815 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33815] = 26
                                            mem[_33815 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_17952 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_17952 + ceil32(return_data.size) + 275 len 22]
                                    mem[_17952 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_17952 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33528 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33528] = 26
                                                mem[_33528 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33816 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33816] = 26
                                            mem[_33816 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                        else:
                            require ext_call.return_data[0]
                            if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            _17870 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_17870] = 26
                            mem[_17870 + 32] = 'SafeMath: division by zero'
                            _18025 = mem[64]
                            mem[mem[64] + 36] = address(sub_88f9e800Address)
                            mem[mem[64] + 68] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                            _18026 = mem[64]
                            mem[mem[64]] = 68
                            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                            mem[64] = mem[64] + 164
                            mem[_18025 + 100] = 32
                            mem[_18025 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_18025 + 270 len 26]
                            if ext_code.size(wantAddress) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            _18336 = mem[_18026]
                            mem[_18025 + 164 len floor32(mem[_18026])] = mem[_18026 + 32 len floor32(mem[_18026])]
                            mem[_18025 + floor32(mem[_18026]) + -(mem[_18026] % 32) + 196 len mem[_18026] % 32] = mem[_18026 + -(mem[_18026] % 32) + floor32(mem[_18026]) + 64 len mem[_18026] % 32]
                            call wantAddress.mem[_18025 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_18025 + 168 len _18336 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    mem[_18025 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_18025 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33521 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33521] = 26
                                                mem[_33521 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33809 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33809] = 26
                                            mem[_33809 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_18025 + 274 len 22]
                                    mem[_18025 + 168] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_18025 + 164] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33522 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33522] = 26
                                                mem[_33522 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33810 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33810] = 26
                                            mem[_33810 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                            else:
                                mem[64] = _18025 + ceil32(return_data.size) + 165
                                mem[_18025 + 164] = return_data.size
                                mem[_18025 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    mem[_18025 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_18025 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33523 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33523] = 26
                                                mem[_33523 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33811 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33811] = 26
                                            mem[_33811 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                else:
                                    require return_data.size >= 32
                                    if not mem[_18025 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_18025 + ceil32(return_data.size) + 275 len 22]
                                    mem[_18025 + ceil32(return_data.size) + 169] = this.address
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_18025 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] < sub_9a14ff17:
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                    else:
                                        idx = 0
                                        s = mem[mem[64]]
                                        while idx < borrowDepth:
                                            require ext_code.size(poolAddress)
                                            call poolAddress.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if not s:
                                                _33524 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_33524] = 26
                                                mem[_33524 + 32] = 'SafeMath: division by zero'
                                                mem[mem[64] + 4] = 0
                                                require ext_code.size(poolAddress)
                                                call poolAddress.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            require s
                                            if s * borrowRate / s != borrowRate:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _33812 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33812] = 26
                                            mem[_33812 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = s * borrowRate / 100
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (s * borrowRate / 100)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = s * borrowRate / 100
                                            continue 
                                        require ext_code.size(wantAddress)
                                        staticcall wantAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        sub_c567dada = ext_call.return_data[0]
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                sub_3ab24b3e = ext_call.return_data[0]
                wantLockedTotal = sub_c567dada - sub_3ab24b3e
                stor1 = 1
                return (arg2 * sharesTotal / ext_call.return_data[0])
            _17522 = mem[64]
            mem[64] = mem[64] + 64
            mem[_17522] = 30
            mem[_17522 + 32] = 'SafeMath: subtraction overflow'
            if sharesTotal > sharesTotal:
                revert with 0, 'SafeMath: subtraction overflow'
            sharesTotal = 0
            if arg2 <= ext_call.return_data[0]:
                if withdrawFeeFactor >= 10000:
                    _17799 = mem[64]
                    mem[mem[64] + 36] = address(sub_88f9e800Address)
                    mem[mem[64] + 68] = arg2
                    _17800 = mem[64]
                    mem[mem[64]] = 68
                    mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                    mem[64] = mem[64] + 164
                    mem[_17799 + 100] = 32
                    mem[_17799 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17799 + 270 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    _17885 = mem[_17800]
                    mem[_17799 + 164 len floor32(mem[_17800])] = mem[_17800 + 32 len floor32(mem[_17800])]
                    mem[_17799 + floor32(mem[_17800]) + -(mem[_17800] % 32) + 196 len mem[_17800] % 32] = mem[_17800 + floor32(mem[_17800]) + -(mem[_17800] % 32) + 64 len mem[_17800] % 32]
                    call wantAddress with:
                         gas gas_remaining wei
                        args mem[_17799 + 168 len _17885 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] <= 0:
                            mem[_17799 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17799 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33529 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33529] = 26
                                        mem[_33529 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33817 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33817] = 26
                                    mem[_33817 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17799 + 274 len 22]
                            mem[_17799 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17799 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33530 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33530] = 26
                                        mem[_33530 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33818 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33818] = 26
                                    mem[_33818 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        mem[64] = _17799 + ceil32(return_data.size) + 165
                        mem[_17799 + 164] = return_data.size
                        mem[_17799 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[_17799 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17799 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33531 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33531] = 26
                                        mem[_33531 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33819 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33819] = 26
                                    mem[_33819 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[_17799 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17799 + ceil32(return_data.size) + 275 len 22]
                            mem[_17799 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17799 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33532 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33532] = 26
                                        mem[_33532 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33820 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33820] = 26
                                    mem[_33820 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                else:
                    if not arg2:
                        _17844 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17844] = 26
                        mem[_17844 + 32] = 'SafeMath: division by zero'
                        _17955 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = 0
                        _17956 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17955 + 100] = 32
                        mem[_17955 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17955 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18234 = mem[_17956]
                        mem[_17955 + 164 len floor32(mem[_17956])] = mem[_17956 + 32 len floor32(mem[_17956])]
                        mem[_17955 + floor32(mem[_17956]) + -(mem[_17956] % 32) + 196 len mem[_17956] % 32] = mem[_17956 + -(mem[_17956] % 32) + floor32(mem[_17956]) + 64 len mem[_17956] % 32]
                        call wantAddress.mem[_17955 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_17955 + 168 len _18234 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17955 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17955 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33537 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33537] = 26
                                            mem[_33537 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33825 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33825] = 26
                                        mem[_33825 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17955 + 274 len 22]
                                mem[_17955 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17955 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33538 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33538] = 26
                                            mem[_33538 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33826 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33826] = 26
                                        mem[_33826 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17955 + ceil32(return_data.size) + 165
                            mem[_17955 + 164] = return_data.size
                            mem[_17955 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17955 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17955 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33539 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33539] = 26
                                            mem[_33539 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33827 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33827] = 26
                                        mem[_33827 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17955 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17955 + ceil32(return_data.size) + 275 len 22]
                                mem[_17955 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17955 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33540 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33540] = 26
                                            mem[_33540 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33828 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33828] = 26
                                        mem[_33828 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        require arg2
                        if arg2 * withdrawFeeFactor / arg2 != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _17871 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17871] = 26
                        mem[_17871 + 32] = 'SafeMath: division by zero'
                        _18030 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = arg2 * withdrawFeeFactor / 10000
                        _18031 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_18030 + 100] = 32
                        mem[_18030 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_18030 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18348 = mem[_18031]
                        mem[_18030 + 164 len floor32(mem[_18031])] = mem[_18031 + 32 len floor32(mem[_18031])]
                        mem[_18030 + floor32(mem[_18031]) + -(mem[_18031] % 32) + 196 len mem[_18031] % 32] = mem[_18031 + -(mem[_18031] % 32) + floor32(mem[_18031]) + 64 len mem[_18031] % 32]
                        call wantAddress.mem[_18030 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_18030 + 168 len _18348 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_18030 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18030 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33533 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33533] = 26
                                            mem[_33533 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33821 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33821] = 26
                                        mem[_33821 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18030 + 274 len 22]
                                mem[_18030 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18030 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33534 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33534] = 26
                                            mem[_33534 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33822 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33822] = 26
                                        mem[_33822 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _18030 + ceil32(return_data.size) + 165
                            mem[_18030 + 164] = return_data.size
                            mem[_18030 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_18030 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18030 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33535 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33535] = 26
                                            mem[_33535 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33823 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33823] = 26
                                        mem[_33823 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_18030 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18030 + ceil32(return_data.size) + 275 len 22]
                                mem[_18030 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18030 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33536 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33536] = 26
                                            mem[_33536 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33824 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33824] = 26
                                        mem[_33824 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
            else:
                if withdrawFeeFactor >= 10000:
                    _17807 = mem[64]
                    mem[mem[64] + 36] = address(sub_88f9e800Address)
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _17808 = mem[64]
                    mem[mem[64]] = 68
                    mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                    mem[64] = mem[64] + 164
                    mem[_17807 + 100] = 32
                    mem[_17807 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17807 + 270 len 26]
                    if ext_code.size(wantAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    _17903 = mem[_17808]
                    mem[_17807 + 164 len floor32(mem[_17808])] = mem[_17808 + 32 len floor32(mem[_17808])]
                    mem[_17807 + floor32(mem[_17808]) + -(mem[_17808] % 32) + 196 len mem[_17808] % 32] = mem[_17808 + floor32(mem[_17808]) + -(mem[_17808] % 32) + 64 len mem[_17808] % 32]
                    call wantAddress with:
                         gas gas_remaining wei
                        args mem[_17807 + 168 len _17903 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] <= 0:
                            mem[_17807 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17807 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33541 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33541] = 26
                                        mem[_33541 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33829 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33829] = 26
                                    mem[_33829 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17807 + 274 len 22]
                            mem[_17807 + 168] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17807 + 164] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33542 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33542] = 26
                                        mem[_33542 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33830 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33830] = 26
                                    mem[_33830 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                    else:
                        mem[64] = _17807 + ceil32(return_data.size) + 165
                        mem[_17807 + 164] = return_data.size
                        mem[_17807 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            mem[_17807 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17807 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33543 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33543] = 26
                                        mem[_33543 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33831 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33831] = 26
                                    mem[_33831 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                        else:
                            require return_data.size >= 32
                            if not mem[_17807 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_17807 + ceil32(return_data.size) + 275 len 22]
                            mem[_17807 + ceil32(return_data.size) + 169] = this.address
                            require ext_code.size(wantAddress)
                            staticcall wantAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17807 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < sub_9a14ff17:
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                            else:
                                idx = 0
                                s = mem[mem[64]]
                                while idx < borrowDepth:
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not s:
                                        _33544 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33544] = 26
                                        mem[_33544 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = 0
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    require s
                                    if s * borrowRate / s != borrowRate:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _33832 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_33832] = 26
                                    mem[_33832 + 32] = 'SafeMath: division by zero'
                                    mem[mem[64] + 4] = s * borrowRate / 100
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (s * borrowRate / 100)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = s * borrowRate / 100
                                    continue 
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(poolAddress)
                                call poolAddress.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require ext_code.size(poolAddress)
                                call poolAddress.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                sub_c567dada = ext_call.return_data[0]
                                require ext_code.size(poolAddress)
                                call poolAddress.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args address(this.address)
                else:
                    if not ext_call.return_data[0]:
                        _17856 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17856] = 26
                        mem[_17856 + 32] = 'SafeMath: division by zero'
                        _17986 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = 0
                        _17987 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_17986 + 100] = 32
                        mem[_17986 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_17986 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18297 = mem[_17987]
                        mem[_17986 + 164 len floor32(mem[_17987])] = mem[_17987 + 32 len floor32(mem[_17987])]
                        mem[_17986 + floor32(mem[_17987]) + -(mem[_17987] % 32) + 196 len mem[_17987] % 32] = mem[_17987 + floor32(mem[_17987]) + -(mem[_17987] % 32) + 64 len mem[_17987] % 32]
                        call wantAddress with:
                             gas gas_remaining wei
                            args mem[_17986 + 168 len _18297 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_17986 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17986 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33549 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33549] = 26
                                            mem[_33549 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33837 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33837] = 26
                                        mem[_33837 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17986 + 274 len 22]
                                mem[_17986 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17986 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33550 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33550] = 26
                                            mem[_33550 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33838 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33838] = 26
                                        mem[_33838 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _17986 + ceil32(return_data.size) + 165
                            mem[_17986 + 164] = return_data.size
                            mem[_17986 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_17986 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17986 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33551 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33551] = 26
                                            mem[_33551 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33839 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33839] = 26
                                        mem[_33839 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_17986 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_17986 + ceil32(return_data.size) + 275 len 22]
                                mem[_17986 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_17986 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33552 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33552] = 26
                                            mem[_33552 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33840 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33840] = 26
                                        mem[_33840 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                    else:
                        require ext_call.return_data[0]
                        if ext_call.return_data[0] * withdrawFeeFactor / ext_call.return_data[0] != withdrawFeeFactor:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        _17888 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_17888] = 26
                        mem[_17888 + 32] = 'SafeMath: division by zero'
                        _18071 = mem[64]
                        mem[mem[64] + 36] = address(sub_88f9e800Address)
                        mem[mem[64] + 68] = ext_call.return_data[0] * withdrawFeeFactor / 10000
                        _18072 = mem[64]
                        mem[mem[64]] = 68
                        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
                        mem[64] = mem[64] + 164
                        mem[_18071 + 100] = 32
                        mem[_18071 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_18071 + 270 len 26]
                        if ext_code.size(wantAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        _18392 = mem[_18072]
                        mem[_18071 + 164 len floor32(mem[_18072])] = mem[_18072 + 32 len floor32(mem[_18072])]
                        mem[_18071 + floor32(mem[_18072]) + -(mem[_18072] % 32) + 196 len mem[_18072] % 32] = mem[_18072 + floor32(mem[_18072]) + -(mem[_18072] % 32) + 64 len mem[_18072] % 32]
                        call wantAddress with:
                             gas gas_remaining wei
                            args mem[_18071 + 168 len _18392 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[_18071 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18071 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33545 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33545] = 26
                                            mem[_33545 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33833 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33833] = 26
                                        mem[_33833 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18071 + 274 len 22]
                                mem[_18071 + 168] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18071 + 164] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33546 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33546] = 26
                                            mem[_33546 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33834 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33834] = 26
                                        mem[_33834 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                        else:
                            mem[64] = _18071 + ceil32(return_data.size) + 165
                            mem[_18071 + 164] = return_data.size
                            mem[_18071 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[_18071 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18071 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33547 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33547] = 26
                                            mem[_33547 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33835 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33835] = 26
                                        mem[_33835 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                            else:
                                require return_data.size >= 32
                                if not mem[_18071 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_18071 + ceil32(return_data.size) + 275 len 22]
                                mem[_18071 + ceil32(return_data.size) + 169] = this.address
                                require ext_code.size(wantAddress)
                                staticcall wantAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_18071 + ceil32(return_data.size) + 165] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] < sub_9a14ff17:
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                else:
                                    idx = 0
                                    s = mem[mem[64]]
                                    while idx < borrowDepth:
                                        require ext_code.size(poolAddress)
                                        call poolAddress.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not s:
                                            _33548 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_33548] = 26
                                            mem[_33548 + 32] = 'SafeMath: division by zero'
                                            mem[mem[64] + 4] = 0
                                            require ext_code.size(poolAddress)
                                            call poolAddress.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        require s
                                        if s * borrowRate / s != borrowRate:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _33836 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_33836] = 26
                                        mem[_33836 + 32] = 'SafeMath: division by zero'
                                        mem[mem[64] + 4] = s * borrowRate / 100
                                        require ext_code.size(poolAddress)
                                        call poolAddress.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (s * borrowRate / 100)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = s * borrowRate / 100
                                        continue 
                                    require ext_code.size(wantAddress)
                                    staticcall wantAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(poolAddress)
                                    call poolAddress.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    sub_c567dada = ext_call.return_data[0]
                                    require ext_code.size(poolAddress)
                                    call poolAddress.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_3ab24b3e = ext_call.return_data[0]
    wantLockedTotal = sub_c567dada - sub_3ab24b3e
    stor1 = 1
    return sharesTotal
}



}
