contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#  - sub_8dc5b6fb(?)
#  - migrate(address arg1)
#  - _fallback()
#
const decimals = 18

const sub_d2802be5(?) = 1

const withdrawFee = 15


mapping of uint256 balanceOf;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
mapping of struct strategyInfo;
mapping of uint8 stor8;
array of struct stor9;
uint256 sub_5e8f09aa;
uint256 sub_66f2b1a7;
address governmentAddress;
address sub_97091078Address;
address sub_d7959960Address;
address USDTAddress;
uint256 stor16;
address stor18;
address stor19;
address stor20;
address stor21;
address stor22;
address stor23;

function totalSupply() {
    return totalSupply
}

function government() {
    return governmentAddress
}

function sub_5e8f09aa(?) {
    return sub_5e8f09aa
}

function sub_66f2b1a7(?) {
    return sub_66f2b1a7
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() {
    return owner
}

function sub_97091078(?) {
    return sub_97091078Address
}

function USDT() {
    return USDTAddress
}

function sub_d7959960(?) {
    return sub_d7959960Address
}

function getStrategyInfo(uint256 arg1) {
    require calldata.size - 4 >= 32
    return strategyInfo[arg1].field_0, 
           strategyInfo[arg1].field_256,
           strategyInfo[arg1].field_1792,
           strategyInfo[arg1].field_1536,
           strategyInfo[arg1].field_1280,
           strategyInfo[arg1].field_512
}

function getCurrentStrategy() {
    return stor22, stor23, stor20, stor19, stor18, stor16
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Approve is not supporting for share tokens.'
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Transfer is not supporting for share tokens.'
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Allowance is not supporting for share tokens.'
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'IncreaseAllowance is not supporting for share tokens.'
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'DecreaseAllowance is not supporting for share tokens.'
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TransferFrom is not supporting for share tokens.'
}

function sub_463b4b70(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setGovernment(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'The address of government can not be a zero address'
    governmentAddress = arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_f5da03e8(?) {
    if stor9.length:
        mem[128] = uint256(stor9.field_0)
        idx = 128
        s = 0
        while (32 * stor9.length) + 96 > idx:
            mem[idx + 32] = stor9[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=stor9.length, data=mem[128 len 32 * stor9.length])
    mem[(32 * stor9.length) + 128] = 32
    mem[(32 * stor9.length) + 160] = stor9.length
    mem[(32 * stor9.length) + 192 len 32 * stor9.length] = mem[128 len 32 * stor9.length]
    return memory
      from (32 * stor9.length) + 128
       len (96 * stor9.length) + 64
}

function earn() {
    require ext_code.size(stor23)
    staticcall stor23.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor18)
    if stor16 >= 999999:
        call stor18.deposit(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
    else:
        call stor18.0xe2bbb158 with:
             gas gas_remaining wei
            args stor16, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Earn(ext_call.return_data[0]);
}

function sub_00d791b5(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(USDTAddress)
    staticcall USDTAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'GrowthVault: USDT balance should be more then 0'
    require ext_code.size(USDTAddress)
    call USDTAddress.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, sub_5e8f09aa
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    sub_5e8f09aa = 0
}

function sub_bd7a107b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x93f1a40b with:
            gas gas_remaining wei
           args arg3, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(address(arg1))
    call address(arg1).0x441a3e70 with:
         gas gas_remaining wei
        args arg3, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(arg2))
    call address(arg2).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_030bcab3(?) {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg4):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg3))
    staticcall address(arg3).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg3))
    staticcall address(arg3).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg5].field_0 = address(arg4)
    strategyInfo[arg5].field_256 = address(arg3)
    strategyInfo[arg5].field_512 = arg2
    strategyInfo[arg5].field_1280 = address(arg1)
    strategyInfo[arg5].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg5].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg5]:
        stor9.length++
        stor9[stor9.length].field_0 = arg5
        stor8[arg5] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_7f5ed9f9(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg2):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg2))
    staticcall address(arg2).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg4].field_0 = address(arg3)
    strategyInfo[arg4].field_256 = address(arg2)
    strategyInfo[arg4].field_512 = 999999
    strategyInfo[arg4].field_1280 = address(arg1)
    strategyInfo[arg4].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg4].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg4]:
        stor9.length++
        stor9[stor9.length].field_0 = arg4
        stor8[arg4] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        else:
            if bool(stor3.length) == stor3.length.field_1 < 32:
                revert with 0, 34
            if stor3.length.field_1:
                if 31 < stor3.length.field_1:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    else:
        if bool(stor3.length) == stor3.length.field_1 < 32:
            revert with 0, 34
        if stor3.length.field_1:
            if 31 < stor3.length.field_1:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    mem[ceil32(stor3.length.field_1) + 192 len ceil32(stor3.length.field_1)] = mem[128 len ceil32(stor3.length.field_1)]
    if ceil32(stor3.length.field_1) > stor3.length.field_1:
        mem[stor3.length.field_1 + ceil32(stor3.length.field_1) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)], mem[(2 * ceil32(stor3.length.field_1)) + 192 len 2 * ceil32(stor3.length.field_1)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 0, 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 0, 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[stor4.length.field_1 + ceil32(stor4.length.field_1) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function getTotalCapital() {
    mem[96] = 0
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 2
    mem[64] = 448
    mem[384 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = 96
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _232 = mem[64]
        mem[64] = mem[64] + 256
        mem[_232] = strategyInfo[stor9[idx].field_0].field_0
        mem[_232 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_232 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_232 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_232 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_232 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_232 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_232 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _242 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _244 = mem[_242]
            if not mem[_242]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_242]
                v = _232
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _261 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _263 = mem[_261]
            require mem[_261] == mem[_261 + 18 len 14]
            _265 = mem[_261 + 32]
            require mem[_261 + 32] == mem[_261 + 50 len 14]
            require mem[_261 + 64] == mem[_261 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _273 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _275 = mem[_273]
            if _244 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_273]:
                revert with 0, 18
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _263) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _265) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 1 >= mem[352]:
                revert with 0, 50
            mem[416] = stor21
            if 0 >= mem[352]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[384] = strategyInfo[stor9[idx].field_0].field_1792
                _291 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                mem[mem[64] + 36] = 64
                _298 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _298:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _291 + (32 * _298) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _472 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _478 = mem[_472]
                require mem[_472] <= test266151307()
                require _472 + mem[_472] + 31 < _472 + return_data.size
                _484 = mem[_472 + mem[_472]]
                if mem[_472 + mem[_472]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_472 + mem[_472]]) + 1 < 0 or _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1
                mem[_472 + ceil32(return_data.size)] = _484
                require _478 + (32 * _484) + 32 <= return_data.size
                t = _472 + ceil32(return_data.size) + 32
                s = _472 + _478 + 32
                while s < _472 + _478 + (32 * _484) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _484:
                    revert with 0, 50
                _584 = mem[_472 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12 > !mem[_472 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + mem[_472 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _472 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584
                continue 
            mem[384] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                mem[mem[64] + 36] = 64
                _299 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _299:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12, 64, mem[mem[64] + 68 len (32 * _299) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _471 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _477 = mem[_471]
                require mem[_471] <= test266151307()
                require _471 + mem[_471] + 31 < _471 + return_data.size
                _483 = mem[_471 + mem[_471]]
                if mem[_471 + mem[_471]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_471 + mem[_471]]) + 1 < 0 or _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1
                mem[_471 + ceil32(return_data.size)] = _483
                require _477 + (32 * _483) + 32 <= return_data.size
                t = _471 + ceil32(return_data.size) + 32
                s = _471 + _477 + 32
                while s < _471 + _477 + (32 * _483) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _483:
                    revert with 0, 50
                _583 = mem[_471 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12 > !mem[_471 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + mem[_471 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _471 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _300 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _304 = mem[_300]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _324 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _331 = mem[_324]
            if mem[_324] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _304:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _363 = mem[_357]
            if 10^12 * _331 / _304 and mem[_357] > -1 / 10^12 * _331 / _304:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _331 / _304 * _363 / 10^12
            mem[mem[64] + 36] = 64
            _376 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _376:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _331 / _304 * _363 / 10^12, 64, mem[mem[64] + 68 len (32 * _376) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _470 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _476 = mem[_470]
            require mem[_470] <= test266151307()
            require _470 + mem[_470] + 31 < _470 + return_data.size
            _482 = mem[_470 + mem[_470]]
            if mem[_470 + mem[_470]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_470 + mem[_470]]) + 1 < 0 or _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1
            mem[_470 + ceil32(return_data.size)] = _482
            require _476 + (32 * _482) + 32 <= return_data.size
            u = _470 + ceil32(return_data.size) + 32
            t = _470 + _476 + 32
            while t < _470 + _476 + (32 * _482) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _482:
                revert with 0, 50
            _582 = mem[_470 + ceil32(return_data.size) + 64]
            mem[_232 + 128] = mem[_470 + ceil32(return_data.size) + 64]
            if v > !_582:
                revert with 0, 17
            if 0 >= mem[352]:
                revert with 0, 50
            mem[384] = mem[_232 + 236 len 20]
            _591 = mem[_232 + 224]
            _592 = mem[_232]
            require ext_code.size(mem[_232 + 236 len 20])
            staticcall mem[_232 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _598 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _600 = mem[_598]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_591))
            staticcall address(_591).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _606 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _608 = mem[_606]
            if mem[_606] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _600:
                revert with 0, 18
            mem[mem[64] + 4] = address(_592)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_592)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _616 = mem[_614]
            if 10^12 * _608 / _600 and mem[_614] > -1 / 10^12 * _608 / _600:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _608 / _600 * _616 / 10^12
            mem[mem[64] + 36] = 64
            _620 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _620:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_592))
            staticcall address(_592).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _608 / _600 * _616 / 10^12, 64, mem[mem[64] + 68 len (32 * _620) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _648 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _650 = mem[_648]
            require mem[_648] <= test266151307()
            require _648 + mem[_648] + 31 < _648 + return_data.size
            _652 = mem[_648 + mem[_648]]
            if mem[_648 + mem[_648]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_648 + mem[_648]]) + 1 < 0 or _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1
            mem[_648 + ceil32(return_data.size)] = _652
            require _650 + (32 * _652) + 32 <= return_data.size
            u = _648 + ceil32(return_data.size) + 32
            t = _648 + _650 + 32
            while t < _648 + _650 + (32 * _652) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _652:
                revert with 0, 50
            if mem[_232 + 128] > !mem[_648 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = mem[_232 + 128] + mem[_648 + ceil32(return_data.size) + 64]
            if v + _582 > !mem[_232 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
            u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
            v = _244
            v = _232
            v = stor9[idx].field_0
            v = v + _582 + mem[_232 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _241 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _243 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_243] = mem[_241]
        mem[_243 + 32] = mem[_241 + 32]
        mem[_243 + 64] = mem[_241 + 64]
        require return_data.size - 96 >= 96
        _249 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_249] = mem[_241 + 96]
        mem[_249 + 32] = mem[_241 + 128]
        mem[_249 + 64] = mem[_241 + 160]
        mem[_243 + 96] = _249
        mem[_243 + 128] = mem[_241 + 192]
        require return_data.size - 224 >= 96
        _257 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_257] = mem[_241 + 224]
        mem[_257 + 32] = mem[_241 + 256]
        mem[_257 + 64] = mem[_241 + 288]
        mem[_243 + 160] = _257
        _262 = mem[_243 + 64]
        if not mem[_243 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_243 + 64]
            v = _232
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _269 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _270 = mem[_269]
        require mem[_269] == mem[_269 + 18 len 14]
        _274 = mem[_269 + 32]
        require mem[_269 + 32] == mem[_269 + 50 len 14]
        require mem[_269 + 64] == mem[_269 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _280 = mem[_279]
        if _262 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_279]:
            revert with 0, 18
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _270) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _274) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 1 >= mem[352]:
            revert with 0, 50
        mem[416] = stor21
        if 0 >= mem[352]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[384] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            mem[mem[64] + 36] = 64
            _328 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            u = mem[64] + 100
            while s < _328:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12, 64, mem[mem[64] + 68 len (32 * _328) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _469 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _475 = mem[_469]
            require mem[_469] <= test266151307()
            require _469 + mem[_469] + 31 < _469 + return_data.size
            _481 = mem[_469 + mem[_469]]
            if mem[_469 + mem[_469]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_469 + mem[_469]]) + 1 < 0 or _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1
            mem[_469 + ceil32(return_data.size)] = _481
            require _475 + (32 * _481) + 32 <= return_data.size
            t = _469 + ceil32(return_data.size) + 32
            s = _469 + _475 + 32
            while s < _469 + _475 + (32 * _481) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _481:
                revert with 0, 50
            _581 = mem[_469 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12 > !mem[_469 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + mem[_469 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _469 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581
            continue 
        mem[384] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            mem[mem[64] + 36] = 64
            _330 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            w = mem[64] + 100
            while s < _330:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12, 64, mem[mem[64] + 68 len (32 * _330) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _468 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _474 = mem[_468]
            require mem[_468] <= test266151307()
            require _468 + mem[_468] + 31 < _468 + return_data.size
            _480 = mem[_468 + mem[_468]]
            if mem[_468 + mem[_468]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_468 + mem[_468]]) + 1 < 0 or _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1
            mem[_468 + ceil32(return_data.size)] = _480
            require _474 + (32 * _480) + 32 <= return_data.size
            t = _468 + ceil32(return_data.size) + 32
            s = _468 + _474 + 32
            while s < _468 + _474 + (32 * _480) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _480:
                revert with 0, 50
            _580 = mem[_468 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12 > !mem[_468 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + mem[_468 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _468 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            s = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _333 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _338 = mem[_333]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _346 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _352 = mem[_346]
        if mem[_346] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _338:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _370 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _375 = mem[_370]
        if 10^12 * _352 / _338 and mem[_370] > -1 / 10^12 * _352 / _338:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _352 / _338 * _375 / 10^12
        mem[mem[64] + 36] = 64
        _381 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _381:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _352 / _338 * _375 / 10^12, 64, mem[mem[64] + 68 len (32 * _381) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _467 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _473 = mem[_467]
        require mem[_467] <= test266151307()
        require _467 + mem[_467] + 31 < _467 + return_data.size
        _479 = mem[_467 + mem[_467]]
        if mem[_467 + mem[_467]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_467 + mem[_467]]) + 1 < 0 or _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1
        mem[_467 + ceil32(return_data.size)] = _479
        require _473 + (32 * _479) + 32 <= return_data.size
        u = _467 + ceil32(return_data.size) + 32
        t = _467 + _473 + 32
        while t < _467 + _473 + (32 * _479) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _479:
            revert with 0, 50
        _579 = mem[_467 + ceil32(return_data.size) + 64]
        mem[_232 + 128] = mem[_467 + ceil32(return_data.size) + 64]
        if v > !_579:
            revert with 0, 17
        if 0 >= mem[352]:
            revert with 0, 50
        mem[384] = mem[_232 + 236 len 20]
        _589 = mem[_232 + 224]
        _590 = mem[_232]
        require ext_code.size(mem[_232 + 236 len 20])
        staticcall mem[_232 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _597 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _599 = mem[_597]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_589))
        staticcall address(_589).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _605 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _607 = mem[_605]
        if mem[_605] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _599:
            revert with 0, 18
        mem[mem[64] + 4] = address(_590)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_590)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _613 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _615 = mem[_613]
        if 10^12 * _607 / _599 and mem[_613] > -1 / 10^12 * _607 / _599:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _607 / _599 * _615 / 10^12
        mem[mem[64] + 36] = 64
        _619 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _619:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_590))
        staticcall address(_590).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _607 / _599 * _615 / 10^12, 64, mem[mem[64] + 68 len (32 * _619) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _647 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _649 = mem[_647]
        require mem[_647] <= test266151307()
        require _647 + mem[_647] + 31 < _647 + return_data.size
        _651 = mem[_647 + mem[_647]]
        if mem[_647 + mem[_647]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_647 + mem[_647]]) + 1 < 0 or _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1
        mem[_647 + ceil32(return_data.size)] = _651
        require _649 + (32 * _651) + 32 <= return_data.size
        u = _647 + ceil32(return_data.size) + 32
        t = _647 + _649 + 32
        while t < _647 + _649 + (32 * _651) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _651:
            revert with 0, 50
        if mem[_232 + 128] > !mem[_647 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_232 + 128] = mem[_232 + 128] + mem[_647 + ceil32(return_data.size) + 64]
        if v + _579 > !mem[_232 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
        u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
        v = _262
        v = _232
        v = stor9[idx].field_0
        v = v + _579 + mem[_232 + 128]
        continue 
    return v
}

function autoCompound() {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _500 = mem[64]
        mem[64] = mem[64] + 256
        mem[_500] = strategyInfo[stor9[idx].field_0].field_0
        mem[_500 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_500 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_500 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_500 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_500 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_500 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_500 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _511 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _520 = mem[_511]
            if not mem[_511]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _500
                s = mem[_511]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _540 = mem[64]
            mem[64] = mem[64] + 256
            mem[_540] = strategyInfo[stor9[idx].field_0].field_0
            mem[_540 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_540 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_540 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_540 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_540 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_540 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_540 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _520
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _520
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _575 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _585 = mem[_575]
                require mem[_575] == mem[_575 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_575 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_585))
                staticcall address(_585).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _619 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _623 = mem[_619]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_585))
                staticcall address(_585).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _637 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _645 = mem[_637]
                if mem[_637] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _623:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _665 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _667 = mem[_665]
                if 10^12 * _645 / _623 and mem[_665] > -1 / 10^12 * _645 / _623:
                    revert with 0, 17
                _686 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _645 / _623 * _667 / 10^12
                mem[mem[64] + 36] = 64
                _697 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _697:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _686 + (32 * _697) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1270 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1277 = mem[_1270]
                require mem[_1270] <= test266151307()
                require _1270 + mem[_1270] + 31 < _1270 + return_data.size
                _1284 = mem[_1270 + mem[_1270]]
                if mem[_1270 + mem[_1270]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1270 + mem[_1270]]) + 1 < 0 or _1270 + ceil32(return_data.size) + ceil32(32 * mem[_1270 + mem[_1270]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1270 + ceil32(return_data.size) + ceil32(32 * mem[_1270 + mem[_1270]]) + 1
                mem[_1270 + ceil32(return_data.size)] = _1284
                require _1277 + (32 * _1284) + 32 <= return_data.size
                t = _1270 + ceil32(return_data.size) + 32
                s = _1270 + _1277 + 32
                while s < _1270 + _1277 + (32 * _1284) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1284:
                    revert with 0, 50
                _2444 = mem[_1270 + ceil32(return_data.size) + 64]
                if mem[_1270 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1270 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1270 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1270 + ceil32(return_data.size) + 64] < 100 * mem[_1270 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _2484 = mem[_500]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_585))
                staticcall address(_585).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2508 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2516 = mem[_2508]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _2530 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _2516
                mem[mem[64] + 36] = _2444 - (100 * _2444 / 10000)
                mem[mem[64] + 68] = 160
                _2536 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _2536:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_2530 + 100] = this.address
                mem[_2530 + 132] = block.timestamp + 60
                require ext_code.size(address(_2484))
                call address(_2484).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _2530 + (32 * _2536) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3704 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3712 = mem[_3704]
                require mem[_3704] <= test266151307()
                require _3704 + mem[_3704] + 31 < _3704 + return_data.size
                _3724 = mem[_3704 + mem[_3704]]
                if mem[_3704 + mem[_3704]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3704 + mem[_3704]]) + 1 < 0 or _3704 + ceil32(return_data.size) + ceil32(32 * mem[_3704 + mem[_3704]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3704 + ceil32(return_data.size) + ceil32(32 * mem[_3704 + mem[_3704]]) + 1
                mem[_3704 + ceil32(return_data.size)] = _3724
                require _3712 + (32 * _3724) + 32 <= return_data.size
                t = _3704 + ceil32(return_data.size) + 32
                s = _3704 + _3712 + 32
                while s < _3704 + _3712 + (32 * _3724) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _5164 = mem[_500]
                _5165 = mem[_500 + 192]
                _5166 = mem[_500 + 224]
                _5176 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_5176 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_5176]:
                    revert with 0, 50
                mem[_5176 + 32] = stor21
                if stor21 == address(_5165):
                    if stor21 == address(_5166):
                        mem[_5176 + 100] = this.address
                        require ext_code.size(address(_5165))
                        staticcall address(_5165).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5176 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_5176 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_5166))
                        staticcall address(_5166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5176 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_5176 + (2 * ceil32(return_data.size)) + 100] = address(_5164)
                        mem[_5176 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_5165))
                        call address(_5165).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[_5176 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_5176 + (4 * ceil32(return_data.size)) + 100] = address(_5164)
                        mem[_5176 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_5166))
                        call address(_5166).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[_5176 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                            revert with 0, 17
                        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5176 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_5176 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_5176 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                        mem[_5176 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                        mem[_5176 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_5176 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_5165), address(_5166), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                        mem[_5176 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5176 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _5486 = mem[_500 + 160]
                        _5487 = mem[_500 + 64]
                        _5488 = mem[_500 + 32]
                        mem[_5176 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_5488))
                        staticcall address(_5488).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5176 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5176 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _5487 >= 999999:
                            mem[_5176 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_5486))
                            call address(_5486).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5176 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _5618 = mem[_500 + 32]
                            mem[_5176 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_5618))
                            staticcall address(_5618).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5176 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_500 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5176 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5176 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5176 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _5832 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5176 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5176 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5176 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_5176 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5176 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5176 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5176 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_5832))
                            call address(_5832).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5176 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5176 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5176 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6716 = mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5176 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _6732 = mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5176 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5176 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5176 + (12 * ceil32(return_data.size)) + 96] = mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _6716 + (32 * _6732) + 32 <= return_data.size
                            t = _5176 + (12 * ceil32(return_data.size)) + 128
                            s = _5176 + (11 * ceil32(return_data.size)) + _6716 + 128
                            while s < _5176 + (11 * ceil32(return_data.size)) + _6716 + (32 * _6732) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7916 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_7916]
                        else:
                            mem[_5176 + (8 * ceil32(return_data.size)) + 100] = _5487
                            mem[_5176 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_5486))
                            call address(_5486).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _5487, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5176 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _5619 = mem[_500 + 32]
                            mem[_5176 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_5619))
                            staticcall address(_5619).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5176 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_500 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5176 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5176 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5176 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _5833 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5176 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5176 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5176 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_5176 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5176 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5176 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5176 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_5833))
                            call address(_5833).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5176 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5176 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5176 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6717 = mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5176 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _6733 = mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5176 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5176 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5176 + (12 * ceil32(return_data.size)) + 96] = mem[_5176 + (11 * ceil32(return_data.size)) + mem[_5176 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _6717 + (32 * _6733) + 32 <= return_data.size
                            t = _5176 + (12 * ceil32(return_data.size)) + 128
                            s = _5176 + (11 * ceil32(return_data.size)) + _6717 + 128
                            while s < _5176 + (11 * ceil32(return_data.size)) + _6717 + (32 * _6733) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7917 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_7917]
                    else:
                        if 1 >= mem[_5176]:
                            revert with 0, 50
                        mem[_5176 + 64] = address(_5166)
                        mem[_5176 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_5176 + 100] = eth.balance(this.address) / 2
                        mem[_5176 + 132] = 64
                        mem[_5176 + 164] = mem[_5176]
                        s = 0
                        t = _5176 + 32
                        u = _5176 + 196
                        while s < mem[_5176]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5164))
                        staticcall address(_5164).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _5176 + (32 * mem[_5176]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6706 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6724 = mem[_6706]
                        require mem[_6706] <= test266151307()
                        require _6706 + mem[_6706] + 31 < _6706 + return_data.size
                        _6740 = mem[_6706 + mem[_6706]]
                        if mem[_6706 + mem[_6706]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6706 + mem[_6706]]) + 1 < 0 or _6706 + ceil32(return_data.size) + ceil32(32 * mem[_6706 + mem[_6706]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _6706 + ceil32(return_data.size) + ceil32(32 * mem[_6706 + mem[_6706]]) + 1
                        mem[_6706 + ceil32(return_data.size)] = _6740
                        require _6724 + (32 * _6740) + 32 <= return_data.size
                        t = _6706 + ceil32(return_data.size) + 32
                        s = _6706 + _6724 + 32
                        while s < _6706 + _6724 + (32 * _6740) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _6740:
                            revert with 0, 50
                        _7892 = mem[_6706 + ceil32(return_data.size) + 64]
                        if mem[_6706 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6706 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_6706 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _6740:
                            revert with 0, 50
                        _7940 = mem[_6706 + ceil32(return_data.size) + 64]
                        if mem[_6706 + ceil32(return_data.size) + 64] < 100 * mem[_6706 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _7948 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _7940 - (100 * _7892 / 10000)
                        mem[mem[64] + 36] = 128
                        _7956 = mem[_5176]
                        mem[mem[64] + 132] = mem[_5176]
                        s = 0
                        t = _5176 + 32
                        u = mem[64] + 164
                        while s < _7956:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7948 + 68] = this.address
                        mem[_7948 + 100] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7948 + (32 * _7956) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9092 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9100 = mem[_9092]
                        require mem[_9092] <= test266151307()
                        require _9092 + mem[_9092] + 31 < _9092 + return_data.size
                        _9108 = mem[_9092 + mem[_9092]]
                        if mem[_9092 + mem[_9092]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_9092 + mem[_9092]]) + 1 < 0 or _9092 + ceil32(return_data.size) + ceil32(32 * mem[_9092 + mem[_9092]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _9092 + ceil32(return_data.size) + ceil32(32 * mem[_9092 + mem[_9092]]) + 1
                        mem[_9092 + ceil32(return_data.size)] = _9108
                        require _9100 + (32 * _9108) + 32 <= return_data.size
                        t = _9092 + ceil32(return_data.size) + 32
                        s = _9092 + _9100 + 32
                        while s < _9092 + _9100 + (32 * _9108) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5165))
                        staticcall address(_5165).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10312 = mem[_10302]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5166))
                        staticcall address(_5166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10346 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10356 = mem[_10346]
                        if not _10312:
                            revert with 0, 'Desired value is zero'
                        if not mem[_10346]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5165))
                        call address(_5165).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10428 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10428] == bool(mem[_10428])
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5166))
                        call address(_5166).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10468 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10468] == bool(mem[_10468])
                        if _10312 and 1 > -1 / _10312:
                            revert with 0, 17
                        if _10312 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _10312 < 100 * _10312 / 10000:
                            revert with 0, 17
                        if _10356 and 1 > -1 / _10356:
                            revert with 0, 17
                        if _10356 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _10356 < 100 * _10356 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _10312
                        mem[mem[64] + 100] = _10356
                        mem[mem[64] + 132] = _10312 - (100 * _10312 / 10000)
                        mem[mem[64] + 164] = _10356 - (100 * _10356 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_5165), address(_5166), _10312, _10356, _10312 - (100 * _10312 / 10000), _10356 - (100 * _10356 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _10582 = mem[_500 + 160]
                        _10583 = mem[_500 + 64]
                        _10584 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10584))
                        staticcall address(_10584).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10622 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10634 = mem[_10622]
                        if _10583 >= 999999:
                            mem[mem[64] + 4] = mem[_10622]
                            require ext_code.size(address(_10582))
                            call address(_10582).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _10634
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10634
                            emit Earn(_10634);
                            _10720 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10720))
                            staticcall address(_10720).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10782 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_10782]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10908 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10928 = mem[_10908]
                            _10952 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10976 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10928
                            mem[mem[64] + 36] = 128
                            _10992 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_10976 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10952))
                            call address(_10952).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10976 + (32 * _10992) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11512 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11532 = mem[_11512]
                            require mem[_11512] <= test266151307()
                            require _11512 + mem[_11512] + 31 < _11512 + return_data.size
                            _11552 = mem[_11512 + mem[_11512]]
                            if mem[_11512 + mem[_11512]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11512 + mem[_11512]]) + 1 < 0 or _11512 + ceil32(return_data.size) + ceil32(32 * mem[_11512 + mem[_11512]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11512 + ceil32(return_data.size) + ceil32(32 * mem[_11512 + mem[_11512]]) + 1
                            mem[_11512 + ceil32(return_data.size)] = _11552
                            require _11532 + (32 * _11552) + 32 <= return_data.size
                            t = _11512 + ceil32(return_data.size) + 32
                            s = _11512 + _11532 + 32
                            while s < _11512 + _11532 + (32 * _11552) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12152 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12152]
                        else:
                            mem[mem[64] + 4] = _10583
                            mem[mem[64] + 36] = _10634
                            require ext_code.size(address(_10582))
                            call address(_10582).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _10583, _10634
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10634
                            emit Earn(_10634);
                            _10721 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10721))
                            staticcall address(_10721).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10783 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_10783]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10909 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10929 = mem[_10909]
                            _10953 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10977 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10929
                            mem[mem[64] + 36] = 128
                            _10993 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_10977 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10953))
                            call address(_10953).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10977 + (32 * _10993) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11513 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11533 = mem[_11513]
                            require mem[_11513] <= test266151307()
                            require _11513 + mem[_11513] + 31 < _11513 + return_data.size
                            _11553 = mem[_11513 + mem[_11513]]
                            if mem[_11513 + mem[_11513]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11513 + mem[_11513]]) + 1 < 0 or _11513 + ceil32(return_data.size) + ceil32(32 * mem[_11513 + mem[_11513]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11513 + ceil32(return_data.size) + ceil32(32 * mem[_11513 + mem[_11513]]) + 1
                            mem[_11513 + ceil32(return_data.size)] = _11553
                            require _11533 + (32 * _11553) + 32 <= return_data.size
                            t = _11513 + ceil32(return_data.size) + 32
                            s = _11513 + _11533 + 32
                            while s < _11513 + _11533 + (32 * _11553) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12153 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12153]
                else:
                    if 1 >= mem[_5176]:
                        revert with 0, 50
                    mem[_5176 + 64] = address(_5165)
                    mem[_5176 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5176 + 100] = eth.balance(this.address) / 2
                    mem[_5176 + 132] = 64
                    mem[_5176 + 164] = mem[_5176]
                    s = 0
                    t = _5176 + 32
                    u = _5176 + 196
                    while s < mem[_5176]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5164))
                    staticcall address(_5164).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5176 + (32 * mem[_5176]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6707 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6725 = mem[_6707]
                    require mem[_6707] <= test266151307()
                    require _6707 + mem[_6707] + 31 < _6707 + return_data.size
                    _6741 = mem[_6707 + mem[_6707]]
                    if mem[_6707 + mem[_6707]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6707 + mem[_6707]]) + 1 < 0 or _6707 + ceil32(return_data.size) + ceil32(32 * mem[_6707 + mem[_6707]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6707 + ceil32(return_data.size) + ceil32(32 * mem[_6707 + mem[_6707]]) + 1
                    mem[_6707 + ceil32(return_data.size)] = _6741
                    require _6725 + (32 * _6741) + 32 <= return_data.size
                    t = _6707 + ceil32(return_data.size) + 32
                    s = _6707 + _6725 + 32
                    while s < _6707 + _6725 + (32 * _6741) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _6741:
                        revert with 0, 50
                    _7893 = mem[_6707 + ceil32(return_data.size) + 64]
                    if mem[_6707 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6707 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_6707 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _6741:
                        revert with 0, 50
                    _7941 = mem[_6707 + ceil32(return_data.size) + 64]
                    if mem[_6707 + ceil32(return_data.size) + 64] < 100 * mem[_6707 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7941 - (100 * _7893 / 10000)
                    mem[mem[64] + 36] = 128
                    _7957 = mem[_5176]
                    mem[mem[64] + 132] = mem[_5176]
                    s = 0
                    t = _5176 + 32
                    u = mem[64] + 164
                    while s < _7957:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_5164))
                    call address(_5164).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _7941 - (100 * _7893 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7957) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9093 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9101 = mem[_9093]
                    require mem[_9093] <= test266151307()
                    require _9093 + mem[_9093] + 31 < _9093 + return_data.size
                    _9109 = mem[_9093 + mem[_9093]]
                    if mem[_9093 + mem[_9093]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9093 + mem[_9093]]) + 1 < 0 or _9093 + ceil32(return_data.size) + ceil32(32 * mem[_9093 + mem[_9093]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9093 + ceil32(return_data.size) + ceil32(32 * mem[_9093 + mem[_9093]]) + 1
                    mem[_9093 + ceil32(return_data.size)] = _9109
                    require _9101 + (32 * _9109) + 32 <= return_data.size
                    t = _9093 + ceil32(return_data.size) + 32
                    s = _9093 + _9101 + 32
                    while s < _9093 + _9101 + (32 * _9109) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_5166):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5165))
                        staticcall address(_5165).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10318 = mem[_10306]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5166))
                        staticcall address(_5166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10350 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10362 = mem[_10350]
                        if not _10318:
                            revert with 0, 'Desired value is zero'
                        if not mem[_10350]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5165))
                        call address(_5165).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10434 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10434] == bool(mem[_10434])
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5166))
                        call address(_5166).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10476 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10476] == bool(mem[_10476])
                        if _10318 and 1 > -1 / _10318:
                            revert with 0, 17
                        if _10318 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _10318 < 100 * _10318 / 10000:
                            revert with 0, 17
                        if _10362 and 1 > -1 / _10362:
                            revert with 0, 17
                        if _10362 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _10362 < 100 * _10362 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _10318
                        mem[mem[64] + 100] = _10362
                        mem[mem[64] + 132] = _10318 - (100 * _10318 / 10000)
                        mem[mem[64] + 164] = _10362 - (100 * _10362 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_5165), address(_5166), _10318, _10362, _10318 - (100 * _10318 / 10000), _10362 - (100 * _10362 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _10600 = mem[_500 + 160]
                        _10601 = mem[_500 + 64]
                        _10602 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10602))
                        staticcall address(_10602).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10626 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10642 = mem[_10626]
                        if _10601 >= 999999:
                            mem[mem[64] + 4] = mem[_10626]
                            require ext_code.size(address(_10600))
                            call address(_10600).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _10642
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10642
                            emit Earn(_10642);
                            _10750 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10750))
                            staticcall address(_10750).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10792 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_10792]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10918 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10940 = mem[_10918]
                            _10962 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10984 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10940
                            mem[mem[64] + 36] = 128
                            _11000 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_10984 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10962))
                            call address(_10962).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10984 + (32 * _11000) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11514 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11534 = mem[_11514]
                            require mem[_11514] <= test266151307()
                            require _11514 + mem[_11514] + 31 < _11514 + return_data.size
                            _11554 = mem[_11514 + mem[_11514]]
                            if mem[_11514 + mem[_11514]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11514 + mem[_11514]]) + 1 < 0 or _11514 + ceil32(return_data.size) + ceil32(32 * mem[_11514 + mem[_11514]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11514 + ceil32(return_data.size) + ceil32(32 * mem[_11514 + mem[_11514]]) + 1
                            mem[_11514 + ceil32(return_data.size)] = _11554
                            require _11534 + (32 * _11554) + 32 <= return_data.size
                            t = _11514 + ceil32(return_data.size) + 32
                            s = _11514 + _11534 + 32
                            while s < _11514 + _11534 + (32 * _11554) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12154 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12154]
                        else:
                            mem[mem[64] + 4] = _10601
                            mem[mem[64] + 36] = _10642
                            require ext_code.size(address(_10600))
                            call address(_10600).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _10601, _10642
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10642
                            emit Earn(_10642);
                            _10751 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10751))
                            staticcall address(_10751).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_10793]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10919 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10941 = mem[_10919]
                            _10963 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10985 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10941
                            mem[mem[64] + 36] = 128
                            _11001 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11001:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10985 + 68] = this.address
                            mem[_10985 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10963))
                            call address(_10963).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10985 + (32 * _11001) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11515 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11535 = mem[_11515]
                            require mem[_11515] <= test266151307()
                            require _11515 + mem[_11515] + 31 < _11515 + return_data.size
                            _11555 = mem[_11515 + mem[_11515]]
                            if mem[_11515 + mem[_11515]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11515 + mem[_11515]]) + 1 < 0 or _11515 + ceil32(return_data.size) + ceil32(32 * mem[_11515 + mem[_11515]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11515 + ceil32(return_data.size) + ceil32(32 * mem[_11515 + mem[_11515]]) + 1
                            mem[_11515 + ceil32(return_data.size)] = _11555
                            require _11535 + (32 * _11555) + 32 <= return_data.size
                            t = _11515 + ceil32(return_data.size) + 32
                            s = _11515 + _11535 + 32
                            while s < _11515 + _11535 + (32 * _11555) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12155]
                    else:
                        if 1 >= mem[_5176]:
                            revert with 0, 50
                        mem[_5176 + 64] = address(_5166)
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _10322 = mem[_5176]
                        mem[mem[64] + 68] = mem[_5176]
                        s = 0
                        t = _5176 + 32
                        u = mem[64] + 100
                        while s < _10322:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5164))
                        staticcall address(_5164).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10322) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11522 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11542 = mem[_11522]
                        require mem[_11522] <= test266151307()
                        require _11522 + mem[_11522] + 31 < _11522 + return_data.size
                        _11562 = mem[_11522 + mem[_11522]]
                        if mem[_11522 + mem[_11522]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11522 + mem[_11522]]) + 1 < 0 or _11522 + ceil32(return_data.size) + ceil32(32 * mem[_11522 + mem[_11522]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11522 + ceil32(return_data.size) + ceil32(32 * mem[_11522 + mem[_11522]]) + 1
                        mem[_11522 + ceil32(return_data.size)] = _11562
                        require _11542 + (32 * _11562) + 32 <= return_data.size
                        t = _11522 + ceil32(return_data.size) + 32
                        s = _11522 + _11542 + 32
                        while s < _11522 + _11542 + (32 * _11562) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _11562:
                            revert with 0, 50
                        _12110 = mem[_11522 + ceil32(return_data.size) + 64]
                        if mem[_11522 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11522 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_11522 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _11562:
                            revert with 0, 50
                        _12182 = mem[_11522 + ceil32(return_data.size) + 64]
                        if mem[_11522 + ceil32(return_data.size) + 64] < 100 * mem[_11522 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12182 - (100 * _12110 / 10000)
                        mem[mem[64] + 36] = 128
                        _12190 = mem[_5176]
                        mem[mem[64] + 132] = mem[_5176]
                        s = 0
                        t = _5176 + 32
                        u = mem[64] + 164
                        while s < _12190:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args _12182 - (100 * _12110 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _12190) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12594 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12598 = mem[_12594]
                        require mem[_12594] <= test266151307()
                        require _12594 + mem[_12594] + 31 < _12594 + return_data.size
                        _12602 = mem[_12594 + mem[_12594]]
                        if mem[_12594 + mem[_12594]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12594 + mem[_12594]]) + 1 < 0 or _12594 + ceil32(return_data.size) + ceil32(32 * mem[_12594 + mem[_12594]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12594 + ceil32(return_data.size) + ceil32(32 * mem[_12594 + mem[_12594]]) + 1
                        mem[_12594 + ceil32(return_data.size)] = _12602
                        require _12598 + (32 * _12602) + 32 <= return_data.size
                        t = _12594 + ceil32(return_data.size) + 32
                        s = _12594 + _12598 + 32
                        while s < _12594 + _12598 + (32 * _12602) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5165))
                        staticcall address(_5165).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12994 = mem[_12990]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_5166))
                        staticcall address(_5166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13006 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13010 = mem[_13006]
                        if not _12994:
                            revert with 0, 'Desired value is zero'
                        if not mem[_13006]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5165))
                        call address(_5165).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13038] == bool(mem[_13038])
                        mem[mem[64] + 4] = address(_5164)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5166))
                        call address(_5166).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5164), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13054 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13054] == bool(mem[_13054])
                        if _12994 and 1 > -1 / _12994:
                            revert with 0, 17
                        if _12994 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _12994 < 100 * _12994 / 10000:
                            revert with 0, 17
                        if _13010 and 1 > -1 / _13010:
                            revert with 0, 17
                        if _13010 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _13010 < 100 * _13010 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _12994
                        mem[mem[64] + 100] = _13010
                        mem[mem[64] + 132] = _12994 - (100 * _12994 / 10000)
                        mem[mem[64] + 164] = _13010 - (100 * _13010 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_5164))
                        call address(_5164).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_5165), address(_5166), _12994, _13010, _12994 - (100 * _12994 / 10000), _13010 - (100 * _13010 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _13090 = mem[_500 + 160]
                        _13091 = mem[_500 + 64]
                        _13092 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13092))
                        staticcall address(_13092).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13106 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13110 = mem[_13106]
                        if _13091 >= 999999:
                            mem[mem[64] + 4] = mem[_13106]
                            require ext_code.size(address(_13090))
                            call address(_13090).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _13110
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13110
                            emit Earn(_13110);
                            _13148 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13148))
                            staticcall address(_13148).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_13172]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13220 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13228 = mem[_13220]
                            _13236 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13244 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13228
                            mem[mem[64] + 36] = 128
                            _13252 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13252:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13244 + 68] = this.address
                            mem[_13244 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13236))
                            call address(_13236).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13244 + (32 * _13252) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13364 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13372 = mem[_13364]
                            require mem[_13364] <= test266151307()
                            require _13364 + mem[_13364] + 31 < _13364 + return_data.size
                            _13380 = mem[_13364 + mem[_13364]]
                            if mem[_13364 + mem[_13364]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13364 + mem[_13364]]) + 1 < 0 or _13364 + ceil32(return_data.size) + ceil32(32 * mem[_13364 + mem[_13364]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13364 + ceil32(return_data.size) + ceil32(32 * mem[_13364 + mem[_13364]]) + 1
                            mem[_13364 + ceil32(return_data.size)] = _13380
                            require _13372 + (32 * _13380) + 32 <= return_data.size
                            t = _13364 + ceil32(return_data.size) + 32
                            s = _13364 + _13372 + 32
                            while s < _13364 + _13372 + (32 * _13380) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13460 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13460]
                        else:
                            mem[mem[64] + 4] = _13091
                            mem[mem[64] + 36] = _13110
                            require ext_code.size(address(_13090))
                            call address(_13090).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _13091, _13110
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13110
                            emit Earn(_13110);
                            _13149 = mem[_500 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13149))
                            staticcall address(_13149).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_500 + 96] = mem[_13173]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13229 = mem[_13221]
                            _13237 = mem[_500]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13245 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13229
                            mem[mem[64] + 36] = 128
                            _13253 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_13245 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13237))
                            call address(_13237).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13245 + (32 * _13253) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13365 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13373 = mem[_13365]
                            require mem[_13365] <= test266151307()
                            require _13365 + mem[_13365] + 31 < _13365 + return_data.size
                            _13381 = mem[_13365 + mem[_13365]]
                            if mem[_13365 + mem[_13365]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13365 + mem[_13365]]) + 1 < 0 or _13365 + ceil32(return_data.size) + ceil32(32 * mem[_13365 + mem[_13365]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13365 + ceil32(return_data.size) + ceil32(32 * mem[_13365 + mem[_13365]]) + 1
                            mem[_13365 + ceil32(return_data.size)] = _13381
                            require _13373 + (32 * _13381) + 32 <= return_data.size
                            t = _13365 + ceil32(return_data.size) + 32
                            s = _13365 + _13373 + 32
                            while s < _13365 + _13373 + (32 * _13381) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13461 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13461]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _500
                s = _2444 - (100 * _2444 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _520
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _520
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _576 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _586 = mem[_576]
            require mem[_576] == mem[_576 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_576 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_586))
            staticcall address(_586).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _620 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _624 = mem[_620]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_586))
            staticcall address(_586).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _638 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _646 = mem[_638]
            if mem[_638] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _624:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _666 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _668 = mem[_666]
            if 10^12 * _646 / _624 and mem[_666] > -1 / 10^12 * _646 / _624:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _646 / _624 * _668 / 10^12
            mem[mem[64] + 36] = 64
            _698 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _698) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1271 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1278 = mem[_1271]
            require mem[_1271] <= test266151307()
            require _1271 + mem[_1271] + 31 < _1271 + return_data.size
            _1285 = mem[_1271 + mem[_1271]]
            if mem[_1271 + mem[_1271]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1271 + mem[_1271]]) + 1 < 0 or _1271 + ceil32(return_data.size) + ceil32(32 * mem[_1271 + mem[_1271]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1271 + ceil32(return_data.size) + ceil32(32 * mem[_1271 + mem[_1271]]) + 1
            mem[_1271 + ceil32(return_data.size)] = _1285
            require _1278 + (32 * _1285) + 32 <= return_data.size
            t = _1271 + ceil32(return_data.size) + 32
            s = _1271 + _1278 + 32
            while s < _1271 + _1278 + (32 * _1285) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1285:
                revert with 0, 50
            _2445 = mem[_1271 + ceil32(return_data.size) + 64]
            if mem[_1271 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1271 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1271 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1271 + ceil32(return_data.size) + 64] < 100 * mem[_1271 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _2485 = mem[_500]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_586))
            staticcall address(_586).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2509 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2517 = mem[_2509]
            if 60 > !block.timestamp:
                revert with 0, 17
            _2531 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _2517
            mem[mem[64] + 36] = _2445 - (100 * _2445 / 10000)
            mem[mem[64] + 68] = 160
            _2537 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _2537:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_2531 + 100] = this.address
            mem[_2531 + 132] = block.timestamp + 60
            require ext_code.size(address(_2485))
            call address(_2485).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2531 + (32 * _2537) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3705 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3713 = mem[_3705]
            require mem[_3705] <= test266151307()
            require _3705 + mem[_3705] + 31 < _3705 + return_data.size
            _3725 = mem[_3705 + mem[_3705]]
            if mem[_3705 + mem[_3705]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3705 + mem[_3705]]) + 1 < 0 or _3705 + ceil32(return_data.size) + ceil32(32 * mem[_3705 + mem[_3705]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3705 + ceil32(return_data.size) + ceil32(32 * mem[_3705 + mem[_3705]]) + 1
            mem[_3705 + ceil32(return_data.size)] = _3725
            require _3713 + (32 * _3725) + 32 <= return_data.size
            t = _3705 + ceil32(return_data.size) + 32
            s = _3705 + _3713 + 32
            while s < _3705 + _3713 + (32 * _3725) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5167 = mem[_500]
            _5168 = mem[_500 + 192]
            _5169 = mem[_500 + 224]
            _5178 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5178 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5178]:
                revert with 0, 50
            mem[_5178 + 32] = stor21
            if stor21 == address(_5168):
                if stor21 == address(_5169):
                    mem[_5178 + 100] = this.address
                    require ext_code.size(address(_5168))
                    staticcall address(_5168).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5178 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_5178 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_5169))
                    staticcall address(_5169).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5178 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_5178 + (2 * ceil32(return_data.size)) + 100] = address(_5167)
                    mem[_5178 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5168))
                    call address(_5168).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[_5178 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_5178 + (4 * ceil32(return_data.size)) + 100] = address(_5167)
                    mem[_5178 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5169))
                    call address(_5169).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[_5178 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5178 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_5178 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_5178 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_5178 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_5178 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_5178 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5168), address(_5169), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                    mem[_5178 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5178 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _5490 = mem[_500 + 160]
                    _5491 = mem[_500 + 64]
                    _5492 = mem[_500 + 32]
                    mem[_5178 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_5492))
                    staticcall address(_5492).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5178 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5178 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _5491 >= 999999:
                        mem[_5178 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_5490))
                        call address(_5490).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5178 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5622 = mem[_500 + 32]
                        mem[_5178 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_5622))
                        staticcall address(_5622).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5178 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_500 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5178 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5178 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5178 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _5837 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5178 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5178 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5178 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_5178 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5178 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5178 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5178 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_5837))
                        call address(_5837).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5178 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5178 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5178 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6718 = mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5178 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _6734 = mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5178 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5178 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5178 + (12 * ceil32(return_data.size)) + 96] = _6734
                        require _6718 + (32 * _6734) + 32 <= return_data.size
                        t = _5178 + (12 * ceil32(return_data.size)) + 128
                        s = _5178 + (11 * ceil32(return_data.size)) + _6718 + 128
                        while s < _5178 + (11 * ceil32(return_data.size)) + _6718 + (32 * _6734) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7918 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_7918]
                    else:
                        mem[_5178 + (8 * ceil32(return_data.size)) + 100] = _5491
                        mem[_5178 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_5490))
                        call address(_5490).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _5491, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5178 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5623 = mem[_500 + 32]
                        mem[_5178 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_5623))
                        staticcall address(_5623).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5178 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_500 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5178 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5178 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5178 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _5838 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5178 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5178 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5178 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_5178 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5178 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5178 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5178 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_5838))
                        call address(_5838).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5178 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5178 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5178 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6719 = mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5178 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _6735 = mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5178 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5178 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5178 + (11 * ceil32(return_data.size)) + mem[_5178 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5178 + (12 * ceil32(return_data.size)) + 96] = _6735
                        require _6719 + (32 * _6735) + 32 <= return_data.size
                        t = _5178 + (12 * ceil32(return_data.size)) + 128
                        s = _5178 + (11 * ceil32(return_data.size)) + _6719 + 128
                        while s < _5178 + (11 * ceil32(return_data.size)) + _6719 + (32 * _6735) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7919 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_7919]
                else:
                    if 1 >= mem[_5178]:
                        revert with 0, 50
                    mem[_5178 + 64] = address(_5169)
                    mem[_5178 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5178 + 100] = eth.balance(this.address) / 2
                    mem[_5178 + 132] = 64
                    mem[_5178 + 164] = mem[_5178]
                    s = 0
                    t = _5178 + 32
                    u = _5178 + 196
                    while s < mem[_5178]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5167))
                    staticcall address(_5167).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5178 + (32 * mem[_5178]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6708 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6726 = mem[_6708]
                    require mem[_6708] <= test266151307()
                    require _6708 + mem[_6708] + 31 < _6708 + return_data.size
                    _6742 = mem[_6708 + mem[_6708]]
                    if mem[_6708 + mem[_6708]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6708 + mem[_6708]]) + 1 < 0 or _6708 + ceil32(return_data.size) + ceil32(32 * mem[_6708 + mem[_6708]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6708 + ceil32(return_data.size) + ceil32(32 * mem[_6708 + mem[_6708]]) + 1
                    mem[_6708 + ceil32(return_data.size)] = _6742
                    require _6726 + (32 * _6742) + 32 <= return_data.size
                    t = _6708 + ceil32(return_data.size) + 32
                    s = _6708 + _6726 + 32
                    while s < _6708 + _6726 + (32 * _6742) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _6742:
                        revert with 0, 50
                    _7894 = mem[_6708 + ceil32(return_data.size) + 64]
                    if mem[_6708 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6708 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_6708 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _6742:
                        revert with 0, 50
                    _7942 = mem[_6708 + ceil32(return_data.size) + 64]
                    if mem[_6708 + ceil32(return_data.size) + 64] < 100 * mem[_6708 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7942 - (100 * _7894 / 10000)
                    mem[mem[64] + 36] = 128
                    _7958 = mem[_5178]
                    mem[mem[64] + 132] = mem[_5178]
                    s = 0
                    t = _5178 + 32
                    u = mem[64] + 164
                    while s < _7958:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _7942 - (100 * _7894 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7958) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9094 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9102 = mem[_9094]
                    require mem[_9094] <= test266151307()
                    require _9094 + mem[_9094] + 31 < _9094 + return_data.size
                    _9110 = mem[_9094 + mem[_9094]]
                    if mem[_9094 + mem[_9094]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9094 + mem[_9094]]) + 1 < 0 or _9094 + ceil32(return_data.size) + ceil32(32 * mem[_9094 + mem[_9094]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9094 + ceil32(return_data.size) + ceil32(32 * mem[_9094 + mem[_9094]]) + 1
                    mem[_9094 + ceil32(return_data.size)] = _9110
                    require _9102 + (32 * _9110) + 32 <= return_data.size
                    t = _9094 + ceil32(return_data.size) + 32
                    s = _9094 + _9102 + 32
                    while s < _9094 + _9102 + (32 * _9110) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5168))
                    staticcall address(_5168).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10314 = mem[_10303]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5169))
                    staticcall address(_5169).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10347 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10358 = mem[_10347]
                    if not _10314:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10347]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5168))
                    call address(_5168).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10430 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10430] == bool(mem[_10430])
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5169))
                    call address(_5169).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10470 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10470] == bool(mem[_10470])
                    if _10314 and 1 > -1 / _10314:
                        revert with 0, 17
                    if _10314 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10314 < 100 * _10314 / 10000:
                        revert with 0, 17
                    if _10358 and 1 > -1 / _10358:
                        revert with 0, 17
                    if _10358 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10358 < 100 * _10358 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10314
                    mem[mem[64] + 100] = _10358
                    mem[mem[64] + 132] = _10314 - (100 * _10314 / 10000)
                    mem[mem[64] + 164] = _10358 - (100 * _10358 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5168), address(_5169), _10314, _10358, _10314 - (100 * _10314 / 10000), _10358 - (100 * _10358 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _10585 = mem[_500 + 160]
                    _10586 = mem[_500 + 64]
                    _10587 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10587))
                    staticcall address(_10587).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10623 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10637 = mem[_10623]
                    if _10586 >= 999999:
                        mem[mem[64] + 4] = mem[_10623]
                        require ext_code.size(address(_10585))
                        call address(_10585).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10637
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10637
                        emit Earn(_10637);
                        _10726 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10726))
                        staticcall address(_10726).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10785 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10785]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10910 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10930 = mem[_10910]
                        _10954 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10978 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10930
                        mem[mem[64] + 36] = 128
                        _10994 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10978 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10954))
                        call address(_10954).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10978 + (32 * _10994) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11516 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11536 = mem[_11516]
                        require mem[_11516] <= test266151307()
                        require _11516 + mem[_11516] + 31 < _11516 + return_data.size
                        _11556 = mem[_11516 + mem[_11516]]
                        if mem[_11516 + mem[_11516]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11516 + mem[_11516]]) + 1 < 0 or _11516 + ceil32(return_data.size) + ceil32(32 * mem[_11516 + mem[_11516]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11516 + ceil32(return_data.size) + ceil32(32 * mem[_11516 + mem[_11516]]) + 1
                        mem[_11516 + ceil32(return_data.size)] = _11556
                        require _11536 + (32 * _11556) + 32 <= return_data.size
                        t = _11516 + ceil32(return_data.size) + 32
                        s = _11516 + _11536 + 32
                        while s < _11516 + _11536 + (32 * _11556) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12156 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12156]
                    else:
                        mem[mem[64] + 4] = _10586
                        mem[mem[64] + 36] = _10637
                        require ext_code.size(address(_10585))
                        call address(_10585).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _10586, _10637
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10637
                        emit Earn(_10637);
                        _10727 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10727))
                        staticcall address(_10727).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10786 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10786]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10911 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10931 = mem[_10911]
                        _10955 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10979 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10931
                        mem[mem[64] + 36] = 128
                        _10995 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10979 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10955))
                        call address(_10955).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10979 + (32 * _10995) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11517 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11537 = mem[_11517]
                        require mem[_11517] <= test266151307()
                        require _11517 + mem[_11517] + 31 < _11517 + return_data.size
                        _11557 = mem[_11517 + mem[_11517]]
                        if mem[_11517 + mem[_11517]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11517 + mem[_11517]]) + 1 < 0 or _11517 + ceil32(return_data.size) + ceil32(32 * mem[_11517 + mem[_11517]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11517 + ceil32(return_data.size) + ceil32(32 * mem[_11517 + mem[_11517]]) + 1
                        mem[_11517 + ceil32(return_data.size)] = _11557
                        require _11537 + (32 * _11557) + 32 <= return_data.size
                        t = _11517 + ceil32(return_data.size) + 32
                        s = _11517 + _11537 + 32
                        while s < _11517 + _11537 + (32 * _11557) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12157 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12157]
            else:
                if 1 >= mem[_5178]:
                    revert with 0, 50
                mem[_5178 + 64] = address(_5168)
                mem[_5178 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5178 + 100] = eth.balance(this.address) / 2
                mem[_5178 + 132] = 64
                mem[_5178 + 164] = mem[_5178]
                s = 0
                t = _5178 + 32
                u = _5178 + 196
                while s < mem[_5178]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5167))
                staticcall address(_5167).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5178 + (32 * mem[_5178]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6709 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6727 = mem[_6709]
                require mem[_6709] <= test266151307()
                require _6709 + mem[_6709] + 31 < _6709 + return_data.size
                _6743 = mem[_6709 + mem[_6709]]
                if mem[_6709 + mem[_6709]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6709 + mem[_6709]]) + 1 < 0 or _6709 + ceil32(return_data.size) + ceil32(32 * mem[_6709 + mem[_6709]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6709 + ceil32(return_data.size) + ceil32(32 * mem[_6709 + mem[_6709]]) + 1
                mem[_6709 + ceil32(return_data.size)] = _6743
                require _6727 + (32 * _6743) + 32 <= return_data.size
                t = _6709 + ceil32(return_data.size) + 32
                s = _6709 + _6727 + 32
                while s < _6709 + _6727 + (32 * _6743) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _6743:
                    revert with 0, 50
                _7895 = mem[_6709 + ceil32(return_data.size) + 64]
                if mem[_6709 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6709 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_6709 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _6743:
                    revert with 0, 50
                _7943 = mem[_6709 + ceil32(return_data.size) + 64]
                if mem[_6709 + ceil32(return_data.size) + 64] < 100 * mem[_6709 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7943 - (100 * _7895 / 10000)
                mem[mem[64] + 36] = 128
                _7959 = mem[_5178]
                mem[mem[64] + 132] = mem[_5178]
                s = 0
                t = _5178 + 32
                u = mem[64] + 164
                while s < _7959:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_5167))
                call address(_5167).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _7943 - (100 * _7895 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7959) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9095 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9103 = mem[_9095]
                require mem[_9095] <= test266151307()
                require _9095 + mem[_9095] + 31 < _9095 + return_data.size
                _9111 = mem[_9095 + mem[_9095]]
                if mem[_9095 + mem[_9095]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9095 + mem[_9095]]) + 1 < 0 or _9095 + ceil32(return_data.size) + ceil32(32 * mem[_9095 + mem[_9095]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9095 + ceil32(return_data.size) + ceil32(32 * mem[_9095 + mem[_9095]]) + 1
                mem[_9095 + ceil32(return_data.size)] = _9111
                require _9103 + (32 * _9111) + 32 <= return_data.size
                t = _9095 + ceil32(return_data.size) + 32
                s = _9095 + _9103 + 32
                while s < _9095 + _9103 + (32 * _9111) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5169):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5168))
                    staticcall address(_5168).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10319 = mem[_10307]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5169))
                    staticcall address(_5169).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10351 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10363 = mem[_10351]
                    if not _10319:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10351]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5168))
                    call address(_5168).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10435 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10435] == bool(mem[_10435])
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5169))
                    call address(_5169).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10478 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10478] == bool(mem[_10478])
                    if _10319 and 1 > -1 / _10319:
                        revert with 0, 17
                    if _10319 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10319 < 100 * _10319 / 10000:
                        revert with 0, 17
                    if _10363 and 1 > -1 / _10363:
                        revert with 0, 17
                    if _10363 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10363 < 100 * _10363 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10319
                    mem[mem[64] + 100] = _10363
                    mem[mem[64] + 132] = _10319 - (100 * _10319 / 10000)
                    mem[mem[64] + 164] = _10363 - (100 * _10363 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5168), address(_5169), _10319, _10363, _10319 - (100 * _10319 / 10000), _10363 - (100 * _10363 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _10605 = mem[_500 + 160]
                    _10606 = mem[_500 + 64]
                    _10607 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10607))
                    staticcall address(_10607).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10627 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10643 = mem[_10627]
                    if _10606 >= 999999:
                        mem[mem[64] + 4] = mem[_10627]
                        require ext_code.size(address(_10605))
                        call address(_10605).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10643
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10643
                        emit Earn(_10643);
                        _10757 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10757))
                        staticcall address(_10757).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10794]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10921 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10944 = mem[_10921]
                        _10965 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10986 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10944
                        mem[mem[64] + 36] = 128
                        _11002 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10986 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10965))
                        call address(_10965).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10986 + (32 * _11002) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11518 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11538 = mem[_11518]
                        require mem[_11518] <= test266151307()
                        require _11518 + mem[_11518] + 31 < _11518 + return_data.size
                        _11558 = mem[_11518 + mem[_11518]]
                        if mem[_11518 + mem[_11518]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11518 + mem[_11518]]) + 1 < 0 or _11518 + ceil32(return_data.size) + ceil32(32 * mem[_11518 + mem[_11518]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11518 + ceil32(return_data.size) + ceil32(32 * mem[_11518 + mem[_11518]]) + 1
                        mem[_11518 + ceil32(return_data.size)] = _11558
                        require _11538 + (32 * _11558) + 32 <= return_data.size
                        t = _11518 + ceil32(return_data.size) + 32
                        s = _11518 + _11538 + 32
                        while s < _11518 + _11538 + (32 * _11558) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12158]
                    else:
                        mem[mem[64] + 4] = _10606
                        mem[mem[64] + 36] = _10643
                        require ext_code.size(address(_10605))
                        call address(_10605).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _10606, _10643
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10643
                        emit Earn(_10643);
                        _10758 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10758))
                        staticcall address(_10758).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10795 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10795]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10922 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10945 = mem[_10922]
                        _10966 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10987 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10945
                        mem[mem[64] + 36] = 128
                        _11003 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10987 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10966))
                        call address(_10966).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10987 + (32 * _11003) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11519 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11539 = mem[_11519]
                        require mem[_11519] <= test266151307()
                        require _11519 + mem[_11519] + 31 < _11519 + return_data.size
                        _11559 = mem[_11519 + mem[_11519]]
                        if mem[_11519 + mem[_11519]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11519 + mem[_11519]]) + 1 < 0 or _11519 + ceil32(return_data.size) + ceil32(32 * mem[_11519 + mem[_11519]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11519 + ceil32(return_data.size) + ceil32(32 * mem[_11519 + mem[_11519]]) + 1
                        mem[_11519 + ceil32(return_data.size)] = _11559
                        require _11539 + (32 * _11559) + 32 <= return_data.size
                        t = _11519 + ceil32(return_data.size) + 32
                        s = _11519 + _11539 + 32
                        while s < _11519 + _11539 + (32 * _11559) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12159 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12159]
                else:
                    if 1 >= mem[_5178]:
                        revert with 0, 50
                    mem[_5178 + 64] = address(_5169)
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10323 = mem[_5178]
                    mem[mem[64] + 68] = mem[_5178]
                    s = 0
                    t = _5178 + 32
                    u = mem[64] + 100
                    while s < _10323:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5167))
                    staticcall address(_5167).getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10323) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11523 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11543 = mem[_11523]
                    require mem[_11523] <= test266151307()
                    require _11523 + mem[_11523] + 31 < _11523 + return_data.size
                    _11563 = mem[_11523 + mem[_11523]]
                    if mem[_11523 + mem[_11523]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11523 + mem[_11523]]) + 1 < 0 or _11523 + ceil32(return_data.size) + ceil32(32 * mem[_11523 + mem[_11523]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11523 + ceil32(return_data.size) + ceil32(32 * mem[_11523 + mem[_11523]]) + 1
                    mem[_11523 + ceil32(return_data.size)] = _11563
                    require _11543 + (32 * _11563) + 32 <= return_data.size
                    t = _11523 + ceil32(return_data.size) + 32
                    s = _11523 + _11543 + 32
                    while s < _11523 + _11543 + (32 * _11563) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _11563:
                        revert with 0, 50
                    _12111 = mem[_11523 + ceil32(return_data.size) + 64]
                    if mem[_11523 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11523 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11523 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _11563:
                        revert with 0, 50
                    _12183 = mem[_11523 + ceil32(return_data.size) + 64]
                    if mem[_11523 + ceil32(return_data.size) + 64] < 100 * mem[_11523 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12183 - (100 * _12111 / 10000)
                    mem[mem[64] + 36] = 128
                    _12191 = mem[_5178]
                    mem[mem[64] + 132] = mem[_5178]
                    s = 0
                    t = _5178 + 32
                    u = mem[64] + 164
                    while s < _12191:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _12183 - (100 * _12111 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _12191) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12595 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12599 = mem[_12595]
                    require mem[_12595] <= test266151307()
                    require _12595 + mem[_12595] + 31 < _12595 + return_data.size
                    _12603 = mem[_12595 + mem[_12595]]
                    if mem[_12595 + mem[_12595]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12595 + mem[_12595]]) + 1 < 0 or _12595 + ceil32(return_data.size) + ceil32(32 * mem[_12595 + mem[_12595]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12595 + ceil32(return_data.size) + ceil32(32 * mem[_12595 + mem[_12595]]) + 1
                    mem[_12595 + ceil32(return_data.size)] = _12603
                    require _12599 + (32 * _12603) + 32 <= return_data.size
                    t = _12595 + ceil32(return_data.size) + 32
                    s = _12595 + _12599 + 32
                    while s < _12595 + _12599 + (32 * _12603) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5168))
                    staticcall address(_5168).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12991 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12995 = mem[_12991]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5169))
                    staticcall address(_5169).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13007 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13011 = mem[_13007]
                    if not _12995:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13007]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5168))
                    call address(_5168).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13039 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13039] == bool(mem[_13039])
                    mem[mem[64] + 4] = address(_5167)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5169))
                    call address(_5169).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5167), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13055 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13055] == bool(mem[_13055])
                    if _12995 and 1 > -1 / _12995:
                        revert with 0, 17
                    if _12995 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _12995 < 100 * _12995 / 10000:
                        revert with 0, 17
                    if _13011 and 1 > -1 / _13011:
                        revert with 0, 17
                    if _13011 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13011 < 100 * _13011 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _12995
                    mem[mem[64] + 100] = _13011
                    mem[mem[64] + 132] = _12995 - (100 * _12995 / 10000)
                    mem[mem[64] + 164] = _13011 - (100 * _13011 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5167))
                    call address(_5167).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5168), address(_5169), _12995, _13011, _12995 - (100 * _12995 / 10000), _13011 - (100 * _13011 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13093 = mem[_500 + 160]
                    _13094 = mem[_500 + 64]
                    _13095 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13095))
                    staticcall address(_13095).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13107 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13111 = mem[_13107]
                    if _13094 >= 999999:
                        mem[mem[64] + 4] = mem[_13107]
                        require ext_code.size(address(_13093))
                        call address(_13093).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13111
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13111
                        emit Earn(_13111);
                        _13150 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13150))
                        staticcall address(_13150).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_13174]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13230 = mem[_13222]
                        _13238 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13246 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13230
                        mem[mem[64] + 36] = 128
                        _13254 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13246 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13238))
                        call address(_13238).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13246 + (32 * _13254) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13366 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13374 = mem[_13366]
                        require mem[_13366] <= test266151307()
                        require _13366 + mem[_13366] + 31 < _13366 + return_data.size
                        _13382 = mem[_13366 + mem[_13366]]
                        if mem[_13366 + mem[_13366]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13366 + mem[_13366]]) + 1 < 0 or _13366 + ceil32(return_data.size) + ceil32(32 * mem[_13366 + mem[_13366]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13366 + ceil32(return_data.size) + ceil32(32 * mem[_13366 + mem[_13366]]) + 1
                        mem[_13366 + ceil32(return_data.size)] = _13382
                        require _13374 + (32 * _13382) + 32 <= return_data.size
                        t = _13366 + ceil32(return_data.size) + 32
                        s = _13366 + _13374 + 32
                        while s < _13366 + _13374 + (32 * _13382) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13462]
                    else:
                        mem[mem[64] + 4] = _13094
                        mem[mem[64] + 36] = _13111
                        require ext_code.size(address(_13093))
                        call address(_13093).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13094, _13111
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13111
                        emit Earn(_13111);
                        _13151 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13151))
                        staticcall address(_13151).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_13175]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13231 = mem[_13223]
                        _13239 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13247 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13231
                        mem[mem[64] + 36] = 128
                        _13255 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13247 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13239))
                        call address(_13239).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13247 + (32 * _13255) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13367 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13375 = mem[_13367]
                        require mem[_13367] <= test266151307()
                        require _13367 + mem[_13367] + 31 < _13367 + return_data.size
                        _13383 = mem[_13367 + mem[_13367]]
                        if mem[_13367 + mem[_13367]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13367 + mem[_13367]]) + 1 < 0 or _13367 + ceil32(return_data.size) + ceil32(32 * mem[_13367 + mem[_13367]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13367 + ceil32(return_data.size) + ceil32(32 * mem[_13367 + mem[_13367]]) + 1
                        mem[_13367 + ceil32(return_data.size)] = _13383
                        require _13375 + (32 * _13383) + 32 <= return_data.size
                        t = _13367 + ceil32(return_data.size) + 32
                        s = _13367 + _13375 + 32
                        while s < _13367 + _13375 + (32 * _13383) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13463 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13463]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _500
            s = _2445 - (100 * _2445 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _510 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _519 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_519] = mem[_510]
        mem[_519 + 32] = mem[_510 + 32]
        mem[_519 + 64] = mem[_510 + 64]
        require return_data.size - 96 >= 96
        _531 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_531] = mem[_510 + 96]
        mem[_531 + 32] = mem[_510 + 128]
        mem[_531 + 64] = mem[_510 + 160]
        mem[_519 + 96] = _531
        mem[_519 + 128] = mem[_510 + 192]
        require return_data.size - 224 >= 96
        _549 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_549] = mem[_510 + 224]
        mem[_549 + 32] = mem[_510 + 256]
        mem[_549 + 64] = mem[_510 + 288]
        mem[_519 + 160] = _549
        _561 = mem[_519 + 64]
        if not mem[_519 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _500
            s = mem[_519 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _578 = mem[64]
        mem[64] = mem[64] + 256
        mem[_578] = strategyInfo[stor9[idx].field_0].field_0
        mem[_578 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_578 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_578 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_578 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_578 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_578 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_578 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _561
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _561
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _607 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _611 = mem[_607]
            require mem[_607] == mem[_607 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_607 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_611))
            staticcall address(_611).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _648 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _651 = mem[_648]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_611))
            staticcall address(_611).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _658 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _664 = mem[_658]
            if mem[_658] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _651:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _685 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _696 = mem[_685]
            if 10^12 * _664 / _651 and mem[_685] > -1 / 10^12 * _664 / _651:
                revert with 0, 17
            _725 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _664 / _651 * _696 / 10^12
            mem[mem[64] + 36] = 64
            _739 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _739:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _725 + (32 * _739) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1269 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1276 = mem[_1269]
            require mem[_1269] <= test266151307()
            require _1269 + mem[_1269] + 31 < _1269 + return_data.size
            _1283 = mem[_1269 + mem[_1269]]
            if mem[_1269 + mem[_1269]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1269 + mem[_1269]]) + 1 < 0 or _1269 + ceil32(return_data.size) + ceil32(32 * mem[_1269 + mem[_1269]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1269 + ceil32(return_data.size) + ceil32(32 * mem[_1269 + mem[_1269]]) + 1
            mem[_1269 + ceil32(return_data.size)] = _1283
            require _1276 + (32 * _1283) + 32 <= return_data.size
            t = _1269 + ceil32(return_data.size) + 32
            s = _1269 + _1276 + 32
            while s < _1269 + _1276 + (32 * _1283) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1283:
                revert with 0, 50
            _2443 = mem[_1269 + ceil32(return_data.size) + 64]
            if mem[_1269 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1269 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1269 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1269 + ceil32(return_data.size) + 64] < 100 * mem[_1269 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _2483 = mem[_500]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_611))
            staticcall address(_611).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2507 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2515 = mem[_2507]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _2515
            mem[mem[64] + 36] = _2443 - (100 * _2443 / 10000)
            mem[mem[64] + 68] = 160
            _2535 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_2483))
            call address(_2483).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _2535) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3703 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3711 = mem[_3703]
            require mem[_3703] <= test266151307()
            require _3703 + mem[_3703] + 31 < _3703 + return_data.size
            _3723 = mem[_3703 + mem[_3703]]
            if mem[_3703 + mem[_3703]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3703 + mem[_3703]]) + 1 < 0 or _3703 + ceil32(return_data.size) + ceil32(32 * mem[_3703 + mem[_3703]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3703 + ceil32(return_data.size) + ceil32(32 * mem[_3703 + mem[_3703]]) + 1
            mem[_3703 + ceil32(return_data.size)] = _3723
            require _3711 + (32 * _3723) + 32 <= return_data.size
            t = _3703 + ceil32(return_data.size) + 32
            s = _3703 + _3711 + 32
            while s < _3703 + _3711 + (32 * _3723) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5161 = mem[_500]
            _5162 = mem[_500 + 192]
            _5163 = mem[_500 + 224]
            _5174 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5174 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5174]:
                revert with 0, 50
            mem[_5174 + 32] = stor21
            if stor21 == address(_5162):
                if stor21 == address(_5163):
                    mem[_5174 + 100] = this.address
                    require ext_code.size(address(_5162))
                    staticcall address(_5162).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5174 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_5174 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_5163))
                    staticcall address(_5163).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5174 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_5174 + (2 * ceil32(return_data.size)) + 100] = address(_5161)
                    mem[_5174 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5162))
                    call address(_5162).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[_5174 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_5174 + (4 * ceil32(return_data.size)) + 100] = address(_5161)
                    mem[_5174 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5163))
                    call address(_5163).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[_5174 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5174 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_5174 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_5174 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_5174 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_5174 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_5174 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5162), address(_5163), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                    mem[_5174 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5174 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _5482 = mem[_500 + 160]
                    _5483 = mem[_500 + 64]
                    _5484 = mem[_500 + 32]
                    mem[_5174 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_5484))
                    staticcall address(_5484).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5174 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5174 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _5483 >= 999999:
                        mem[_5174 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_5482))
                        call address(_5482).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5174 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5614 = mem[_500 + 32]
                        mem[_5174 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_5614))
                        staticcall address(_5614).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5174 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_500 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5174 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5174 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5174 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _5827 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5174 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5174 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5174 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_5174 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5174 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5174 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5174 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_5827))
                        call address(_5827).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5174 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5174 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5174 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6714 = mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5174 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _6730 = mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5174 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5174 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5174 + (12 * ceil32(return_data.size)) + 96] = mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _6714 + (32 * _6730) + 32 <= return_data.size
                        t = _5174 + (12 * ceil32(return_data.size)) + 128
                        s = _5174 + (11 * ceil32(return_data.size)) + _6714 + 128
                        while s < _5174 + (11 * ceil32(return_data.size)) + _6714 + (32 * _6730) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7914 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_7914]
                    else:
                        mem[_5174 + (8 * ceil32(return_data.size)) + 100] = _5483
                        mem[_5174 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_5482))
                        call address(_5482).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _5483, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5174 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5615 = mem[_500 + 32]
                        mem[_5174 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_5615))
                        staticcall address(_5615).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5174 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_500 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5174 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5174 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5174 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _5828 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5174 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5174 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5174 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_5174 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5174 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5174 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5174 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_5828))
                        call address(_5828).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5174 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5174 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5174 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6715 = mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5174 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _6731 = mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5174 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5174 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5174 + (12 * ceil32(return_data.size)) + 96] = mem[_5174 + (11 * ceil32(return_data.size)) + mem[_5174 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _6715 + (32 * _6731) + 32 <= return_data.size
                        t = _5174 + (12 * ceil32(return_data.size)) + 128
                        s = _5174 + (11 * ceil32(return_data.size)) + _6715 + 128
                        while s < _5174 + (11 * ceil32(return_data.size)) + _6715 + (32 * _6731) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7915 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_7915]
                else:
                    if 1 >= mem[_5174]:
                        revert with 0, 50
                    mem[_5174 + 64] = address(_5163)
                    mem[_5174 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5174 + 100] = eth.balance(this.address) / 2
                    mem[_5174 + 132] = 64
                    mem[_5174 + 164] = mem[_5174]
                    s = 0
                    t = _5174 + 32
                    u = _5174 + 196
                    while s < mem[_5174]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5161))
                    staticcall address(_5161).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5174 + (32 * mem[_5174]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6704 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6722 = mem[_6704]
                    require mem[_6704] <= test266151307()
                    require _6704 + mem[_6704] + 31 < _6704 + return_data.size
                    _6738 = mem[_6704 + mem[_6704]]
                    if mem[_6704 + mem[_6704]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6704 + mem[_6704]]) + 1 < 0 or _6704 + ceil32(return_data.size) + ceil32(32 * mem[_6704 + mem[_6704]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6704 + ceil32(return_data.size) + ceil32(32 * mem[_6704 + mem[_6704]]) + 1
                    mem[_6704 + ceil32(return_data.size)] = _6738
                    require _6722 + (32 * _6738) + 32 <= return_data.size
                    t = _6704 + ceil32(return_data.size) + 32
                    s = _6704 + _6722 + 32
                    while s < _6704 + _6722 + (32 * _6738) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _6738:
                        revert with 0, 50
                    _7890 = mem[_6704 + ceil32(return_data.size) + 64]
                    if mem[_6704 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6704 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_6704 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _6738:
                        revert with 0, 50
                    _7938 = mem[_6704 + ceil32(return_data.size) + 64]
                    if mem[_6704 + ceil32(return_data.size) + 64] < 100 * mem[_6704 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _7946 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7938 - (100 * _7890 / 10000)
                    mem[mem[64] + 36] = 128
                    _7954 = mem[_5174]
                    mem[mem[64] + 132] = mem[_5174]
                    s = 0
                    t = _5174 + 32
                    u = mem[64] + 164
                    while s < _7954:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7946 + 68] = this.address
                    mem[_7946 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7946 + (32 * _7954) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9090 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9098 = mem[_9090]
                    require mem[_9090] <= test266151307()
                    require _9090 + mem[_9090] + 31 < _9090 + return_data.size
                    _9106 = mem[_9090 + mem[_9090]]
                    if mem[_9090 + mem[_9090]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9090 + mem[_9090]]) + 1 < 0 or _9090 + ceil32(return_data.size) + ceil32(32 * mem[_9090 + mem[_9090]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9090 + ceil32(return_data.size) + ceil32(32 * mem[_9090 + mem[_9090]]) + 1
                    mem[_9090 + ceil32(return_data.size)] = _9106
                    require _9098 + (32 * _9106) + 32 <= return_data.size
                    t = _9090 + ceil32(return_data.size) + 32
                    s = _9090 + _9098 + 32
                    while s < _9090 + _9098 + (32 * _9106) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5162))
                    staticcall address(_5162).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10301 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10310 = mem[_10301]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5163))
                    staticcall address(_5163).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10345 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10354 = mem[_10345]
                    if not _10310:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10345]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5162))
                    call address(_5162).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10426 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10426] == bool(mem[_10426])
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5163))
                    call address(_5163).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10466] == bool(mem[_10466])
                    if _10310 and 1 > -1 / _10310:
                        revert with 0, 17
                    if _10310 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10310 < 100 * _10310 / 10000:
                        revert with 0, 17
                    if _10354 and 1 > -1 / _10354:
                        revert with 0, 17
                    if _10354 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10354 < 100 * _10354 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10310
                    mem[mem[64] + 100] = _10354
                    mem[mem[64] + 132] = _10310 - (100 * _10310 / 10000)
                    mem[mem[64] + 164] = _10354 - (100 * _10354 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5162), address(_5163), _10310, _10354, _10310 - (100 * _10310 / 10000), _10354 - (100 * _10354 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _10579 = mem[_500 + 160]
                    _10580 = mem[_500 + 64]
                    _10581 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10581))
                    staticcall address(_10581).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10621 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10631 = mem[_10621]
                    if _10580 >= 999999:
                        mem[mem[64] + 4] = mem[_10621]
                        require ext_code.size(address(_10579))
                        call address(_10579).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10631
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10631
                        emit Earn(_10631);
                        _10714 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10714))
                        staticcall address(_10714).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10779 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10779]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10906 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10926 = mem[_10906]
                        _10950 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10974 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10926
                        mem[mem[64] + 36] = 128
                        _10990 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10974 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10950))
                        call address(_10950).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10974 + (32 * _10990) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11508 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11528 = mem[_11508]
                        require mem[_11508] <= test266151307()
                        require _11508 + mem[_11508] + 31 < _11508 + return_data.size
                        _11548 = mem[_11508 + mem[_11508]]
                        if mem[_11508 + mem[_11508]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11508 + mem[_11508]]) + 1 < 0 or _11508 + ceil32(return_data.size) + ceil32(32 * mem[_11508 + mem[_11508]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11508 + ceil32(return_data.size) + ceil32(32 * mem[_11508 + mem[_11508]]) + 1
                        mem[_11508 + ceil32(return_data.size)] = _11548
                        require _11528 + (32 * _11548) + 32 <= return_data.size
                        t = _11508 + ceil32(return_data.size) + 32
                        s = _11508 + _11528 + 32
                        while s < _11508 + _11528 + (32 * _11548) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12148 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12148]
                    else:
                        mem[mem[64] + 4] = _10580
                        mem[mem[64] + 36] = _10631
                        require ext_code.size(address(_10579))
                        call address(_10579).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _10580, _10631
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10631
                        emit Earn(_10631);
                        _10715 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10715))
                        staticcall address(_10715).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10780]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10907 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10927 = mem[_10907]
                        _10951 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10975 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10927
                        mem[mem[64] + 36] = 128
                        _10991 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10975 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10951))
                        call address(_10951).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10975 + (32 * _10991) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11509 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11529 = mem[_11509]
                        require mem[_11509] <= test266151307()
                        require _11509 + mem[_11509] + 31 < _11509 + return_data.size
                        _11549 = mem[_11509 + mem[_11509]]
                        if mem[_11509 + mem[_11509]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11509 + mem[_11509]]) + 1 < 0 or _11509 + ceil32(return_data.size) + ceil32(32 * mem[_11509 + mem[_11509]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11509 + ceil32(return_data.size) + ceil32(32 * mem[_11509 + mem[_11509]]) + 1
                        mem[_11509 + ceil32(return_data.size)] = _11549
                        require _11529 + (32 * _11549) + 32 <= return_data.size
                        t = _11509 + ceil32(return_data.size) + 32
                        s = _11509 + _11529 + 32
                        while s < _11509 + _11529 + (32 * _11549) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12149 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12149]
            else:
                if 1 >= mem[_5174]:
                    revert with 0, 50
                mem[_5174 + 64] = address(_5162)
                mem[_5174 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5174 + 100] = eth.balance(this.address) / 2
                mem[_5174 + 132] = 64
                mem[_5174 + 164] = mem[_5174]
                s = 0
                t = _5174 + 32
                u = _5174 + 196
                while s < mem[_5174]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5161))
                staticcall address(_5161).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5174 + (32 * mem[_5174]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6705 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6723 = mem[_6705]
                require mem[_6705] <= test266151307()
                require _6705 + mem[_6705] + 31 < _6705 + return_data.size
                _6739 = mem[_6705 + mem[_6705]]
                if mem[_6705 + mem[_6705]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6705 + mem[_6705]]) + 1 < 0 or _6705 + ceil32(return_data.size) + ceil32(32 * mem[_6705 + mem[_6705]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6705 + ceil32(return_data.size) + ceil32(32 * mem[_6705 + mem[_6705]]) + 1
                mem[_6705 + ceil32(return_data.size)] = _6739
                require _6723 + (32 * _6739) + 32 <= return_data.size
                t = _6705 + ceil32(return_data.size) + 32
                s = _6705 + _6723 + 32
                while s < _6705 + _6723 + (32 * _6739) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _6739:
                    revert with 0, 50
                _7891 = mem[_6705 + ceil32(return_data.size) + 64]
                if mem[_6705 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6705 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_6705 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _6739:
                    revert with 0, 50
                _7939 = mem[_6705 + ceil32(return_data.size) + 64]
                if mem[_6705 + ceil32(return_data.size) + 64] < 100 * mem[_6705 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7939 - (100 * _7891 / 10000)
                mem[mem[64] + 36] = 128
                _7955 = mem[_5174]
                mem[mem[64] + 132] = mem[_5174]
                s = 0
                t = _5174 + 32
                u = mem[64] + 164
                while s < _7955:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_5161))
                call address(_5161).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _7939 - (100 * _7891 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7955) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9091 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9099 = mem[_9091]
                require mem[_9091] <= test266151307()
                require _9091 + mem[_9091] + 31 < _9091 + return_data.size
                _9107 = mem[_9091 + mem[_9091]]
                if mem[_9091 + mem[_9091]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9091 + mem[_9091]]) + 1 < 0 or _9091 + ceil32(return_data.size) + ceil32(32 * mem[_9091 + mem[_9091]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9091 + ceil32(return_data.size) + ceil32(32 * mem[_9091 + mem[_9091]]) + 1
                mem[_9091 + ceil32(return_data.size)] = _9107
                require _9099 + (32 * _9107) + 32 <= return_data.size
                t = _9091 + ceil32(return_data.size) + 32
                s = _9091 + _9099 + 32
                while s < _9091 + _9099 + (32 * _9107) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5163):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5162))
                    staticcall address(_5162).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10305 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10317 = mem[_10305]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5163))
                    staticcall address(_5163).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10349 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10361 = mem[_10349]
                    if not _10317:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10349]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5162))
                    call address(_5162).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10433 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10433] == bool(mem[_10433])
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5163))
                    call address(_5163).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10474 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10474] == bool(mem[_10474])
                    if _10317 and 1 > -1 / _10317:
                        revert with 0, 17
                    if _10317 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10317 < 100 * _10317 / 10000:
                        revert with 0, 17
                    if _10361 and 1 > -1 / _10361:
                        revert with 0, 17
                    if _10361 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _10361 < 100 * _10361 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10317
                    mem[mem[64] + 100] = _10361
                    mem[mem[64] + 132] = _10317 - (100 * _10317 / 10000)
                    mem[mem[64] + 164] = _10361 - (100 * _10361 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5162), address(_5163), _10317, _10361, _10317 - (100 * _10317 / 10000), _10361 - (100 * _10361 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _10595 = mem[_500 + 160]
                    _10596 = mem[_500 + 64]
                    _10597 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10597))
                    staticcall address(_10597).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10625 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10641 = mem[_10625]
                    if _10596 >= 999999:
                        mem[mem[64] + 4] = mem[_10625]
                        require ext_code.size(address(_10595))
                        call address(_10595).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10641
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10641
                        emit Earn(_10641);
                        _10743 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10743))
                        staticcall address(_10743).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10790 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10790]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10915 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10936 = mem[_10915]
                        _10959 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10982 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10936
                        mem[mem[64] + 36] = 128
                        _10998 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10998:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10982 + 68] = this.address
                        mem[_10982 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10959))
                        call address(_10959).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10982 + (32 * _10998) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11510 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11530 = mem[_11510]
                        require mem[_11510] <= test266151307()
                        require _11510 + mem[_11510] + 31 < _11510 + return_data.size
                        _11550 = mem[_11510 + mem[_11510]]
                        if mem[_11510 + mem[_11510]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11510 + mem[_11510]]) + 1 < 0 or _11510 + ceil32(return_data.size) + ceil32(32 * mem[_11510 + mem[_11510]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11510 + ceil32(return_data.size) + ceil32(32 * mem[_11510 + mem[_11510]]) + 1
                        mem[_11510 + ceil32(return_data.size)] = _11550
                        require _11530 + (32 * _11550) + 32 <= return_data.size
                        t = _11510 + ceil32(return_data.size) + 32
                        s = _11510 + _11530 + 32
                        while s < _11510 + _11530 + (32 * _11550) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12150]
                    else:
                        mem[mem[64] + 4] = _10596
                        mem[mem[64] + 36] = _10641
                        require ext_code.size(address(_10595))
                        call address(_10595).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _10596, _10641
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10641
                        emit Earn(_10641);
                        _10744 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10744))
                        staticcall address(_10744).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10791 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_10791]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10916 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10937 = mem[_10916]
                        _10960 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10983 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10937
                        mem[mem[64] + 36] = 128
                        _10999 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10983 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10960))
                        call address(_10960).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10983 + (32 * _10999) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11511 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11531 = mem[_11511]
                        require mem[_11511] <= test266151307()
                        require _11511 + mem[_11511] + 31 < _11511 + return_data.size
                        _11551 = mem[_11511 + mem[_11511]]
                        if mem[_11511 + mem[_11511]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11511 + mem[_11511]]) + 1 < 0 or _11511 + ceil32(return_data.size) + ceil32(32 * mem[_11511 + mem[_11511]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11511 + ceil32(return_data.size) + ceil32(32 * mem[_11511 + mem[_11511]]) + 1
                        mem[_11511 + ceil32(return_data.size)] = _11551
                        require _11531 + (32 * _11551) + 32 <= return_data.size
                        t = _11511 + ceil32(return_data.size) + 32
                        s = _11511 + _11531 + 32
                        while s < _11511 + _11531 + (32 * _11551) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12151 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12151]
                else:
                    if 1 >= mem[_5174]:
                        revert with 0, 50
                    mem[_5174 + 64] = address(_5163)
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10321 = mem[_5174]
                    mem[mem[64] + 68] = mem[_5174]
                    s = 0
                    t = _5174 + 32
                    u = mem[64] + 100
                    while s < _10321:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5161))
                    staticcall address(_5161).getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10321) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11521 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11541 = mem[_11521]
                    require mem[_11521] <= test266151307()
                    require _11521 + mem[_11521] + 31 < _11521 + return_data.size
                    _11561 = mem[_11521 + mem[_11521]]
                    if mem[_11521 + mem[_11521]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11521 + mem[_11521]]) + 1 < 0 or _11521 + ceil32(return_data.size) + ceil32(32 * mem[_11521 + mem[_11521]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11521 + ceil32(return_data.size) + ceil32(32 * mem[_11521 + mem[_11521]]) + 1
                    mem[_11521 + ceil32(return_data.size)] = _11561
                    require _11541 + (32 * _11561) + 32 <= return_data.size
                    t = _11521 + ceil32(return_data.size) + 32
                    s = _11521 + _11541 + 32
                    while s < _11521 + _11541 + (32 * _11561) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _11561:
                        revert with 0, 50
                    _12109 = mem[_11521 + ceil32(return_data.size) + 64]
                    if mem[_11521 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11521 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11521 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _11561:
                        revert with 0, 50
                    _12181 = mem[_11521 + ceil32(return_data.size) + 64]
                    if mem[_11521 + ceil32(return_data.size) + 64] < 100 * mem[_11521 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12181 - (100 * _12109 / 10000)
                    mem[mem[64] + 36] = 128
                    _12189 = mem[_5174]
                    mem[mem[64] + 132] = mem[_5174]
                    s = 0
                    t = _5174 + 32
                    u = mem[64] + 164
                    while s < _12189:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _12181 - (100 * _12109 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _12189) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12593 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12597 = mem[_12593]
                    require mem[_12593] <= test266151307()
                    require _12593 + mem[_12593] + 31 < _12593 + return_data.size
                    _12601 = mem[_12593 + mem[_12593]]
                    if mem[_12593 + mem[_12593]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12593 + mem[_12593]]) + 1 < 0 or _12593 + ceil32(return_data.size) + ceil32(32 * mem[_12593 + mem[_12593]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12593 + ceil32(return_data.size) + ceil32(32 * mem[_12593 + mem[_12593]]) + 1
                    mem[_12593 + ceil32(return_data.size)] = _12601
                    require _12597 + (32 * _12601) + 32 <= return_data.size
                    t = _12593 + ceil32(return_data.size) + 32
                    s = _12593 + _12597 + 32
                    while s < _12593 + _12597 + (32 * _12601) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5162))
                    staticcall address(_5162).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12989 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12993 = mem[_12989]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_5163))
                    staticcall address(_5163).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13005 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13009 = mem[_13005]
                    if not _12993:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13005]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5162))
                    call address(_5162).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13037] == bool(mem[_13037])
                    mem[mem[64] + 4] = address(_5161)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5163))
                    call address(_5163).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5161), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13053 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13053] == bool(mem[_13053])
                    if _12993 and 1 > -1 / _12993:
                        revert with 0, 17
                    if _12993 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _12993 < 100 * _12993 / 10000:
                        revert with 0, 17
                    if _13009 and 1 > -1 / _13009:
                        revert with 0, 17
                    if _13009 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13009 < 100 * _13009 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _12993
                    mem[mem[64] + 100] = _13009
                    mem[mem[64] + 132] = _12993 - (100 * _12993 / 10000)
                    mem[mem[64] + 164] = _13009 - (100 * _13009 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_5161))
                    call address(_5161).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_5162), address(_5163), _12993, _13009, _12993 - (100 * _12993 / 10000), _13009 - (100 * _13009 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13087 = mem[_500 + 160]
                    _13088 = mem[_500 + 64]
                    _13089 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13089))
                    staticcall address(_13089).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13105 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13109 = mem[_13105]
                    if _13088 >= 999999:
                        mem[mem[64] + 4] = mem[_13105]
                        require ext_code.size(address(_13087))
                        call address(_13087).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13109
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13109
                        emit Earn(_13109);
                        _13146 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13146))
                        staticcall address(_13146).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13170 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_13170]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13218 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13226 = mem[_13218]
                        _13234 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13242 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13226
                        mem[mem[64] + 36] = 128
                        _13250 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13250:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13242 + 68] = this.address
                        mem[_13242 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13234))
                        call address(_13234).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13242 + (32 * _13250) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13362 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13370 = mem[_13362]
                        require mem[_13362] <= test266151307()
                        require _13362 + mem[_13362] + 31 < _13362 + return_data.size
                        _13378 = mem[_13362 + mem[_13362]]
                        if mem[_13362 + mem[_13362]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13362 + mem[_13362]]) + 1 < 0 or _13362 + ceil32(return_data.size) + ceil32(32 * mem[_13362 + mem[_13362]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13362 + ceil32(return_data.size) + ceil32(32 * mem[_13362 + mem[_13362]]) + 1
                        mem[_13362 + ceil32(return_data.size)] = _13378
                        require _13370 + (32 * _13378) + 32 <= return_data.size
                        t = _13362 + ceil32(return_data.size) + 32
                        s = _13362 + _13370 + 32
                        while s < _13362 + _13370 + (32 * _13378) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13458 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13458]
                    else:
                        mem[mem[64] + 4] = _13088
                        mem[mem[64] + 36] = _13109
                        require ext_code.size(address(_13087))
                        call address(_13087).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13088, _13109
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13109
                        emit Earn(_13109);
                        _13147 = mem[_500 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13147))
                        staticcall address(_13147).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_500 + 96] = mem[_13171]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13219 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13227 = mem[_13219]
                        _13235 = mem[_500]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13243 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13227
                        mem[mem[64] + 36] = 128
                        _13251 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13243 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13235))
                        call address(_13235).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13243 + (32 * _13251) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13363 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13371 = mem[_13363]
                        require mem[_13363] <= test266151307()
                        require _13363 + mem[_13363] + 31 < _13363 + return_data.size
                        _13379 = mem[_13363 + mem[_13363]]
                        if mem[_13363 + mem[_13363]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13363 + mem[_13363]]) + 1 < 0 or _13363 + ceil32(return_data.size) + ceil32(32 * mem[_13363 + mem[_13363]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13363 + ceil32(return_data.size) + ceil32(32 * mem[_13363 + mem[_13363]]) + 1
                        mem[_13363 + ceil32(return_data.size)] = _13379
                        require _13371 + (32 * _13379) + 32 <= return_data.size
                        t = _13363 + ceil32(return_data.size) + 32
                        s = _13363 + _13371 + 32
                        while s < _13363 + _13371 + (32 * _13379) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13459 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13459]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _500
            s = _2443 - (100 * _2443 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = _561
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
             gas gas_remaining wei
            args _561
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _606 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _610 = mem[_606]
        require mem[_606] == mem[_606 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_606 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_610))
        staticcall address(_610).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _647 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _650 = mem[_647]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_610))
        staticcall address(_610).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _657 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _663 = mem[_657]
        if mem[_657] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _650:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _684 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _695 = mem[_684]
        if 10^12 * _663 / _650 and mem[_684] > -1 / 10^12 * _663 / _650:
            revert with 0, 17
        _724 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _663 / _650 * _695 / 10^12
        mem[mem[64] + 36] = 64
        _738 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < _738:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _724 + (32 * _738) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1268 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1275 = mem[_1268]
        require mem[_1268] <= test266151307()
        require _1268 + mem[_1268] + 31 < _1268 + return_data.size
        _1282 = mem[_1268 + mem[_1268]]
        if mem[_1268 + mem[_1268]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1268 + mem[_1268]]) + 1 < 0 or _1268 + ceil32(return_data.size) + ceil32(32 * mem[_1268 + mem[_1268]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1268 + ceil32(return_data.size) + ceil32(32 * mem[_1268 + mem[_1268]]) + 1
        mem[_1268 + ceil32(return_data.size)] = _1282
        require _1275 + (32 * _1282) + 32 <= return_data.size
        t = _1268 + ceil32(return_data.size) + 32
        s = _1268 + _1275 + 32
        while s < _1268 + _1275 + (32 * _1282) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1282:
            revert with 0, 50
        _2442 = mem[_1268 + ceil32(return_data.size) + 64]
        if mem[_1268 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1268 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1268 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1268 + ceil32(return_data.size) + 64] < 100 * mem[_1268 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _2482 = mem[_500]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_610))
        staticcall address(_610).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2506 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2514 = mem[_2506]
        if 60 > !block.timestamp:
            revert with 0, 17
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _2514
        mem[mem[64] + 36] = _2442 - (100 * _2442 / 10000)
        mem[mem[64] + 68] = 160
        _2534 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = block.timestamp + 60
        require ext_code.size(address(_2482))
        call address(_2482).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _2534) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3702 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3710 = mem[_3702]
        require mem[_3702] <= test266151307()
        require _3702 + mem[_3702] + 31 < _3702 + return_data.size
        _3722 = mem[_3702 + mem[_3702]]
        if mem[_3702 + mem[_3702]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3702 + mem[_3702]]) + 1 < 0 or _3702 + ceil32(return_data.size) + ceil32(32 * mem[_3702 + mem[_3702]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3702 + ceil32(return_data.size) + ceil32(32 * mem[_3702 + mem[_3702]]) + 1
        mem[_3702 + ceil32(return_data.size)] = _3722
        require _3710 + (32 * _3722) + 32 <= return_data.size
        t = _3702 + ceil32(return_data.size) + 32
        s = _3702 + _3710 + 32
        while s < _3702 + _3710 + (32 * _3722) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _5158 = mem[_500]
        _5159 = mem[_500 + 192]
        _5160 = mem[_500 + 224]
        _5172 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_5172 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_5172]:
            revert with 0, 50
        mem[_5172 + 32] = stor21
        if stor21 == address(_5159):
            if stor21 == address(_5160):
                mem[_5172 + 100] = this.address
                require ext_code.size(address(_5159))
                staticcall address(_5159).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_5172 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_5172 + ceil32(return_data.size) + 100] = this.address
                require ext_code.size(address(_5160))
                staticcall address(_5160).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_5172 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                mem[_5172 + (2 * ceil32(return_data.size)) + 100] = address(_5158)
                mem[_5172 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_5159))
                call address(_5159).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[_5172 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_5172 + (4 * ceil32(return_data.size)) + 100] = address(_5158)
                mem[_5172 + (4 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_5160))
                call address(_5160).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[_5172 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                    revert with 0, 17
                if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_5172 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                mem[_5172 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                mem[_5172 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                mem[_5172 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                mem[_5172 + (6 * ceil32(return_data.size)) + 292] = this.address
                mem[_5172 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_5159), address(_5160), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                mem[_5172 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _5172 + (7 * ceil32(return_data.size)) + 96
                require return_data.size >= 96
                _5478 = mem[_500 + 160]
                _5479 = mem[_500 + 64]
                _5480 = mem[_500 + 32]
                mem[_5172 + (7 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_5480))
                staticcall address(_5480).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_5172 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _5172 + (8 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _5479 >= 999999:
                    mem[_5172 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_5478))
                    call address(_5478).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5172 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _5610 = mem[_500 + 32]
                    mem[_5172 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_5610))
                    staticcall address(_5610).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5172 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_500 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5172 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5172 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5172 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _5822 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5172 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5172 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5172 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_5172 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5172 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5172 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5172 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_5822))
                    call address(_5822).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5172 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5172 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5172 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6712 = mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5172 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _6728 = mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5172 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5172 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5172 + (12 * ceil32(return_data.size)) + 96] = _6728
                    require _6712 + (32 * _6728) + 32 <= return_data.size
                    t = _5172 + (12 * ceil32(return_data.size)) + 128
                    s = _5172 + (11 * ceil32(return_data.size)) + _6712 + 128
                    while s < _5172 + (11 * ceil32(return_data.size)) + _6712 + (32 * _6728) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7912 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_7912]
                else:
                    mem[_5172 + (8 * ceil32(return_data.size)) + 100] = _5479
                    mem[_5172 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_5478))
                    call address(_5478).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _5479, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5172 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _5611 = mem[_500 + 32]
                    mem[_5172 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_5611))
                    staticcall address(_5611).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5172 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_500 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5172 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5172 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5172 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _5823 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5172 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5172 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5172 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_5172 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5172 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5172 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5172 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_5823))
                    call address(_5823).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5172 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5172 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5172 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6713 = mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5172 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _6729 = mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5172 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5172 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_5172 + (11 * ceil32(return_data.size)) + mem[_5172 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5172 + (12 * ceil32(return_data.size)) + 96] = _6729
                    require _6713 + (32 * _6729) + 32 <= return_data.size
                    t = _5172 + (12 * ceil32(return_data.size)) + 128
                    s = _5172 + (11 * ceil32(return_data.size)) + _6713 + 128
                    while s < _5172 + (11 * ceil32(return_data.size)) + _6713 + (32 * _6729) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7913 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_7913]
            else:
                if 1 >= mem[_5172]:
                    revert with 0, 50
                mem[_5172 + 64] = address(_5160)
                mem[_5172 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5172 + 100] = eth.balance(this.address) / 2
                mem[_5172 + 132] = 64
                mem[_5172 + 164] = mem[_5172]
                s = 0
                t = _5172 + 32
                u = _5172 + 196
                while s < mem[_5172]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5158))
                staticcall address(_5158).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5172 + (32 * mem[_5172]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6702 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6720 = mem[_6702]
                require mem[_6702] <= test266151307()
                require _6702 + mem[_6702] + 31 < _6702 + return_data.size
                _6736 = mem[_6702 + mem[_6702]]
                if mem[_6702 + mem[_6702]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6702 + mem[_6702]]) + 1 < 0 or _6702 + ceil32(return_data.size) + ceil32(32 * mem[_6702 + mem[_6702]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6702 + ceil32(return_data.size) + ceil32(32 * mem[_6702 + mem[_6702]]) + 1
                mem[_6702 + ceil32(return_data.size)] = _6736
                require _6720 + (32 * _6736) + 32 <= return_data.size
                t = _6702 + ceil32(return_data.size) + 32
                s = _6702 + _6720 + 32
                while s < _6702 + _6720 + (32 * _6736) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _6736:
                    revert with 0, 50
                _7888 = mem[_6702 + ceil32(return_data.size) + 64]
                if mem[_6702 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6702 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_6702 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _6736:
                    revert with 0, 50
                _7936 = mem[_6702 + ceil32(return_data.size) + 64]
                if mem[_6702 + ceil32(return_data.size) + 64] < 100 * mem[_6702 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7944 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7936 - (100 * _7888 / 10000)
                mem[mem[64] + 36] = 128
                _7952 = mem[_5172]
                mem[mem[64] + 132] = mem[_5172]
                s = 0
                t = _5172 + 32
                u = mem[64] + 164
                while s < _7952:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7944 + 68] = this.address
                mem[_7944 + 100] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7944 + (32 * _7952) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9088 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9096 = mem[_9088]
                require mem[_9088] <= test266151307()
                require _9088 + mem[_9088] + 31 < _9088 + return_data.size
                _9104 = mem[_9088 + mem[_9088]]
                if mem[_9088 + mem[_9088]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9088 + mem[_9088]]) + 1 < 0 or _9088 + ceil32(return_data.size) + ceil32(32 * mem[_9088 + mem[_9088]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9088 + ceil32(return_data.size) + ceil32(32 * mem[_9088 + mem[_9088]]) + 1
                mem[_9088 + ceil32(return_data.size)] = _9104
                require _9096 + (32 * _9104) + 32 <= return_data.size
                t = _9088 + ceil32(return_data.size) + 32
                s = _9088 + _9096 + 32
                while s < _9088 + _9096 + (32 * _9104) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5159))
                staticcall address(_5159).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10300 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10308 = mem[_10300]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5160))
                staticcall address(_5160).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10344 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10352 = mem[_10344]
                if not _10308:
                    revert with 0, 'Desired value is zero'
                if not mem[_10344]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5159))
                call address(_5159).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10424 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10424] == bool(mem[_10424])
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5160))
                call address(_5160).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10464 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10464] == bool(mem[_10464])
                if _10308 and 1 > -1 / _10308:
                    revert with 0, 17
                if _10308 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _10308 < 100 * _10308 / 10000:
                    revert with 0, 17
                if _10352 and 1 > -1 / _10352:
                    revert with 0, 17
                if _10352 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _10352 < 100 * _10352 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _10308
                mem[mem[64] + 100] = _10352
                mem[mem[64] + 132] = _10308 - (100 * _10308 / 10000)
                mem[mem[64] + 164] = _10352 - (100 * _10352 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_5159), address(_5160), _10308, _10352, _10308 - (100 * _10308 / 10000), _10352 - (100 * _10352 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _10576 = mem[_500 + 160]
                _10577 = mem[_500 + 64]
                _10578 = mem[_500 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10578))
                staticcall address(_10578).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10620 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10628 = mem[_10620]
                if _10577 >= 999999:
                    mem[mem[64] + 4] = mem[_10620]
                    require ext_code.size(address(_10576))
                    call address(_10576).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _10628
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10628
                    emit Earn(_10628);
                    _10708 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10708))
                    staticcall address(_10708).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10776 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_10776]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10904 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10924 = mem[_10904]
                    _10948 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10972 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10924
                    mem[mem[64] + 36] = 128
                    _10988 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_10972 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10948))
                    call address(_10948).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10972 + (32 * _10988) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11504 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11524 = mem[_11504]
                    require mem[_11504] <= test266151307()
                    require _11504 + mem[_11504] + 31 < _11504 + return_data.size
                    _11544 = mem[_11504 + mem[_11504]]
                    if mem[_11504 + mem[_11504]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11504 + mem[_11504]]) + 1 < 0 or _11504 + ceil32(return_data.size) + ceil32(32 * mem[_11504 + mem[_11504]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11504 + ceil32(return_data.size) + ceil32(32 * mem[_11504 + mem[_11504]]) + 1
                    mem[_11504 + ceil32(return_data.size)] = _11544
                    require _11524 + (32 * _11544) + 32 <= return_data.size
                    t = _11504 + ceil32(return_data.size) + 32
                    s = _11504 + _11524 + 32
                    while s < _11504 + _11524 + (32 * _11544) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12144 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12144]
                else:
                    mem[mem[64] + 4] = _10577
                    mem[mem[64] + 36] = _10628
                    require ext_code.size(address(_10576))
                    call address(_10576).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _10577, _10628
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10628
                    emit Earn(_10628);
                    _10709 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10709))
                    staticcall address(_10709).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10777 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_10777]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10925 = mem[_10905]
                    _10949 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10973 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10925
                    mem[mem[64] + 36] = 128
                    _10989 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10989:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10973 + 68] = this.address
                    mem[_10973 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10949))
                    call address(_10949).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10973 + (32 * _10989) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11505 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11525 = mem[_11505]
                    require mem[_11505] <= test266151307()
                    require _11505 + mem[_11505] + 31 < _11505 + return_data.size
                    _11545 = mem[_11505 + mem[_11505]]
                    if mem[_11505 + mem[_11505]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11505 + mem[_11505]]) + 1 < 0 or _11505 + ceil32(return_data.size) + ceil32(32 * mem[_11505 + mem[_11505]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11505 + ceil32(return_data.size) + ceil32(32 * mem[_11505 + mem[_11505]]) + 1
                    mem[_11505 + ceil32(return_data.size)] = _11545
                    require _11525 + (32 * _11545) + 32 <= return_data.size
                    t = _11505 + ceil32(return_data.size) + 32
                    s = _11505 + _11525 + 32
                    while s < _11505 + _11525 + (32 * _11545) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12145 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12145]
        else:
            if 1 >= mem[_5172]:
                revert with 0, 50
            mem[_5172 + 64] = address(_5159)
            mem[_5172 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_5172 + 100] = eth.balance(this.address) / 2
            mem[_5172 + 132] = 64
            mem[_5172 + 164] = mem[_5172]
            s = 0
            t = _5172 + 32
            u = _5172 + 196
            while s < mem[_5172]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_5158))
            staticcall address(_5158).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5172 + (32 * mem[_5172]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6703 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6721 = mem[_6703]
            require mem[_6703] <= test266151307()
            require _6703 + mem[_6703] + 31 < _6703 + return_data.size
            _6737 = mem[_6703 + mem[_6703]]
            if mem[_6703 + mem[_6703]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6703 + mem[_6703]]) + 1 < 0 or _6703 + ceil32(return_data.size) + ceil32(32 * mem[_6703 + mem[_6703]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6703 + ceil32(return_data.size) + ceil32(32 * mem[_6703 + mem[_6703]]) + 1
            mem[_6703 + ceil32(return_data.size)] = _6737
            require _6721 + (32 * _6737) + 32 <= return_data.size
            t = _6703 + ceil32(return_data.size) + 32
            s = _6703 + _6721 + 32
            while s < _6703 + _6721 + (32 * _6737) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _6737:
                revert with 0, 50
            _7889 = mem[_6703 + ceil32(return_data.size) + 64]
            if mem[_6703 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_6703 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_6703 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _6737:
                revert with 0, 50
            _7937 = mem[_6703 + ceil32(return_data.size) + 64]
            if mem[_6703 + ceil32(return_data.size) + 64] < 100 * mem[_6703 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _7945 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7937 - (100 * _7889 / 10000)
            mem[mem[64] + 36] = 128
            _7953 = mem[_5172]
            mem[mem[64] + 132] = mem[_5172]
            s = 0
            t = _5172 + 32
            u = mem[64] + 164
            while s < _7953:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_7945 + 68] = this.address
            mem[_7945 + 100] = block.timestamp + 60
            require ext_code.size(address(_5158))
            call address(_5158).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7945 + (32 * _7953) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9089 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9097 = mem[_9089]
            require mem[_9089] <= test266151307()
            require _9089 + mem[_9089] + 31 < _9089 + return_data.size
            _9105 = mem[_9089 + mem[_9089]]
            if mem[_9089 + mem[_9089]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9089 + mem[_9089]]) + 1 < 0 or _9089 + ceil32(return_data.size) + ceil32(32 * mem[_9089 + mem[_9089]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9089 + ceil32(return_data.size) + ceil32(32 * mem[_9089 + mem[_9089]]) + 1
            mem[_9089 + ceil32(return_data.size)] = _9105
            require _9097 + (32 * _9105) + 32 <= return_data.size
            t = _9089 + ceil32(return_data.size) + 32
            s = _9089 + _9097 + 32
            while s < _9089 + _9097 + (32 * _9105) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_5160):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5159))
                staticcall address(_5159).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10304 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10316 = mem[_10304]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5160))
                staticcall address(_5160).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10348 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10360 = mem[_10348]
                if not _10316:
                    revert with 0, 'Desired value is zero'
                if not mem[_10348]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5159))
                call address(_5159).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10432 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10432] == bool(mem[_10432])
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5160))
                call address(_5160).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10472 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10472] == bool(mem[_10472])
                if _10316 and 1 > -1 / _10316:
                    revert with 0, 17
                if _10316 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _10316 < 100 * _10316 / 10000:
                    revert with 0, 17
                if _10360 and 1 > -1 / _10360:
                    revert with 0, 17
                if _10360 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _10360 < 100 * _10360 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _10316
                mem[mem[64] + 100] = _10360
                mem[mem[64] + 132] = _10316 - (100 * _10316 / 10000)
                mem[mem[64] + 164] = _10360 - (100 * _10360 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_5159), address(_5160), _10316, _10360, _10316 - (100 * _10316 / 10000), _10360 - (100 * _10360 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _10590 = mem[_500 + 160]
                _10591 = mem[_500 + 64]
                _10592 = mem[_500 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10592))
                staticcall address(_10592).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10624 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10640 = mem[_10624]
                if _10591 >= 999999:
                    mem[mem[64] + 4] = mem[_10624]
                    require ext_code.size(address(_10590))
                    call address(_10590).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _10640
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10640
                    emit Earn(_10640);
                    _10736 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10736))
                    staticcall address(_10736).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10788 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_10788]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10912 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10932 = mem[_10912]
                    _10956 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10980 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10932
                    mem[mem[64] + 36] = 128
                    _10996 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10996:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10980 + 68] = this.address
                    mem[_10980 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10956))
                    call address(_10956).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10980 + (32 * _10996) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11506 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11526 = mem[_11506]
                    require mem[_11506] <= test266151307()
                    require _11506 + mem[_11506] + 31 < _11506 + return_data.size
                    _11546 = mem[_11506 + mem[_11506]]
                    if mem[_11506 + mem[_11506]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11506 + mem[_11506]]) + 1 < 0 or _11506 + ceil32(return_data.size) + ceil32(32 * mem[_11506 + mem[_11506]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11506 + ceil32(return_data.size) + ceil32(32 * mem[_11506 + mem[_11506]]) + 1
                    mem[_11506 + ceil32(return_data.size)] = _11546
                    require _11526 + (32 * _11546) + 32 <= return_data.size
                    t = _11506 + ceil32(return_data.size) + 32
                    s = _11506 + _11526 + 32
                    while s < _11506 + _11526 + (32 * _11546) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12146 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12146]
                else:
                    mem[mem[64] + 4] = _10591
                    mem[mem[64] + 36] = _10640
                    require ext_code.size(address(_10590))
                    call address(_10590).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _10591, _10640
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10640
                    emit Earn(_10640);
                    _10737 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10737))
                    staticcall address(_10737).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10789 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_10789]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10913 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10933 = mem[_10913]
                    _10957 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10981 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10933
                    mem[mem[64] + 36] = 128
                    _10997 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_10981 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10957))
                    call address(_10957).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10981 + (32 * _10997) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11507 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11527 = mem[_11507]
                    require mem[_11507] <= test266151307()
                    require _11507 + mem[_11507] + 31 < _11507 + return_data.size
                    _11547 = mem[_11507 + mem[_11507]]
                    if mem[_11507 + mem[_11507]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11507 + mem[_11507]]) + 1 < 0 or _11507 + ceil32(return_data.size) + ceil32(32 * mem[_11507 + mem[_11507]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11507 + ceil32(return_data.size) + ceil32(32 * mem[_11507 + mem[_11507]]) + 1
                    mem[_11507 + ceil32(return_data.size)] = _11547
                    require _11527 + (32 * _11547) + 32 <= return_data.size
                    t = _11507 + ceil32(return_data.size) + 32
                    s = _11507 + _11527 + 32
                    while s < _11507 + _11527 + (32 * _11547) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12147 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12147]
            else:
                if 1 >= mem[_5172]:
                    revert with 0, 50
                mem[_5172 + 64] = address(_5160)
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _10320 = mem[_5172]
                mem[mem[64] + 68] = mem[_5172]
                s = 0
                t = _5172 + 32
                u = mem[64] + 100
                while s < _10320:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5158))
                staticcall address(_5158).getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10320) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11520 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11540 = mem[_11520]
                require mem[_11520] <= test266151307()
                require _11520 + mem[_11520] + 31 < _11520 + return_data.size
                _11560 = mem[_11520 + mem[_11520]]
                if mem[_11520 + mem[_11520]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11520 + mem[_11520]]) + 1 < 0 or _11520 + ceil32(return_data.size) + ceil32(32 * mem[_11520 + mem[_11520]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11520 + ceil32(return_data.size) + ceil32(32 * mem[_11520 + mem[_11520]]) + 1
                mem[_11520 + ceil32(return_data.size)] = _11560
                require _11540 + (32 * _11560) + 32 <= return_data.size
                t = _11520 + ceil32(return_data.size) + 32
                s = _11520 + _11540 + 32
                while s < _11520 + _11540 + (32 * _11560) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _11560:
                    revert with 0, 50
                _12108 = mem[_11520 + ceil32(return_data.size) + 64]
                if mem[_11520 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11520 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_11520 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _11560:
                    revert with 0, 50
                _12180 = mem[_11520 + ceil32(return_data.size) + 64]
                if mem[_11520 + ceil32(return_data.size) + 64] < 100 * mem[_11520 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _12184 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _12180 - (100 * _12108 / 10000)
                mem[mem[64] + 36] = 128
                _12188 = mem[_5172]
                mem[mem[64] + 132] = mem[_5172]
                s = 0
                t = _5172 + 32
                u = mem[64] + 164
                while s < _12188:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_12184 + 68] = this.address
                mem[_12184 + 100] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _12184 + (32 * _12188) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12592 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12596 = mem[_12592]
                require mem[_12592] <= test266151307()
                require _12592 + mem[_12592] + 31 < _12592 + return_data.size
                _12600 = mem[_12592 + mem[_12592]]
                if mem[_12592 + mem[_12592]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_12592 + mem[_12592]]) + 1 < 0 or _12592 + ceil32(return_data.size) + ceil32(32 * mem[_12592 + mem[_12592]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _12592 + ceil32(return_data.size) + ceil32(32 * mem[_12592 + mem[_12592]]) + 1
                mem[_12592 + ceil32(return_data.size)] = _12600
                require _12596 + (32 * _12600) + 32 <= return_data.size
                t = _12592 + ceil32(return_data.size) + 32
                s = _12592 + _12596 + 32
                while s < _12592 + _12596 + (32 * _12600) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5159))
                staticcall address(_5159).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12988 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12992 = mem[_12988]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_5160))
                staticcall address(_5160).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13004 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13008 = mem[_13004]
                if not _12992:
                    revert with 0, 'Desired value is zero'
                if not mem[_13004]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5159))
                call address(_5159).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13036 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13036] == bool(mem[_13036])
                mem[mem[64] + 4] = address(_5158)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5160))
                call address(_5160).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5158), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13052 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13052] == bool(mem[_13052])
                if _12992 and 1 > -1 / _12992:
                    revert with 0, 17
                if _12992 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _12992 < 100 * _12992 / 10000:
                    revert with 0, 17
                if _13008 and 1 > -1 / _13008:
                    revert with 0, 17
                if _13008 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _13008 < 100 * _13008 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _12992
                mem[mem[64] + 100] = _13008
                mem[mem[64] + 132] = _12992 - (100 * _12992 / 10000)
                mem[mem[64] + 164] = _13008 - (100 * _13008 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_5158))
                call address(_5158).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_5159), address(_5160), _12992, _13008, _12992 - (100 * _12992 / 10000), _13008 - (100 * _13008 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _13084 = mem[_500 + 160]
                _13085 = mem[_500 + 64]
                _13086 = mem[_500 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_13086))
                staticcall address(_13086).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13108 = mem[_13104]
                if _13085 >= 999999:
                    mem[mem[64] + 4] = mem[_13104]
                    require ext_code.size(address(_13084))
                    call address(_13084).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _13108
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13108
                    emit Earn(_13108);
                    _13144 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13144))
                    staticcall address(_13144).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13168 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_13168]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13216 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13224 = mem[_13216]
                    _13232 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13240 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13224
                    mem[mem[64] + 36] = 128
                    _13248 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13240 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13232))
                    call address(_13232).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13240 + (32 * _13248) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13360 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13368 = mem[_13360]
                    require mem[_13360] <= test266151307()
                    require _13360 + mem[_13360] + 31 < _13360 + return_data.size
                    _13376 = mem[_13360 + mem[_13360]]
                    if mem[_13360 + mem[_13360]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13360 + mem[_13360]]) + 1 < 0 or _13360 + ceil32(return_data.size) + ceil32(32 * mem[_13360 + mem[_13360]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13360 + ceil32(return_data.size) + ceil32(32 * mem[_13360 + mem[_13360]]) + 1
                    mem[_13360 + ceil32(return_data.size)] = _13376
                    require _13368 + (32 * _13376) + 32 <= return_data.size
                    t = _13360 + ceil32(return_data.size) + 32
                    s = _13360 + _13368 + 32
                    while s < _13360 + _13368 + (32 * _13376) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13456]
                else:
                    mem[mem[64] + 4] = _13085
                    mem[mem[64] + 36] = _13108
                    require ext_code.size(address(_13084))
                    call address(_13084).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _13085, _13108
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13108
                    emit Earn(_13108);
                    _13145 = mem[_500 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13145))
                    staticcall address(_13145).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_500 + 96] = mem[_13169]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13217 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13225 = mem[_13217]
                    _13233 = mem[_500]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13241 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13225
                    mem[mem[64] + 36] = 128
                    _13249 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13241 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13233))
                    call address(_13233).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13241 + (32 * _13249) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13361 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13369 = mem[_13361]
                    require mem[_13361] <= test266151307()
                    require _13361 + mem[_13361] + 31 < _13361 + return_data.size
                    _13377 = mem[_13361 + mem[_13361]]
                    if mem[_13361 + mem[_13361]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13361 + mem[_13361]]) + 1 < 0 or _13361 + ceil32(return_data.size) + ceil32(32 * mem[_13361 + mem[_13361]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13361 + ceil32(return_data.size) + ceil32(32 * mem[_13361 + mem[_13361]]) + 1
                    mem[_13361 + ceil32(return_data.size)] = _13377
                    require _13369 + (32 * _13377) + 32 <= return_data.size
                    t = _13361 + ceil32(return_data.size) + 32
                    s = _13361 + _13369 + 32
                    while s < _13361 + _13369 + (32 * _13377) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13457 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13457]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _500
        s = _2442 - (100 * _2442 / 10000)
        s = stor9[idx].field_0
        continue 
    _501 = mem[64]
    mem[64] = mem[64] + 256
    mem[_501] = 0
    mem[_501 + 32] = 0
    mem[_501 + 64] = 0
    mem[_501 + 96] = 0
    mem[_501 + 128] = 0
    mem[_501 + 160] = 0
    mem[_501 + 192] = 0
    mem[_501 + 224] = 0
    _505 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_505 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _501
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1254 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1254] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1254 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1254 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1254 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1254 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1254 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1254 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1254 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1267 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1273 = mem[_1267]
            if not mem[_1267]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1267]
                v = _1254
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1302 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1312 = mem[_1302]
            require mem[_1302] == mem[_1302 + 18 len 14]
            _1318 = mem[_1302 + 32]
            require mem[_1302 + 32] == mem[_1302 + 50 len 14]
            require mem[_1302 + 64] == mem[_1302 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1326 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1328 = mem[_1326]
            if _1273 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1326]:
                revert with 0, 18
            if 10^12 * _1273 / mem[_1326] and Mask(112, 0, _1312) > -1 / 10^12 * _1273 / mem[_1326]:
                revert with 0, 17
            if 10^12 * _1273 / mem[_1326] and Mask(112, 0, _1318) > -1 / 10^12 * _1273 / mem[_1326]:
                revert with 0, 17
            if 1 >= mem[_505]:
                revert with 0, 50
            mem[_505 + 64] = stor21
            if 0 >= mem[_505]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_505 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12
                mem[mem[64] + 36] = 64
                _1399 = mem[_505]
                mem[mem[64] + 68] = mem[_505]
                s = 0
                t = _505 + 32
                u = mem[64] + 100
                while s < _1399:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12, 64, mem[mem[64] + 68 len (32 * _1399) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2457 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2463 = mem[_2457]
                require mem[_2457] <= test266151307()
                require _2457 + mem[_2457] + 31 < _2457 + return_data.size
                _2469 = mem[_2457 + mem[_2457]]
                if mem[_2457 + mem[_2457]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_2457 + mem[_2457]]) + 1 < 0 or _2457 + ceil32(return_data.size) + ceil32(32 * mem[_2457 + mem[_2457]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _2457 + ceil32(return_data.size) + ceil32(32 * mem[_2457 + mem[_2457]]) + 1
                mem[_2457 + ceil32(return_data.size)] = _2469
                require _2463 + (32 * _2469) + 32 <= return_data.size
                t = _2457 + ceil32(return_data.size) + 32
                s = _2457 + _2463 + 32
                while s < _2457 + _2463 + (32 * _2469) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _2469:
                    revert with 0, 50
                _3697 = mem[_2457 + ceil32(return_data.size) + 64]
                if 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12 > !mem[_2457 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1254 + 128] = (10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12) + mem[_2457 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12) + _3697):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _2457 + ceil32(return_data.size)
                t = 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12
                u = 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12
                v = _1273
                v = _1254
                v = stor9[idx].field_0
                v = v + (10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12) + _3697
                continue 
            mem[_505 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12
                mem[mem[64] + 36] = 64
                _1404 = mem[_505]
                mem[mem[64] + 68] = mem[_505]
                s = 0
                t = _505 + 32
                u = mem[64] + 100
                while s < _1404:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12, 64, mem[mem[64] + 68 len (32 * _1404) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2456 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2462 = mem[_2456]
                require mem[_2456] <= test266151307()
                require _2456 + mem[_2456] + 31 < _2456 + return_data.size
                _2468 = mem[_2456 + mem[_2456]]
                if mem[_2456 + mem[_2456]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_2456 + mem[_2456]]) + 1 < 0 or _2456 + ceil32(return_data.size) + ceil32(32 * mem[_2456 + mem[_2456]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _2456 + ceil32(return_data.size) + ceil32(32 * mem[_2456 + mem[_2456]]) + 1
                mem[_2456 + ceil32(return_data.size)] = _2468
                require _2462 + (32 * _2468) + 32 <= return_data.size
                t = _2456 + ceil32(return_data.size) + 32
                s = _2456 + _2462 + 32
                while s < _2456 + _2462 + (32 * _2468) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _2468:
                    revert with 0, 50
                _3696 = mem[_2456 + ceil32(return_data.size) + 64]
                if 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12 > !mem[_2456 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1254 + 128] = (10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12) + mem[_2456 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12) + _3696):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _2456 + ceil32(return_data.size)
                t = 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12
                u = 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12
                v = _1273
                v = _1254
                v = stor9[idx].field_0
                v = v + (10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12) + _3696
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1405 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1409 = mem[_1405]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1445 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1460 = mem[_1445]
            if mem[_1445] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1409:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1542 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1556 = mem[_1542]
            if 10^12 * _1460 / _1409 and mem[_1542] > -1 / 10^12 * _1460 / _1409:
                revert with 0, 17
            _1610 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1460 / _1409 * _1556 / 10^12
            mem[mem[64] + 36] = 64
            _1633 = mem[_505]
            mem[mem[64] + 68] = mem[_505]
            t = 0
            u = _505 + 32
            w = mem[64] + 100
            while t < _1633:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1610 + (32 * _1633) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2455 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2461 = mem[_2455]
            require mem[_2455] <= test266151307()
            require _2455 + mem[_2455] + 31 < _2455 + return_data.size
            _2467 = mem[_2455 + mem[_2455]]
            if mem[_2455 + mem[_2455]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2455 + mem[_2455]]) + 1 < 0 or _2455 + ceil32(return_data.size) + ceil32(32 * mem[_2455 + mem[_2455]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2455 + ceil32(return_data.size) + ceil32(32 * mem[_2455 + mem[_2455]]) + 1
            mem[_2455 + ceil32(return_data.size)] = _2467
            require _2461 + (32 * _2467) + 32 <= return_data.size
            u = _2455 + ceil32(return_data.size) + 32
            t = _2455 + _2461 + 32
            while t < _2455 + _2461 + (32 * _2467) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _2467:
                revert with 0, 50
            _3695 = mem[_2455 + ceil32(return_data.size) + 64]
            mem[_1254 + 128] = mem[_2455 + ceil32(return_data.size) + 64]
            if v > !_3695:
                revert with 0, 17
            if 0 >= mem[_505]:
                revert with 0, 50
            mem[_505 + 32] = mem[_1254 + 236 len 20]
            _3716 = mem[_1254 + 224]
            _3717 = mem[_1254]
            require ext_code.size(mem[_1254 + 236 len 20])
            staticcall mem[_1254 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3727 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3733 = mem[_3727]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3716))
            staticcall address(_3716).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3743 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3757 = mem[_3743]
            if mem[_3743] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _3733:
                revert with 0, 18
            mem[mem[64] + 4] = address(_3717)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_3717)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3811 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3829 = mem[_3811]
            if 10^12 * _3757 / _3733 and mem[_3811] > -1 / 10^12 * _3757 / _3733:
                revert with 0, 17
            _3863 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3757 / _3733 * _3829 / 10^12
            mem[mem[64] + 36] = 64
            _3885 = mem[_505]
            mem[mem[64] + 68] = mem[_505]
            t = 0
            u = _505 + 32
            w = mem[64] + 100
            while t < _3885:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_3717))
            staticcall address(_3717).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3863 + (32 * _3885) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5181 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5191 = mem[_5181]
            require mem[_5181] <= test266151307()
            require _5181 + mem[_5181] + 31 < _5181 + return_data.size
            _5201 = mem[_5181 + mem[_5181]]
            if mem[_5181 + mem[_5181]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5181 + mem[_5181]]) + 1 < 0 or _5181 + ceil32(return_data.size) + ceil32(32 * mem[_5181 + mem[_5181]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5181 + ceil32(return_data.size) + ceil32(32 * mem[_5181 + mem[_5181]]) + 1
            mem[_5181 + ceil32(return_data.size)] = _5201
            require _5191 + (32 * _5201) + 32 <= return_data.size
            u = _5181 + ceil32(return_data.size) + 32
            t = _5181 + _5191 + 32
            while t < _5181 + _5191 + (32 * _5201) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _5201:
                revert with 0, 50
            if mem[_1254 + 128] > !mem[_5181 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1254 + 128] = mem[_1254 + 128] + mem[_5181 + ceil32(return_data.size) + 64]
            if v + _3695 > !mem[_1254 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1273 / _1328 * Mask(112, 0, _1318) / 10^12
            u = 10^12 * _1273 / _1328 * Mask(112, 0, _1312) / 10^12
            v = _1273
            v = _1254
            v = stor9[idx].field_0
            v = v + _3695 + mem[_1254 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1266 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1272 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1272] = mem[_1266]
        mem[_1272 + 32] = mem[_1266 + 32]
        mem[_1272 + 64] = mem[_1266 + 64]
        require return_data.size - 96 >= 96
        _1286 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1286] = mem[_1266 + 96]
        mem[_1286 + 32] = mem[_1266 + 128]
        mem[_1286 + 64] = mem[_1266 + 160]
        mem[_1272 + 96] = _1286
        mem[_1272 + 128] = mem[_1266 + 192]
        require return_data.size - 224 >= 96
        _1298 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1298] = mem[_1266 + 224]
        mem[_1298 + 32] = mem[_1266 + 256]
        mem[_1298 + 64] = mem[_1266 + 288]
        mem[_1272 + 160] = _1298
        _1307 = mem[_1272 + 64]
        if not mem[_1272 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1272 + 64]
            v = _1254
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1322 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1323 = mem[_1322]
        require mem[_1322] == mem[_1322 + 18 len 14]
        _1327 = mem[_1322 + 32]
        require mem[_1322 + 32] == mem[_1322 + 50 len 14]
        require mem[_1322 + 64] == mem[_1322 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1348 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1353 = mem[_1348]
        if _1307 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1348]:
            revert with 0, 18
        if 10^12 * _1307 / mem[_1348] and Mask(112, 0, _1323) > -1 / 10^12 * _1307 / mem[_1348]:
            revert with 0, 17
        if 10^12 * _1307 / mem[_1348] and Mask(112, 0, _1327) > -1 / 10^12 * _1307 / mem[_1348]:
            revert with 0, 17
        if 1 >= mem[_505]:
            revert with 0, 50
        mem[_505 + 64] = stor21
        if 0 >= mem[_505]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_505 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12
            mem[mem[64] + 36] = 64
            _1457 = mem[_505]
            mem[mem[64] + 68] = mem[_505]
            s = 0
            t = _505 + 32
            u = mem[64] + 100
            while s < _1457:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12, 64, mem[mem[64] + 68 len (32 * _1457) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2454 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2460 = mem[_2454]
            require mem[_2454] <= test266151307()
            require _2454 + mem[_2454] + 31 < _2454 + return_data.size
            _2466 = mem[_2454 + mem[_2454]]
            if mem[_2454 + mem[_2454]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2454 + mem[_2454]]) + 1 < 0 or _2454 + ceil32(return_data.size) + ceil32(32 * mem[_2454 + mem[_2454]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2454 + ceil32(return_data.size) + ceil32(32 * mem[_2454 + mem[_2454]]) + 1
            mem[_2454 + ceil32(return_data.size)] = _2466
            require _2460 + (32 * _2466) + 32 <= return_data.size
            t = _2454 + ceil32(return_data.size) + 32
            s = _2454 + _2460 + 32
            while s < _2454 + _2460 + (32 * _2466) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _2466:
                revert with 0, 50
            _3694 = mem[_2454 + ceil32(return_data.size) + 64]
            if 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12 > !mem[_2454 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1254 + 128] = (10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12) + mem[_2454 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12) + _3694):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _2454 + ceil32(return_data.size)
            t = 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12
            u = 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12
            v = _1307
            v = _1254
            v = stor9[idx].field_0
            v = v + (10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12) + _3694
            continue 
        mem[_505 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12
            mem[mem[64] + 36] = 64
            _1459 = mem[_505]
            mem[mem[64] + 68] = mem[_505]
            s = 0
            t = _505 + 32
            w = mem[64] + 100
            while s < _1459:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12, 64, mem[mem[64] + 68 len (32 * _1459) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2453 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2459 = mem[_2453]
            require mem[_2453] <= test266151307()
            require _2453 + mem[_2453] + 31 < _2453 + return_data.size
            _2465 = mem[_2453 + mem[_2453]]
            if mem[_2453 + mem[_2453]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2453 + mem[_2453]]) + 1 < 0 or _2453 + ceil32(return_data.size) + ceil32(32 * mem[_2453 + mem[_2453]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2453 + ceil32(return_data.size) + ceil32(32 * mem[_2453 + mem[_2453]]) + 1
            mem[_2453 + ceil32(return_data.size)] = _2465
            require _2459 + (32 * _2465) + 32 <= return_data.size
            t = _2453 + ceil32(return_data.size) + 32
            s = _2453 + _2459 + 32
            while s < _2453 + _2459 + (32 * _2465) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _2465:
                revert with 0, 50
            _3693 = mem[_2453 + ceil32(return_data.size) + 64]
            if 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12 > !mem[_2453 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1254 + 128] = (10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12) + mem[_2453 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12) + _3693):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _2453 + ceil32(return_data.size)
            t = 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12
            s = 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12
            v = _1307
            v = _1254
            v = stor9[idx].field_0
            v = v + (10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12) + _3693
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1466 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1483 = mem[_1466]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1511 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1525 = mem[_1511]
        if mem[_1511] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _1483:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1607 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1632 = mem[_1607]
        if 10^12 * _1525 / _1483 and mem[_1607] > -1 / 10^12 * _1525 / _1483:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _1525 / _1483 * _1632 / 10^12
        mem[mem[64] + 36] = 64
        _1686 = mem[_505]
        mem[mem[64] + 68] = mem[_505]
        t = 0
        u = _505 + 32
        w = mem[64] + 100
        while t < _1686:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _1525 / _1483 * _1632 / 10^12, 64, mem[mem[64] + 68 len (32 * _1686) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2452 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2458 = mem[_2452]
        require mem[_2452] <= test266151307()
        require _2452 + mem[_2452] + 31 < _2452 + return_data.size
        _2464 = mem[_2452 + mem[_2452]]
        if mem[_2452 + mem[_2452]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_2452 + mem[_2452]]) + 1 < 0 or _2452 + ceil32(return_data.size) + ceil32(32 * mem[_2452 + mem[_2452]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _2452 + ceil32(return_data.size) + ceil32(32 * mem[_2452 + mem[_2452]]) + 1
        mem[_2452 + ceil32(return_data.size)] = _2464
        require _2458 + (32 * _2464) + 32 <= return_data.size
        u = _2452 + ceil32(return_data.size) + 32
        t = _2452 + _2458 + 32
        while t < _2452 + _2458 + (32 * _2464) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _2464:
            revert with 0, 50
        _3692 = mem[_2452 + ceil32(return_data.size) + 64]
        mem[_1254 + 128] = mem[_2452 + ceil32(return_data.size) + 64]
        if v > !_3692:
            revert with 0, 17
        if 0 >= mem[_505]:
            revert with 0, 50
        mem[_505 + 32] = mem[_1254 + 236 len 20]
        _3714 = mem[_1254 + 224]
        _3715 = mem[_1254]
        require ext_code.size(mem[_1254 + 236 len 20])
        staticcall mem[_1254 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3726 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3732 = mem[_3726]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_3714))
        staticcall address(_3714).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3742 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3756 = mem[_3742]
        if mem[_3742] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _3732:
            revert with 0, 18
        mem[mem[64] + 4] = address(_3715)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_3715)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3810 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3828 = mem[_3810]
        if 10^12 * _3756 / _3732 and mem[_3810] > -1 / 10^12 * _3756 / _3732:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _3756 / _3732 * _3828 / 10^12
        mem[mem[64] + 36] = 64
        _3884 = mem[_505]
        mem[mem[64] + 68] = mem[_505]
        t = 0
        u = _505 + 32
        w = mem[64] + 100
        while t < _3884:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_3715))
        staticcall address(_3715).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _3756 / _3732 * _3828 / 10^12, 64, mem[mem[64] + 68 len (32 * _3884) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5180 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5190 = mem[_5180]
        require mem[_5180] <= test266151307()
        require _5180 + mem[_5180] + 31 < _5180 + return_data.size
        _5200 = mem[_5180 + mem[_5180]]
        if mem[_5180 + mem[_5180]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5180 + mem[_5180]]) + 1 < 0 or _5180 + ceil32(return_data.size) + ceil32(32 * mem[_5180 + mem[_5180]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5180 + ceil32(return_data.size) + ceil32(32 * mem[_5180 + mem[_5180]]) + 1
        mem[_5180 + ceil32(return_data.size)] = _5200
        require _5190 + (32 * _5200) + 32 <= return_data.size
        u = _5180 + ceil32(return_data.size) + 32
        t = _5180 + _5190 + 32
        while t < _5180 + _5190 + (32 * _5200) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _5200:
            revert with 0, 50
        if mem[_1254 + 128] > !mem[_5180 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1254 + 128] = mem[_1254 + 128] + mem[_5180 + ceil32(return_data.size) + 64]
        if v + _3692 > !mem[_1254 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1307 / _1353 * Mask(112, 0, _1327) / 10^12
        u = 10^12 * _1307 / _1353 * Mask(112, 0, _1323) / 10^12
        v = _1307
        v = _1254
        v = stor9[idx].field_0
        v = v + _3692 + mem[_1254 + 128]
        continue 
    emit 0xf9ede3d1 
}

function deposit() payable {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _734 = mem[64]
        mem[64] = mem[64] + 256
        mem[_734] = strategyInfo[stor9[idx].field_0].field_0
        mem[_734 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_734 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_734 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_734 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_734 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_734 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_734 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _745 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _754 = mem[_745]
            if not mem[_745]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _734
                s = mem[_745]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _776 = mem[64]
            mem[64] = mem[64] + 256
            mem[_776] = strategyInfo[stor9[idx].field_0].field_0
            mem[_776 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_776 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_776 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_776 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_776 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_776 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_776 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _754
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _754
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _819 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _832 = mem[_819]
                require mem[_819] == mem[_819 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_819 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_832))
                staticcall address(_832).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _881 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _892 = mem[_881]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_832))
                staticcall address(_832).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _909 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _922 = mem[_909]
                if mem[_909] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _892:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _948 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _953 = mem[_948]
                if 10^12 * _922 / _892 and mem[_948] > -1 / 10^12 * _922 / _892:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _922 / _892 * _953 / 10^12
                mem[mem[64] + 36] = 64
                _984 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _984) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1740 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1747 = mem[_1740]
                require mem[_1740] <= test266151307()
                require _1740 + mem[_1740] + 31 < _1740 + return_data.size
                _1762 = mem[_1740 + mem[_1740]]
                if mem[_1740 + mem[_1740]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1740 + mem[_1740]]) + 1 < 0 or _1740 + ceil32(return_data.size) + ceil32(32 * mem[_1740 + mem[_1740]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1740 + ceil32(return_data.size) + ceil32(32 * mem[_1740 + mem[_1740]]) + 1
                mem[_1740 + ceil32(return_data.size)] = _1762
                require _1747 + (32 * _1762) + 32 <= return_data.size
                t = _1740 + ceil32(return_data.size) + 32
                s = _1740 + _1747 + 32
                while s < _1740 + _1747 + (32 * _1762) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1762:
                    revert with 0, 50
                _3378 = mem[_1740 + ceil32(return_data.size) + 64]
                if mem[_1740 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1740 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1740 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1740 + ceil32(return_data.size) + 64] < 100 * mem[_1740 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _3460 = mem[_734]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_832))
                staticcall address(_832).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3492 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3508 = mem[_3492]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3508
                mem[mem[64] + 36] = _3378 - (100 * _3378 / 10000)
                mem[mem[64] + 68] = 160
                _3546 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_3460))
                call address(_3460).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3546) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5167 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5183 = mem[_5167]
                require mem[_5167] <= test266151307()
                require _5167 + mem[_5167] + 31 < _5167 + return_data.size
                _5203 = mem[_5167 + mem[_5167]]
                if mem[_5167 + mem[_5167]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5167 + mem[_5167]]) + 1 < 0 or _5167 + ceil32(return_data.size) + ceil32(32 * mem[_5167 + mem[_5167]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5167 + ceil32(return_data.size) + ceil32(32 * mem[_5167 + mem[_5167]]) + 1
                mem[_5167 + ceil32(return_data.size)] = _5203
                require _5183 + (32 * _5203) + 32 <= return_data.size
                t = _5167 + ceil32(return_data.size) + 32
                s = _5167 + _5183 + 32
                while s < _5167 + _5183 + (32 * _5203) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _6975 = mem[_734]
                _6976 = mem[_734 + 192]
                _6977 = mem[_734 + 224]
                _6987 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_6987 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_6987]:
                    revert with 0, 50
                mem[_6987 + 32] = stor21
                if stor21 == address(_6976):
                    if stor21 == address(_6977):
                        mem[_6987 + 100] = this.address
                        require ext_code.size(address(_6976))
                        staticcall address(_6976).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6987 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_6987 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6977))
                        staticcall address(_6977).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6987 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_6987 + (2 * ceil32(return_data.size)) + 100] = address(_6975)
                        mem[_6987 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_6976))
                        call address(_6976).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[_6987 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_6987 + (4 * ceil32(return_data.size)) + 100] = address(_6975)
                        mem[_6987 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_6977))
                        call address(_6977).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[_6987 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                            revert with 0, 17
                        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6987 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_6987 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_6987 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                        mem[_6987 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                        mem[_6987 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_6987 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6976), address(_6977), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                        mem[_6987 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6987 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _7427 = mem[_734 + 160]
                        _7428 = mem[_734 + 64]
                        _7429 = mem[_734 + 32]
                        mem[_6987 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7429))
                        staticcall address(_7429).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6987 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6987 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _7428 >= 999999:
                            mem[_6987 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_7427))
                            call address(_7427).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6987 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _7563 = mem[_734 + 32]
                            mem[_6987 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_7563))
                            staticcall address(_7563).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6987 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_734 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6987 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6987 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6987 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7782 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6987 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6987 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6987 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_6987 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6987 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6987 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6987 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7782))
                            call address(_7782).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6987 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6987 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6987 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8826 = mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6987 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _8846 = mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6987 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6987 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6987 + (12 * ceil32(return_data.size)) + 96] = _8846
                            require _8826 + (32 * _8846) + 32 <= return_data.size
                            t = _6987 + (12 * ceil32(return_data.size)) + 128
                            s = _6987 + (11 * ceil32(return_data.size)) + _8826 + 128
                            while s < _6987 + (11 * ceil32(return_data.size)) + _8826 + (32 * _8846) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10291 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10291]
                        else:
                            mem[_6987 + (8 * ceil32(return_data.size)) + 100] = _7428
                            mem[_6987 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_7427))
                            call address(_7427).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _7428, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6987 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _7564 = mem[_734 + 32]
                            mem[_6987 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_7564))
                            staticcall address(_7564).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6987 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_734 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6987 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6987 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6987 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7783 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6987 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6987 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6987 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_6987 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6987 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6987 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6987 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7783))
                            call address(_7783).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6987 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6987 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6987 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8827 = mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6987 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _8847 = mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6987 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6987 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6987 + (11 * ceil32(return_data.size)) + mem[_6987 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6987 + (12 * ceil32(return_data.size)) + 96] = _8847
                            require _8827 + (32 * _8847) + 32 <= return_data.size
                            t = _6987 + (12 * ceil32(return_data.size)) + 128
                            s = _6987 + (11 * ceil32(return_data.size)) + _8827 + 128
                            while s < _6987 + (11 * ceil32(return_data.size)) + _8827 + (32 * _8847) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10292 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10292]
                    else:
                        if 1 >= mem[_6987]:
                            revert with 0, 50
                        mem[_6987 + 64] = address(_6977)
                        mem[_6987 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_6987 + 100] = eth.balance(this.address) / 2
                        mem[_6987 + 132] = 64
                        mem[_6987 + 164] = mem[_6987]
                        s = 0
                        t = _6987 + 32
                        u = _6987 + 196
                        while s < mem[_6987]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_6975))
                        staticcall address(_6975).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _6987 + (32 * mem[_6987]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8814 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8836 = mem[_8814]
                        require mem[_8814] <= test266151307()
                        require _8814 + mem[_8814] + 31 < _8814 + return_data.size
                        _8856 = mem[_8814 + mem[_8814]]
                        if mem[_8814 + mem[_8814]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_8814 + mem[_8814]]) + 1 < 0 or _8814 + ceil32(return_data.size) + ceil32(32 * mem[_8814 + mem[_8814]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _8814 + ceil32(return_data.size) + ceil32(32 * mem[_8814 + mem[_8814]]) + 1
                        mem[_8814 + ceil32(return_data.size)] = _8856
                        require _8836 + (32 * _8856) + 32 <= return_data.size
                        t = _8814 + ceil32(return_data.size) + 32
                        s = _8814 + _8836 + 32
                        while s < _8814 + _8836 + (32 * _8856) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _8856:
                            revert with 0, 50
                        _10259 = mem[_8814 + ceil32(return_data.size) + 64]
                        if mem[_8814 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8814 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_8814 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _8856:
                            revert with 0, 50
                        _10328 = mem[_8814 + ceil32(return_data.size) + 64]
                        if mem[_8814 + ceil32(return_data.size) + 64] < 100 * mem[_8814 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10357 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10328 - (100 * _10259 / 10000)
                        mem[mem[64] + 36] = 128
                        _10367 = mem[_6987]
                        mem[mem[64] + 132] = mem[_6987]
                        s = 0
                        t = _6987 + 32
                        u = mem[64] + 164
                        while s < _10367:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10357 + 68] = this.address
                        mem[_10357 + 100] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10357 + (32 * _10367) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11692 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11701 = mem[_11692]
                        require mem[_11692] <= test266151307()
                        require _11692 + mem[_11692] + 31 < _11692 + return_data.size
                        _11710 = mem[_11692 + mem[_11692]]
                        if mem[_11692 + mem[_11692]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11692 + mem[_11692]]) + 1 < 0 or _11692 + ceil32(return_data.size) + ceil32(32 * mem[_11692 + mem[_11692]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11692 + ceil32(return_data.size) + ceil32(32 * mem[_11692 + mem[_11692]]) + 1
                        mem[_11692 + ceil32(return_data.size)] = _11710
                        require _11701 + (32 * _11710) + 32 <= return_data.size
                        t = _11692 + ceil32(return_data.size) + 32
                        s = _11692 + _11701 + 32
                        while s < _11692 + _11701 + (32 * _11710) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6976))
                        staticcall address(_6976).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13001 = mem[_12991]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6977))
                        staticcall address(_6977).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13037 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13047 = mem[_13037]
                        if not _13001:
                            revert with 0, 'Desired value is zero'
                        if not mem[_13037]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6976))
                        call address(_6976).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13120] == bool(mem[_13120])
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6977))
                        call address(_6977).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13163 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13163] == bool(mem[_13163])
                        if _13001 and 1 > -1 / _13001:
                            revert with 0, 17
                        if _13001 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _13001 < 100 * _13001 / 10000:
                            revert with 0, 17
                        if _13047 and 1 > -1 / _13047:
                            revert with 0, 17
                        if _13047 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _13047 < 100 * _13047 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _13001
                        mem[mem[64] + 100] = _13047
                        mem[mem[64] + 132] = _13001 - (100 * _13001 / 10000)
                        mem[mem[64] + 164] = _13047 - (100 * _13047 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6976), address(_6977), _13001, _13047, _13001 - (100 * _13001 / 10000), _13047 - (100 * _13047 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _13298 = mem[_734 + 160]
                        _13299 = mem[_734 + 64]
                        _13300 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13300))
                        staticcall address(_13300).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13341 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13354 = mem[_13341]
                        if _13299 >= 999999:
                            mem[mem[64] + 4] = mem[_13341]
                            require ext_code.size(address(_13298))
                            call address(_13298).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _13354
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13354
                            emit Earn(_13354);
                            _13440 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13440))
                            staticcall address(_13440).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13502 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_13502]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13648 = mem[_13628]
                            _13672 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13696 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13648
                            mem[mem[64] + 36] = 128
                            _13714 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13714:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13696 + 68] = this.address
                            mem[_13696 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13672))
                            call address(_13672).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13696 + (32 * _13714) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14283 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _14304 = mem[_14283]
                            require mem[_14283] <= test266151307()
                            require _14283 + mem[_14283] + 31 < _14283 + return_data.size
                            _14325 = mem[_14283 + mem[_14283]]
                            if mem[_14283 + mem[_14283]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14283 + mem[_14283]]) + 1 < 0 or _14283 + ceil32(return_data.size) + ceil32(32 * mem[_14283 + mem[_14283]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _14283 + ceil32(return_data.size) + ceil32(32 * mem[_14283 + mem[_14283]]) + 1
                            mem[_14283 + ceil32(return_data.size)] = _14325
                            require _14304 + (32 * _14325) + 32 <= return_data.size
                            t = _14283 + ceil32(return_data.size) + 32
                            s = _14283 + _14304 + 32
                            while s < _14283 + _14304 + (32 * _14325) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14999 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_14999]
                        else:
                            mem[mem[64] + 4] = _13299
                            mem[mem[64] + 36] = _13354
                            require ext_code.size(address(_13298))
                            call address(_13298).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _13299, _13354
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13354
                            emit Earn(_13354);
                            _13441 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13441))
                            staticcall address(_13441).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_13503]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13629 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13649 = mem[_13629]
                            _13673 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13697 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13649
                            mem[mem[64] + 36] = 128
                            _13715 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13715:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13697 + 68] = this.address
                            mem[_13697 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13673))
                            call address(_13673).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13697 + (32 * _13715) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14284 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _14305 = mem[_14284]
                            require mem[_14284] <= test266151307()
                            require _14284 + mem[_14284] + 31 < _14284 + return_data.size
                            _14326 = mem[_14284 + mem[_14284]]
                            if mem[_14284 + mem[_14284]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14284 + mem[_14284]]) + 1 < 0 or _14284 + ceil32(return_data.size) + ceil32(32 * mem[_14284 + mem[_14284]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _14284 + ceil32(return_data.size) + ceil32(32 * mem[_14284 + mem[_14284]]) + 1
                            mem[_14284 + ceil32(return_data.size)] = _14326
                            require _14305 + (32 * _14326) + 32 <= return_data.size
                            t = _14284 + ceil32(return_data.size) + 32
                            s = _14284 + _14305 + 32
                            while s < _14284 + _14305 + (32 * _14326) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15000 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_15000]
                else:
                    if 1 >= mem[_6987]:
                        revert with 0, 50
                    mem[_6987 + 64] = address(_6976)
                    mem[_6987 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6987 + 100] = eth.balance(this.address) / 2
                    mem[_6987 + 132] = 64
                    mem[_6987 + 164] = mem[_6987]
                    s = 0
                    t = _6987 + 32
                    u = _6987 + 196
                    while s < mem[_6987]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6975))
                    staticcall address(_6975).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6987 + (32 * mem[_6987]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8815 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8837 = mem[_8815]
                    require mem[_8815] <= test266151307()
                    require _8815 + mem[_8815] + 31 < _8815 + return_data.size
                    _8857 = mem[_8815 + mem[_8815]]
                    if mem[_8815 + mem[_8815]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8815 + mem[_8815]]) + 1 < 0 or _8815 + ceil32(return_data.size) + ceil32(32 * mem[_8815 + mem[_8815]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8815 + ceil32(return_data.size) + ceil32(32 * mem[_8815 + mem[_8815]]) + 1
                    mem[_8815 + ceil32(return_data.size)] = _8857
                    require _8837 + (32 * _8857) + 32 <= return_data.size
                    t = _8815 + ceil32(return_data.size) + 32
                    s = _8815 + _8837 + 32
                    while s < _8815 + _8837 + (32 * _8857) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8857:
                        revert with 0, 50
                    _10260 = mem[_8815 + ceil32(return_data.size) + 64]
                    if mem[_8815 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8815 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8815 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8857:
                        revert with 0, 50
                    _10329 = mem[_8815 + ceil32(return_data.size) + 64]
                    if mem[_8815 + ceil32(return_data.size) + 64] < 100 * mem[_8815 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10358 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10329 - (100 * _10260 / 10000)
                    mem[mem[64] + 36] = 128
                    _10368 = mem[_6987]
                    mem[mem[64] + 132] = mem[_6987]
                    s = 0
                    t = _6987 + 32
                    u = mem[64] + 164
                    while s < _10368:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10358 + 68] = this.address
                    mem[_10358 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6975))
                    call address(_6975).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10358 + (32 * _10368) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11693 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11702 = mem[_11693]
                    require mem[_11693] <= test266151307()
                    require _11693 + mem[_11693] + 31 < _11693 + return_data.size
                    _11711 = mem[_11693 + mem[_11693]]
                    if mem[_11693 + mem[_11693]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11693 + mem[_11693]]) + 1 < 0 or _11693 + ceil32(return_data.size) + ceil32(32 * mem[_11693 + mem[_11693]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11693 + ceil32(return_data.size) + ceil32(32 * mem[_11693 + mem[_11693]]) + 1
                    mem[_11693 + ceil32(return_data.size)] = _11711
                    require _11702 + (32 * _11711) + 32 <= return_data.size
                    t = _11693 + ceil32(return_data.size) + 32
                    s = _11693 + _11702 + 32
                    while s < _11693 + _11702 + (32 * _11711) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_6977):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6976))
                        staticcall address(_6976).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12995 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13007 = mem[_12995]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6977))
                        staticcall address(_6977).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13053 = mem[_13041]
                        if not _13007:
                            revert with 0, 'Desired value is zero'
                        if not mem[_13041]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6976))
                        call address(_6976).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13126] == bool(mem[_13126])
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6977))
                        call address(_6977).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13171] == bool(mem[_13171])
                        if _13007 and 1 > -1 / _13007:
                            revert with 0, 17
                        if _13007 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _13007 < 100 * _13007 / 10000:
                            revert with 0, 17
                        if _13053 and 1 > -1 / _13053:
                            revert with 0, 17
                        if _13053 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _13053 < 100 * _13053 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _13007
                        mem[mem[64] + 100] = _13053
                        mem[mem[64] + 132] = _13007 - (100 * _13007 / 10000)
                        mem[mem[64] + 164] = _13053 - (100 * _13053 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6976), address(_6977), _13007, _13053, _13007 - (100 * _13007 / 10000), _13053 - (100 * _13053 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _13318 = mem[_734 + 160]
                        _13319 = mem[_734 + 64]
                        _13320 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13320))
                        staticcall address(_13320).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13345 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13362 = mem[_13345]
                        if _13319 >= 999999:
                            mem[mem[64] + 4] = mem[_13345]
                            require ext_code.size(address(_13318))
                            call address(_13318).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _13362
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13362
                            emit Earn(_13362);
                            _13470 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13470))
                            staticcall address(_13470).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13512 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_13512]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13638 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13660 = mem[_13638]
                            _13682 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13704 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13660
                            mem[mem[64] + 36] = 128
                            _13722 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_13704 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13682))
                            call address(_13682).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13704 + (32 * _13722) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14285 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _14306 = mem[_14285]
                            require mem[_14285] <= test266151307()
                            require _14285 + mem[_14285] + 31 < _14285 + return_data.size
                            _14327 = mem[_14285 + mem[_14285]]
                            if mem[_14285 + mem[_14285]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14285 + mem[_14285]]) + 1 < 0 or _14285 + ceil32(return_data.size) + ceil32(32 * mem[_14285 + mem[_14285]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _14285 + ceil32(return_data.size) + ceil32(32 * mem[_14285 + mem[_14285]]) + 1
                            mem[_14285 + ceil32(return_data.size)] = _14327
                            require _14306 + (32 * _14327) + 32 <= return_data.size
                            t = _14285 + ceil32(return_data.size) + 32
                            s = _14285 + _14306 + 32
                            while s < _14285 + _14306 + (32 * _14327) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15001 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_15001]
                        else:
                            mem[mem[64] + 4] = _13319
                            mem[mem[64] + 36] = _13362
                            require ext_code.size(address(_13318))
                            call address(_13318).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _13319, _13362
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13362
                            emit Earn(_13362);
                            _13471 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13471))
                            staticcall address(_13471).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13513 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_13513]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13661 = mem[_13639]
                            _13683 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13705 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13661
                            mem[mem[64] + 36] = 128
                            _13723 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_13705 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13683))
                            call address(_13683).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13705 + (32 * _13723) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14286 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _14307 = mem[_14286]
                            require mem[_14286] <= test266151307()
                            require _14286 + mem[_14286] + 31 < _14286 + return_data.size
                            _14328 = mem[_14286 + mem[_14286]]
                            if mem[_14286 + mem[_14286]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14286 + mem[_14286]]) + 1 < 0 or _14286 + ceil32(return_data.size) + ceil32(32 * mem[_14286 + mem[_14286]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _14286 + ceil32(return_data.size) + ceil32(32 * mem[_14286 + mem[_14286]]) + 1
                            mem[_14286 + ceil32(return_data.size)] = _14328
                            require _14307 + (32 * _14328) + 32 <= return_data.size
                            t = _14286 + ceil32(return_data.size) + 32
                            s = _14286 + _14307 + 32
                            while s < _14286 + _14307 + (32 * _14328) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15002 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_15002]
                    else:
                        if 1 >= mem[_6987]:
                            revert with 0, 50
                        mem[_6987 + 64] = address(_6977)
                        _13002 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _13011 = mem[_6987]
                        mem[mem[64] + 68] = mem[_6987]
                        s = 0
                        t = _6987 + 32
                        u = mem[64] + 100
                        while s < _13011:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_6975))
                        staticcall address(_6975).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13002 + (32 * _13011) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14293 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14314 = mem[_14293]
                        require mem[_14293] <= test266151307()
                        require _14293 + mem[_14293] + 31 < _14293 + return_data.size
                        _14335 = mem[_14293 + mem[_14293]]
                        if mem[_14293 + mem[_14293]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14293 + mem[_14293]]) + 1 < 0 or _14293 + ceil32(return_data.size) + ceil32(32 * mem[_14293 + mem[_14293]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14293 + ceil32(return_data.size) + ceil32(32 * mem[_14293 + mem[_14293]]) + 1
                        mem[_14293 + ceil32(return_data.size)] = _14335
                        require _14314 + (32 * _14335) + 32 <= return_data.size
                        t = _14293 + ceil32(return_data.size) + 32
                        s = _14293 + _14314 + 32
                        while s < _14293 + _14314 + (32 * _14335) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14335:
                            revert with 0, 50
                        _14954 = mem[_14293 + ceil32(return_data.size) + 64]
                        if mem[_14293 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14293 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_14293 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _14335:
                            revert with 0, 50
                        _15033 = mem[_14293 + ceil32(return_data.size) + 64]
                        if mem[_14293 + ceil32(return_data.size) + 64] < 100 * mem[_14293 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _15033 - (100 * _14954 / 10000)
                        mem[mem[64] + 36] = 128
                        _15050 = mem[_6987]
                        mem[mem[64] + 132] = mem[_6987]
                        s = 0
                        t = _6987 + 32
                        u = mem[64] + 164
                        while s < _15050:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args _15033 - (100 * _14954 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _15050) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15506 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15510 = mem[_15506]
                        require mem[_15506] <= test266151307()
                        require _15506 + mem[_15506] + 31 < _15506 + return_data.size
                        _15514 = mem[_15506 + mem[_15506]]
                        if mem[_15506 + mem[_15506]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15506 + mem[_15506]]) + 1 < 0 or _15506 + ceil32(return_data.size) + ceil32(32 * mem[_15506 + mem[_15506]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15506 + ceil32(return_data.size) + ceil32(32 * mem[_15506 + mem[_15506]]) + 1
                        mem[_15506 + ceil32(return_data.size)] = _15514
                        require _15510 + (32 * _15514) + 32 <= return_data.size
                        t = _15506 + ceil32(return_data.size) + 32
                        s = _15506 + _15510 + 32
                        while s < _15506 + _15510 + (32 * _15514) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6976))
                        staticcall address(_6976).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15902 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15906 = mem[_15902]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6977))
                        staticcall address(_6977).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15918 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15922 = mem[_15918]
                        if not _15906:
                            revert with 0, 'Desired value is zero'
                        if not mem[_15918]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6976))
                        call address(_6976).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15950 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15950] == bool(mem[_15950])
                        mem[mem[64] + 4] = address(_6975)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6977))
                        call address(_6977).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6975), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15966 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15966] == bool(mem[_15966])
                        if _15906 and 1 > -1 / _15906:
                            revert with 0, 17
                        if _15906 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _15906 < 100 * _15906 / 10000:
                            revert with 0, 17
                        if _15922 and 1 > -1 / _15922:
                            revert with 0, 17
                        if _15922 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if _15922 < 100 * _15922 / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _15906
                        mem[mem[64] + 100] = _15922
                        mem[mem[64] + 132] = _15906 - (100 * _15906 / 10000)
                        mem[mem[64] + 164] = _15922 - (100 * _15922 / 10000)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6975))
                        call address(_6975).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6976), address(_6977), _15906, _15922, _15906 - (100 * _15906 / 10000), _15922 - (100 * _15922 / 10000), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _16002 = mem[_734 + 160]
                        _16003 = mem[_734 + 64]
                        _16004 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16004))
                        staticcall address(_16004).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16018 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16022 = mem[_16018]
                        if _16003 >= 999999:
                            mem[mem[64] + 4] = mem[_16018]
                            require ext_code.size(address(_16002))
                            call address(_16002).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _16022
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _16022
                            emit Earn(_16022);
                            _16060 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16060))
                            staticcall address(_16060).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16084 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_16084]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16132 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16140 = mem[_16132]
                            _16148 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _16156 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _16140
                            mem[mem[64] + 36] = 128
                            _16164 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_16156 + 100] = block.timestamp + 60
                            require ext_code.size(address(_16148))
                            call address(_16148).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16156 + (32 * _16164) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16276 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16284 = mem[_16276]
                            require mem[_16276] <= test266151307()
                            require _16276 + mem[_16276] + 31 < _16276 + return_data.size
                            _16292 = mem[_16276 + mem[_16276]]
                            if mem[_16276 + mem[_16276]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_16276 + mem[_16276]]) + 1 < 0 or _16276 + ceil32(return_data.size) + ceil32(32 * mem[_16276 + mem[_16276]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _16276 + ceil32(return_data.size) + ceil32(32 * mem[_16276 + mem[_16276]]) + 1
                            mem[_16276 + ceil32(return_data.size)] = _16292
                            require _16284 + (32 * _16292) + 32 <= return_data.size
                            t = _16276 + ceil32(return_data.size) + 32
                            s = _16276 + _16284 + 32
                            while s < _16276 + _16284 + (32 * _16292) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16372 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_16372]
                        else:
                            mem[mem[64] + 4] = _16003
                            mem[mem[64] + 36] = _16022
                            require ext_code.size(address(_16002))
                            call address(_16002).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _16003, _16022
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _16022
                            emit Earn(_16022);
                            _16061 = mem[_734 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16061))
                            staticcall address(_16061).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16085 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_734 + 96] = mem[_16085]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16141 = mem[_16133]
                            _16149 = mem[_734]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _16157 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _16141
                            mem[mem[64] + 36] = 128
                            _16165 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _16165:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16157 + 68] = this.address
                            mem[_16157 + 100] = block.timestamp + 60
                            require ext_code.size(address(_16149))
                            call address(_16149).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16157 + (32 * _16165) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16277 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16285 = mem[_16277]
                            require mem[_16277] <= test266151307()
                            require _16277 + mem[_16277] + 31 < _16277 + return_data.size
                            _16293 = mem[_16277 + mem[_16277]]
                            if mem[_16277 + mem[_16277]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_16277 + mem[_16277]]) + 1 < 0 or _16277 + ceil32(return_data.size) + ceil32(32 * mem[_16277 + mem[_16277]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _16277 + ceil32(return_data.size) + ceil32(32 * mem[_16277 + mem[_16277]]) + 1
                            mem[_16277 + ceil32(return_data.size)] = _16293
                            require _16285 + (32 * _16293) + 32 <= return_data.size
                            t = _16277 + ceil32(return_data.size) + 32
                            s = _16277 + _16285 + 32
                            while s < _16277 + _16285 + (32 * _16293) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16373 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_16373]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _734
                s = _3378 - (100 * _3378 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _754
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _754
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _820 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _833 = mem[_820]
            require mem[_820] == mem[_820 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_820 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_833))
            staticcall address(_833).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _882 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _893 = mem[_882]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_833))
            staticcall address(_833).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _910 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _923 = mem[_910]
            if mem[_910] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _893:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _949 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _954 = mem[_949]
            if 10^12 * _923 / _893 and mem[_949] > -1 / 10^12 * _923 / _893:
                revert with 0, 17
            _973 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _923 / _893 * _954 / 10^12
            mem[mem[64] + 36] = 64
            _985 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _985:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _973 + (32 * _985) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1741 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1748 = mem[_1741]
            require mem[_1741] <= test266151307()
            require _1741 + mem[_1741] + 31 < _1741 + return_data.size
            _1763 = mem[_1741 + mem[_1741]]
            if mem[_1741 + mem[_1741]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1741 + mem[_1741]]) + 1 < 0 or _1741 + ceil32(return_data.size) + ceil32(32 * mem[_1741 + mem[_1741]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1741 + ceil32(return_data.size) + ceil32(32 * mem[_1741 + mem[_1741]]) + 1
            mem[_1741 + ceil32(return_data.size)] = _1763
            require _1748 + (32 * _1763) + 32 <= return_data.size
            t = _1741 + ceil32(return_data.size) + 32
            s = _1741 + _1748 + 32
            while s < _1741 + _1748 + (32 * _1763) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1763:
                revert with 0, 50
            _3379 = mem[_1741 + ceil32(return_data.size) + 64]
            if mem[_1741 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1741 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1741 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1741 + ceil32(return_data.size) + 64] < 100 * mem[_1741 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3461 = mem[_734]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_833))
            staticcall address(_833).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3493 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3509 = mem[_3493]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3509
            mem[mem[64] + 36] = _3379 - (100 * _3379 / 10000)
            mem[mem[64] + 68] = 160
            _3547 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3461))
            call address(_3461).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3547) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5168 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5184 = mem[_5168]
            require mem[_5168] <= test266151307()
            require _5168 + mem[_5168] + 31 < _5168 + return_data.size
            _5204 = mem[_5168 + mem[_5168]]
            if mem[_5168 + mem[_5168]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5168 + mem[_5168]]) + 1 < 0 or _5168 + ceil32(return_data.size) + ceil32(32 * mem[_5168 + mem[_5168]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5168 + ceil32(return_data.size) + ceil32(32 * mem[_5168 + mem[_5168]]) + 1
            mem[_5168 + ceil32(return_data.size)] = _5204
            require _5184 + (32 * _5204) + 32 <= return_data.size
            t = _5168 + ceil32(return_data.size) + 32
            s = _5168 + _5184 + 32
            while s < _5168 + _5184 + (32 * _5204) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6978 = mem[_734]
            _6979 = mem[_734 + 192]
            _6980 = mem[_734 + 224]
            _6989 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6989 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6989]:
                revert with 0, 50
            mem[_6989 + 32] = stor21
            if stor21 == address(_6979):
                if stor21 == address(_6980):
                    mem[_6989 + 100] = this.address
                    require ext_code.size(address(_6979))
                    staticcall address(_6979).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6989 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_6989 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6980))
                    staticcall address(_6980).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6989 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_6989 + (2 * ceil32(return_data.size)) + 100] = address(_6978)
                    mem[_6989 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6979))
                    call address(_6979).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[_6989 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_6989 + (4 * ceil32(return_data.size)) + 100] = address(_6978)
                    mem[_6989 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6980))
                    call address(_6980).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[_6989 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6989 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_6989 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_6989 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_6989 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_6989 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_6989 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6979), address(_6980), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                    mem[_6989 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6989 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _7431 = mem[_734 + 160]
                    _7432 = mem[_734 + 64]
                    _7433 = mem[_734 + 32]
                    mem[_6989 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7433))
                    staticcall address(_7433).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6989 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6989 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _7432 >= 999999:
                        mem[_6989 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_7431))
                        call address(_7431).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6989 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7567 = mem[_734 + 32]
                        mem[_6989 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7567))
                        staticcall address(_7567).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6989 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_734 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6989 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6989 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6989 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7787 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6989 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6989 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6989 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6989 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6989 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6989 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6989 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7787))
                        call address(_7787).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6989 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6989 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6989 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8828 = mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6989 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _8848 = mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6989 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6989 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6989 + (12 * ceil32(return_data.size)) + 96] = mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8828 + (32 * _8848) + 32 <= return_data.size
                        t = _6989 + (12 * ceil32(return_data.size)) + 128
                        s = _6989 + (11 * ceil32(return_data.size)) + _8828 + 128
                        while s < _6989 + (11 * ceil32(return_data.size)) + _8828 + (32 * _8848) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10293 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10293]
                    else:
                        mem[_6989 + (8 * ceil32(return_data.size)) + 100] = _7432
                        mem[_6989 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_7431))
                        call address(_7431).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _7432, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6989 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7568 = mem[_734 + 32]
                        mem[_6989 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7568))
                        staticcall address(_7568).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6989 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_734 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6989 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6989 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6989 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7788 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6989 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6989 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6989 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6989 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6989 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6989 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6989 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7788))
                        call address(_7788).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6989 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6989 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6989 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8829 = mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6989 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _8849 = mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6989 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6989 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6989 + (12 * ceil32(return_data.size)) + 96] = mem[_6989 + (11 * ceil32(return_data.size)) + mem[_6989 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8829 + (32 * _8849) + 32 <= return_data.size
                        t = _6989 + (12 * ceil32(return_data.size)) + 128
                        s = _6989 + (11 * ceil32(return_data.size)) + _8829 + 128
                        while s < _6989 + (11 * ceil32(return_data.size)) + _8829 + (32 * _8849) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10294]
                else:
                    if 1 >= mem[_6989]:
                        revert with 0, 50
                    mem[_6989 + 64] = address(_6980)
                    mem[_6989 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6989 + 100] = eth.balance(this.address) / 2
                    mem[_6989 + 132] = 64
                    mem[_6989 + 164] = mem[_6989]
                    s = 0
                    t = _6989 + 32
                    u = _6989 + 196
                    while s < mem[_6989]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6978))
                    staticcall address(_6978).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6989 + (32 * mem[_6989]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8816 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8838 = mem[_8816]
                    require mem[_8816] <= test266151307()
                    require _8816 + mem[_8816] + 31 < _8816 + return_data.size
                    _8858 = mem[_8816 + mem[_8816]]
                    if mem[_8816 + mem[_8816]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8816 + mem[_8816]]) + 1 < 0 or _8816 + ceil32(return_data.size) + ceil32(32 * mem[_8816 + mem[_8816]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8816 + ceil32(return_data.size) + ceil32(32 * mem[_8816 + mem[_8816]]) + 1
                    mem[_8816 + ceil32(return_data.size)] = _8858
                    require _8838 + (32 * _8858) + 32 <= return_data.size
                    t = _8816 + ceil32(return_data.size) + 32
                    s = _8816 + _8838 + 32
                    while s < _8816 + _8838 + (32 * _8858) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8858:
                        revert with 0, 50
                    _10261 = mem[_8816 + ceil32(return_data.size) + 64]
                    if mem[_8816 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8816 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8816 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8858:
                        revert with 0, 50
                    _10330 = mem[_8816 + ceil32(return_data.size) + 64]
                    if mem[_8816 + ceil32(return_data.size) + 64] < 100 * mem[_8816 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10330 - (100 * _10261 / 10000)
                    mem[mem[64] + 36] = 128
                    _10369 = mem[_6989]
                    mem[mem[64] + 132] = mem[_6989]
                    s = 0
                    t = _6989 + 32
                    u = mem[64] + 164
                    while s < _10369:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _10330 - (100 * _10261 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10369) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11694 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11703 = mem[_11694]
                    require mem[_11694] <= test266151307()
                    require _11694 + mem[_11694] + 31 < _11694 + return_data.size
                    _11712 = mem[_11694 + mem[_11694]]
                    if mem[_11694 + mem[_11694]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11694 + mem[_11694]]) + 1 < 0 or _11694 + ceil32(return_data.size) + ceil32(32 * mem[_11694 + mem[_11694]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11694 + ceil32(return_data.size) + ceil32(32 * mem[_11694 + mem[_11694]]) + 1
                    mem[_11694 + ceil32(return_data.size)] = _11712
                    require _11703 + (32 * _11712) + 32 <= return_data.size
                    t = _11694 + ceil32(return_data.size) + 32
                    s = _11694 + _11703 + 32
                    while s < _11694 + _11703 + (32 * _11712) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6979))
                    staticcall address(_6979).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12992 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13003 = mem[_12992]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6980))
                    staticcall address(_6980).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13038 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13049 = mem[_13038]
                    if not _13003:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13038]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6979))
                    call address(_6979).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13122 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13122] == bool(mem[_13122])
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6980))
                    call address(_6980).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13165 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13165] == bool(mem[_13165])
                    if _13003 and 1 > -1 / _13003:
                        revert with 0, 17
                    if _13003 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13003 < 100 * _13003 / 10000:
                        revert with 0, 17
                    if _13049 and 1 > -1 / _13049:
                        revert with 0, 17
                    if _13049 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13049 < 100 * _13049 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _13003
                    mem[mem[64] + 100] = _13049
                    mem[mem[64] + 132] = _13003 - (100 * _13003 / 10000)
                    mem[mem[64] + 164] = _13049 - (100 * _13049 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6979), address(_6980), _13003, _13049, _13003 - (100 * _13003 / 10000), _13049 - (100 * _13049 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13301 = mem[_734 + 160]
                    _13302 = mem[_734 + 64]
                    _13303 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13303))
                    staticcall address(_13303).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13342 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13357 = mem[_13342]
                    if _13302 >= 999999:
                        mem[mem[64] + 4] = mem[_13342]
                        require ext_code.size(address(_13301))
                        call address(_13301).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13357
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13357
                        emit Earn(_13357);
                        _13446 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13446))
                        staticcall address(_13446).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13505]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13630 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13650 = mem[_13630]
                        _13674 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13698 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13650
                        mem[mem[64] + 36] = 128
                        _13716 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13698 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13674))
                        call address(_13674).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13698 + (32 * _13716) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14287 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14308 = mem[_14287]
                        require mem[_14287] <= test266151307()
                        require _14287 + mem[_14287] + 31 < _14287 + return_data.size
                        _14329 = mem[_14287 + mem[_14287]]
                        if mem[_14287 + mem[_14287]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14287 + mem[_14287]]) + 1 < 0 or _14287 + ceil32(return_data.size) + ceil32(32 * mem[_14287 + mem[_14287]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14287 + ceil32(return_data.size) + ceil32(32 * mem[_14287 + mem[_14287]]) + 1
                        mem[_14287 + ceil32(return_data.size)] = _14329
                        require _14308 + (32 * _14329) + 32 <= return_data.size
                        t = _14287 + ceil32(return_data.size) + 32
                        s = _14287 + _14308 + 32
                        while s < _14287 + _14308 + (32 * _14329) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15003 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15003]
                    else:
                        mem[mem[64] + 4] = _13302
                        mem[mem[64] + 36] = _13357
                        require ext_code.size(address(_13301))
                        call address(_13301).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13302, _13357
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13357
                        emit Earn(_13357);
                        _13447 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13447))
                        staticcall address(_13447).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13506 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13506]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13631 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13651 = mem[_13631]
                        _13675 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13699 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13651
                        mem[mem[64] + 36] = 128
                        _13717 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13699 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13675))
                        call address(_13675).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13699 + (32 * _13717) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14288 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14309 = mem[_14288]
                        require mem[_14288] <= test266151307()
                        require _14288 + mem[_14288] + 31 < _14288 + return_data.size
                        _14330 = mem[_14288 + mem[_14288]]
                        if mem[_14288 + mem[_14288]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14288 + mem[_14288]]) + 1 < 0 or _14288 + ceil32(return_data.size) + ceil32(32 * mem[_14288 + mem[_14288]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14288 + ceil32(return_data.size) + ceil32(32 * mem[_14288 + mem[_14288]]) + 1
                        mem[_14288 + ceil32(return_data.size)] = _14330
                        require _14309 + (32 * _14330) + 32 <= return_data.size
                        t = _14288 + ceil32(return_data.size) + 32
                        s = _14288 + _14309 + 32
                        while s < _14288 + _14309 + (32 * _14330) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15004 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15004]
            else:
                if 1 >= mem[_6989]:
                    revert with 0, 50
                mem[_6989 + 64] = address(_6979)
                mem[_6989 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6989 + 100] = eth.balance(this.address) / 2
                mem[_6989 + 132] = 64
                mem[_6989 + 164] = mem[_6989]
                s = 0
                t = _6989 + 32
                u = _6989 + 196
                while s < mem[_6989]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6978))
                staticcall address(_6978).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6989 + (32 * mem[_6989]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8817 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8839 = mem[_8817]
                require mem[_8817] <= test266151307()
                require _8817 + mem[_8817] + 31 < _8817 + return_data.size
                _8859 = mem[_8817 + mem[_8817]]
                if mem[_8817 + mem[_8817]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8817 + mem[_8817]]) + 1 < 0 or _8817 + ceil32(return_data.size) + ceil32(32 * mem[_8817 + mem[_8817]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8817 + ceil32(return_data.size) + ceil32(32 * mem[_8817 + mem[_8817]]) + 1
                mem[_8817 + ceil32(return_data.size)] = _8859
                require _8839 + (32 * _8859) + 32 <= return_data.size
                t = _8817 + ceil32(return_data.size) + 32
                s = _8817 + _8839 + 32
                while s < _8817 + _8839 + (32 * _8859) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8859:
                    revert with 0, 50
                _10262 = mem[_8817 + ceil32(return_data.size) + 64]
                if mem[_8817 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8817 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8817 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8859:
                    revert with 0, 50
                _10331 = mem[_8817 + ceil32(return_data.size) + 64]
                if mem[_8817 + ceil32(return_data.size) + 64] < 100 * mem[_8817 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10331 - (100 * _10262 / 10000)
                mem[mem[64] + 36] = 128
                _10370 = mem[_6989]
                mem[mem[64] + 132] = mem[_6989]
                s = 0
                t = _6989 + 32
                u = mem[64] + 164
                while s < _10370:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_6978))
                call address(_6978).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _10331 - (100 * _10262 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10370) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11695 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11704 = mem[_11695]
                require mem[_11695] <= test266151307()
                require _11695 + mem[_11695] + 31 < _11695 + return_data.size
                _11713 = mem[_11695 + mem[_11695]]
                if mem[_11695 + mem[_11695]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11695 + mem[_11695]]) + 1 < 0 or _11695 + ceil32(return_data.size) + ceil32(32 * mem[_11695 + mem[_11695]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11695 + ceil32(return_data.size) + ceil32(32 * mem[_11695 + mem[_11695]]) + 1
                mem[_11695 + ceil32(return_data.size)] = _11713
                require _11704 + (32 * _11713) + 32 <= return_data.size
                t = _11695 + ceil32(return_data.size) + 32
                s = _11695 + _11704 + 32
                while s < _11695 + _11704 + (32 * _11713) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6980):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6979))
                    staticcall address(_6979).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13008 = mem[_12996]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6980))
                    staticcall address(_6980).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13054 = mem[_13042]
                    if not _13008:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13042]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6979))
                    call address(_6979).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13127 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13127] == bool(mem[_13127])
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6980))
                    call address(_6980).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13173 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13173] == bool(mem[_13173])
                    if _13008 and 1 > -1 / _13008:
                        revert with 0, 17
                    if _13008 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13008 < 100 * _13008 / 10000:
                        revert with 0, 17
                    if _13054 and 1 > -1 / _13054:
                        revert with 0, 17
                    if _13054 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13054 < 100 * _13054 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _13008
                    mem[mem[64] + 100] = _13054
                    mem[mem[64] + 132] = _13008 - (100 * _13008 / 10000)
                    mem[mem[64] + 164] = _13054 - (100 * _13054 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6979), address(_6980), _13008, _13054, _13008 - (100 * _13008 / 10000), _13054 - (100 * _13054 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13323 = mem[_734 + 160]
                    _13324 = mem[_734 + 64]
                    _13325 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13325))
                    staticcall address(_13325).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13346 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13363 = mem[_13346]
                    if _13324 >= 999999:
                        mem[mem[64] + 4] = mem[_13346]
                        require ext_code.size(address(_13323))
                        call address(_13323).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13363
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13363
                        emit Earn(_13363);
                        _13477 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13477))
                        staticcall address(_13477).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13514 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13514]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13641 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13664 = mem[_13641]
                        _13685 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13706 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13664
                        mem[mem[64] + 36] = 128
                        _13724 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13706 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13685))
                        call address(_13685).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13706 + (32 * _13724) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14289 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14310 = mem[_14289]
                        require mem[_14289] <= test266151307()
                        require _14289 + mem[_14289] + 31 < _14289 + return_data.size
                        _14331 = mem[_14289 + mem[_14289]]
                        if mem[_14289 + mem[_14289]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14289 + mem[_14289]]) + 1 < 0 or _14289 + ceil32(return_data.size) + ceil32(32 * mem[_14289 + mem[_14289]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14289 + ceil32(return_data.size) + ceil32(32 * mem[_14289 + mem[_14289]]) + 1
                        mem[_14289 + ceil32(return_data.size)] = _14331
                        require _14310 + (32 * _14331) + 32 <= return_data.size
                        t = _14289 + ceil32(return_data.size) + 32
                        s = _14289 + _14310 + 32
                        while s < _14289 + _14310 + (32 * _14331) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15005 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15005]
                    else:
                        mem[mem[64] + 4] = _13324
                        mem[mem[64] + 36] = _13363
                        require ext_code.size(address(_13323))
                        call address(_13323).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13324, _13363
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13363
                        emit Earn(_13363);
                        _13478 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13478))
                        staticcall address(_13478).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13515 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13515]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13665 = mem[_13642]
                        _13686 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13707 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13665
                        mem[mem[64] + 36] = 128
                        _13725 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13725:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13707 + 68] = this.address
                        mem[_13707 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13686))
                        call address(_13686).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13707 + (32 * _13725) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14290 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14311 = mem[_14290]
                        require mem[_14290] <= test266151307()
                        require _14290 + mem[_14290] + 31 < _14290 + return_data.size
                        _14332 = mem[_14290 + mem[_14290]]
                        if mem[_14290 + mem[_14290]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14290 + mem[_14290]]) + 1 < 0 or _14290 + ceil32(return_data.size) + ceil32(32 * mem[_14290 + mem[_14290]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14290 + ceil32(return_data.size) + ceil32(32 * mem[_14290 + mem[_14290]]) + 1
                        mem[_14290 + ceil32(return_data.size)] = _14332
                        require _14311 + (32 * _14332) + 32 <= return_data.size
                        t = _14290 + ceil32(return_data.size) + 32
                        s = _14290 + _14311 + 32
                        while s < _14290 + _14311 + (32 * _14332) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15006 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15006]
                else:
                    if 1 >= mem[_6989]:
                        revert with 0, 50
                    mem[_6989 + 64] = address(_6980)
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _13012 = mem[_6989]
                    mem[mem[64] + 68] = mem[_6989]
                    s = 0
                    t = _6989 + 32
                    u = mem[64] + 100
                    while s < _13012:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6978))
                    staticcall address(_6978).getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _13012) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14294 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14315 = mem[_14294]
                    require mem[_14294] <= test266151307()
                    require _14294 + mem[_14294] + 31 < _14294 + return_data.size
                    _14336 = mem[_14294 + mem[_14294]]
                    if mem[_14294 + mem[_14294]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14294 + mem[_14294]]) + 1 < 0 or _14294 + ceil32(return_data.size) + ceil32(32 * mem[_14294 + mem[_14294]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14294 + ceil32(return_data.size) + ceil32(32 * mem[_14294 + mem[_14294]]) + 1
                    mem[_14294 + ceil32(return_data.size)] = _14336
                    require _14315 + (32 * _14336) + 32 <= return_data.size
                    t = _14294 + ceil32(return_data.size) + 32
                    s = _14294 + _14315 + 32
                    while s < _14294 + _14315 + (32 * _14336) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14336:
                        revert with 0, 50
                    _14955 = mem[_14294 + ceil32(return_data.size) + 64]
                    if mem[_14294 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14294 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_14294 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _14336:
                        revert with 0, 50
                    _15034 = mem[_14294 + ceil32(return_data.size) + 64]
                    if mem[_14294 + ceil32(return_data.size) + 64] < 100 * mem[_14294 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _15034 - (100 * _14955 / 10000)
                    mem[mem[64] + 36] = 128
                    _15051 = mem[_6989]
                    mem[mem[64] + 132] = mem[_6989]
                    s = 0
                    t = _6989 + 32
                    u = mem[64] + 164
                    while s < _15051:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _15034 - (100 * _14955 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _15051) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15507 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15511 = mem[_15507]
                    require mem[_15507] <= test266151307()
                    require _15507 + mem[_15507] + 31 < _15507 + return_data.size
                    _15515 = mem[_15507 + mem[_15507]]
                    if mem[_15507 + mem[_15507]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15507 + mem[_15507]]) + 1 < 0 or _15507 + ceil32(return_data.size) + ceil32(32 * mem[_15507 + mem[_15507]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15507 + ceil32(return_data.size) + ceil32(32 * mem[_15507 + mem[_15507]]) + 1
                    mem[_15507 + ceil32(return_data.size)] = _15515
                    require _15511 + (32 * _15515) + 32 <= return_data.size
                    t = _15507 + ceil32(return_data.size) + 32
                    s = _15507 + _15511 + 32
                    while s < _15507 + _15511 + (32 * _15515) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6979))
                    staticcall address(_6979).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15903 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15907 = mem[_15903]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6980))
                    staticcall address(_6980).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15919 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15923 = mem[_15919]
                    if not _15907:
                        revert with 0, 'Desired value is zero'
                    if not mem[_15919]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6979))
                    call address(_6979).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15951 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15951] == bool(mem[_15951])
                    mem[mem[64] + 4] = address(_6978)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6980))
                    call address(_6980).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6978), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15967] == bool(mem[_15967])
                    if _15907 and 1 > -1 / _15907:
                        revert with 0, 17
                    if _15907 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _15907 < 100 * _15907 / 10000:
                        revert with 0, 17
                    if _15923 and 1 > -1 / _15923:
                        revert with 0, 17
                    if _15923 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _15923 < 100 * _15923 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _15907
                    mem[mem[64] + 100] = _15923
                    mem[mem[64] + 132] = _15907 - (100 * _15907 / 10000)
                    mem[mem[64] + 164] = _15923 - (100 * _15923 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6978))
                    call address(_6978).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6979), address(_6980), _15907, _15923, _15907 - (100 * _15907 / 10000), _15923 - (100 * _15923 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _16005 = mem[_734 + 160]
                    _16006 = mem[_734 + 64]
                    _16007 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16007))
                    staticcall address(_16007).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16019 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16023 = mem[_16019]
                    if _16006 >= 999999:
                        mem[mem[64] + 4] = mem[_16019]
                        require ext_code.size(address(_16005))
                        call address(_16005).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _16023
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _16023
                        emit Earn(_16023);
                        _16062 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16062))
                        staticcall address(_16062).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16086 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_16086]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16142 = mem[_16134]
                        _16150 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _16158 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _16142
                        mem[mem[64] + 36] = 128
                        _16166 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_16158 + 100] = block.timestamp + 60
                        require ext_code.size(address(_16150))
                        call address(_16150).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16158 + (32 * _16166) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16278 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16286 = mem[_16278]
                        require mem[_16278] <= test266151307()
                        require _16278 + mem[_16278] + 31 < _16278 + return_data.size
                        _16294 = mem[_16278 + mem[_16278]]
                        if mem[_16278 + mem[_16278]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_16278 + mem[_16278]]) + 1 < 0 or _16278 + ceil32(return_data.size) + ceil32(32 * mem[_16278 + mem[_16278]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _16278 + ceil32(return_data.size) + ceil32(32 * mem[_16278 + mem[_16278]]) + 1
                        mem[_16278 + ceil32(return_data.size)] = _16294
                        require _16286 + (32 * _16294) + 32 <= return_data.size
                        t = _16278 + ceil32(return_data.size) + 32
                        s = _16278 + _16286 + 32
                        while s < _16278 + _16286 + (32 * _16294) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16374 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_16374]
                    else:
                        mem[mem[64] + 4] = _16006
                        mem[mem[64] + 36] = _16023
                        require ext_code.size(address(_16005))
                        call address(_16005).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _16006, _16023
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _16023
                        emit Earn(_16023);
                        _16063 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16063))
                        staticcall address(_16063).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16087 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_16087]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16143 = mem[_16135]
                        _16151 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _16159 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _16143
                        mem[mem[64] + 36] = 128
                        _16167 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _16167:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16159 + 68] = this.address
                        mem[_16159 + 100] = block.timestamp + 60
                        require ext_code.size(address(_16151))
                        call address(_16151).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16159 + (32 * _16167) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16279 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16287 = mem[_16279]
                        require mem[_16279] <= test266151307()
                        require _16279 + mem[_16279] + 31 < _16279 + return_data.size
                        _16295 = mem[_16279 + mem[_16279]]
                        if mem[_16279 + mem[_16279]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_16279 + mem[_16279]]) + 1 < 0 or _16279 + ceil32(return_data.size) + ceil32(32 * mem[_16279 + mem[_16279]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _16279 + ceil32(return_data.size) + ceil32(32 * mem[_16279 + mem[_16279]]) + 1
                        mem[_16279 + ceil32(return_data.size)] = _16295
                        require _16287 + (32 * _16295) + 32 <= return_data.size
                        t = _16279 + ceil32(return_data.size) + 32
                        s = _16279 + _16287 + 32
                        while s < _16279 + _16287 + (32 * _16295) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16375 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_16375]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _734
            s = _3379 - (100 * _3379 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _744 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _753 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_753] = mem[_744]
        mem[_753 + 32] = mem[_744 + 32]
        mem[_753 + 64] = mem[_744 + 64]
        require return_data.size - 96 >= 96
        _767 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_767] = mem[_744 + 96]
        mem[_767 + 32] = mem[_744 + 128]
        mem[_767 + 64] = mem[_744 + 160]
        mem[_753 + 96] = _767
        mem[_753 + 128] = mem[_744 + 192]
        require return_data.size - 224 >= 96
        _787 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_787] = mem[_744 + 224]
        mem[_787 + 32] = mem[_744 + 256]
        mem[_787 + 64] = mem[_744 + 288]
        mem[_753 + 160] = _787
        _801 = mem[_753 + 64]
        if not mem[_753 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _734
            s = mem[_753 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _823 = mem[64]
        mem[64] = mem[64] + 256
        mem[_823] = strategyInfo[stor9[idx].field_0].field_0
        mem[_823 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_823 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_823 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_823 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_823 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_823 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_823 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _801
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _801
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _863 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _869 = mem[_863]
            require mem[_863] == mem[_863 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_863 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_869))
            staticcall address(_869).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _926 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _931 = mem[_926]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_869))
            staticcall address(_869).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _939 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _945 = mem[_939]
            if mem[_939] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _931:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _970 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _982 = mem[_970]
            if 10^12 * _945 / _931 and mem[_970] > -1 / 10^12 * _945 / _931:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _945 / _931 * _982 / 10^12
            mem[mem[64] + 36] = 64
            _1034 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _1034) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1738 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1745 = mem[_1738]
            require mem[_1738] <= test266151307()
            require _1738 + mem[_1738] + 31 < _1738 + return_data.size
            _1760 = mem[_1738 + mem[_1738]]
            if mem[_1738 + mem[_1738]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1738 + mem[_1738]]) + 1 < 0 or _1738 + ceil32(return_data.size) + ceil32(32 * mem[_1738 + mem[_1738]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1738 + ceil32(return_data.size) + ceil32(32 * mem[_1738 + mem[_1738]]) + 1
            mem[_1738 + ceil32(return_data.size)] = _1760
            require _1745 + (32 * _1760) + 32 <= return_data.size
            t = _1738 + ceil32(return_data.size) + 32
            s = _1738 + _1745 + 32
            while s < _1738 + _1745 + (32 * _1760) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1760:
                revert with 0, 50
            _3376 = mem[_1738 + ceil32(return_data.size) + 64]
            if mem[_1738 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1738 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1738 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1738 + ceil32(return_data.size) + 64] < 100 * mem[_1738 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3458 = mem[_734]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_869))
            staticcall address(_869).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3490 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3506 = mem[_3490]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3506
            mem[mem[64] + 36] = _3376 - (100 * _3376 / 10000)
            mem[mem[64] + 68] = 160
            _3544 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3458))
            call address(_3458).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3544) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5165 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5181 = mem[_5165]
            require mem[_5165] <= test266151307()
            require _5165 + mem[_5165] + 31 < _5165 + return_data.size
            _5201 = mem[_5165 + mem[_5165]]
            if mem[_5165 + mem[_5165]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5165 + mem[_5165]]) + 1 < 0 or _5165 + ceil32(return_data.size) + ceil32(32 * mem[_5165 + mem[_5165]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5165 + ceil32(return_data.size) + ceil32(32 * mem[_5165 + mem[_5165]]) + 1
            mem[_5165 + ceil32(return_data.size)] = _5201
            require _5181 + (32 * _5201) + 32 <= return_data.size
            t = _5165 + ceil32(return_data.size) + 32
            s = _5165 + _5181 + 32
            while s < _5165 + _5181 + (32 * _5201) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6969 = mem[_734]
            _6970 = mem[_734 + 192]
            _6971 = mem[_734 + 224]
            _6983 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6983 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6983]:
                revert with 0, 50
            mem[_6983 + 32] = stor21
            if stor21 == address(_6970):
                if stor21 == address(_6971):
                    mem[_6983 + 100] = this.address
                    require ext_code.size(address(_6970))
                    staticcall address(_6970).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6983 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_6983 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6971))
                    staticcall address(_6971).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6983 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_6983 + (2 * ceil32(return_data.size)) + 100] = address(_6969)
                    mem[_6983 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6970))
                    call address(_6970).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[_6983 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_6983 + (4 * ceil32(return_data.size)) + 100] = address(_6969)
                    mem[_6983 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6971))
                    call address(_6971).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[_6983 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6983 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_6983 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_6983 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_6983 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                    mem[_6983 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_6983 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6970), address(_6971), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                    mem[_6983 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6983 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _7419 = mem[_734 + 160]
                    _7420 = mem[_734 + 64]
                    _7421 = mem[_734 + 32]
                    mem[_6983 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7421))
                    staticcall address(_7421).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6983 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6983 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _7420 >= 999999:
                        mem[_6983 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_7419))
                        call address(_7419).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6983 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7555 = mem[_734 + 32]
                        mem[_6983 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7555))
                        staticcall address(_7555).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6983 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_734 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6983 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6983 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6983 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7772 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6983 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6983 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6983 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6983 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6983 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6983 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6983 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7772))
                        call address(_7772).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6983 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6983 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6983 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8822 = mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6983 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _8842 = mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6983 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6983 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6983 + (12 * ceil32(return_data.size)) + 96] = _8842
                        require _8822 + (32 * _8842) + 32 <= return_data.size
                        t = _6983 + (12 * ceil32(return_data.size)) + 128
                        s = _6983 + (11 * ceil32(return_data.size)) + _8822 + 128
                        while s < _6983 + (11 * ceil32(return_data.size)) + _8822 + (32 * _8842) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10287]
                    else:
                        mem[_6983 + (8 * ceil32(return_data.size)) + 100] = _7420
                        mem[_6983 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_7419))
                        call address(_7419).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _7420, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6983 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7556 = mem[_734 + 32]
                        mem[_6983 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7556))
                        staticcall address(_7556).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6983 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_734 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6983 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6983 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6983 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7773 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6983 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6983 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6983 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6983 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6983 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6983 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6983 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7773))
                        call address(_7773).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6983 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6983 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6983 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8823 = mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6983 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _8843 = mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6983 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6983 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6983 + (11 * ceil32(return_data.size)) + mem[_6983 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6983 + (12 * ceil32(return_data.size)) + 96] = _8843
                        require _8823 + (32 * _8843) + 32 <= return_data.size
                        t = _6983 + (12 * ceil32(return_data.size)) + 128
                        s = _6983 + (11 * ceil32(return_data.size)) + _8823 + 128
                        while s < _6983 + (11 * ceil32(return_data.size)) + _8823 + (32 * _8843) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10288]
                else:
                    if 1 >= mem[_6983]:
                        revert with 0, 50
                    mem[_6983 + 64] = address(_6971)
                    mem[_6983 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6983 + 100] = eth.balance(this.address) / 2
                    mem[_6983 + 132] = 64
                    mem[_6983 + 164] = mem[_6983]
                    s = 0
                    t = _6983 + 32
                    u = _6983 + 196
                    while s < mem[_6983]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6969))
                    staticcall address(_6969).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6983 + (32 * mem[_6983]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8810 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8832 = mem[_8810]
                    require mem[_8810] <= test266151307()
                    require _8810 + mem[_8810] + 31 < _8810 + return_data.size
                    _8852 = mem[_8810 + mem[_8810]]
                    if mem[_8810 + mem[_8810]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8810 + mem[_8810]]) + 1 < 0 or _8810 + ceil32(return_data.size) + ceil32(32 * mem[_8810 + mem[_8810]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8810 + ceil32(return_data.size) + ceil32(32 * mem[_8810 + mem[_8810]]) + 1
                    mem[_8810 + ceil32(return_data.size)] = _8852
                    require _8832 + (32 * _8852) + 32 <= return_data.size
                    t = _8810 + ceil32(return_data.size) + 32
                    s = _8810 + _8832 + 32
                    while s < _8810 + _8832 + (32 * _8852) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8852:
                        revert with 0, 50
                    _10255 = mem[_8810 + ceil32(return_data.size) + 64]
                    if mem[_8810 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8810 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8810 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8852:
                        revert with 0, 50
                    _10324 = mem[_8810 + ceil32(return_data.size) + 64]
                    if mem[_8810 + ceil32(return_data.size) + 64] < 100 * mem[_8810 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10324 - (100 * _10255 / 10000)
                    mem[mem[64] + 36] = 128
                    _10363 = mem[_6983]
                    mem[mem[64] + 132] = mem[_6983]
                    s = 0
                    t = _6983 + 32
                    u = mem[64] + 164
                    while s < _10363:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _10324 - (100 * _10255 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10363) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11688 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11697 = mem[_11688]
                    require mem[_11688] <= test266151307()
                    require _11688 + mem[_11688] + 31 < _11688 + return_data.size
                    _11706 = mem[_11688 + mem[_11688]]
                    if mem[_11688 + mem[_11688]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11688 + mem[_11688]]) + 1 < 0 or _11688 + ceil32(return_data.size) + ceil32(32 * mem[_11688 + mem[_11688]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11688 + ceil32(return_data.size) + ceil32(32 * mem[_11688 + mem[_11688]]) + 1
                    mem[_11688 + ceil32(return_data.size)] = _11706
                    require _11697 + (32 * _11706) + 32 <= return_data.size
                    t = _11688 + ceil32(return_data.size) + 32
                    s = _11688 + _11697 + 32
                    while s < _11688 + _11697 + (32 * _11706) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6970))
                    staticcall address(_6970).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12989 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12997 = mem[_12989]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6971))
                    staticcall address(_6971).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13035 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13043 = mem[_13035]
                    if not _12997:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13035]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6970))
                    call address(_6970).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13116 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13116] == bool(mem[_13116])
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6971))
                    call address(_6971).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13159 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13159] == bool(mem[_13159])
                    if _12997 and 1 > -1 / _12997:
                        revert with 0, 17
                    if _12997 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _12997 < 100 * _12997 / 10000:
                        revert with 0, 17
                    if _13043 and 1 > -1 / _13043:
                        revert with 0, 17
                    if _13043 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13043 < 100 * _13043 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _12997
                    mem[mem[64] + 100] = _13043
                    mem[mem[64] + 132] = _12997 - (100 * _12997 / 10000)
                    mem[mem[64] + 164] = _13043 - (100 * _13043 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6970), address(_6971), _12997, _13043, _12997 - (100 * _12997 / 10000), _13043 - (100 * _13043 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13292 = mem[_734 + 160]
                    _13293 = mem[_734 + 64]
                    _13294 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13294))
                    staticcall address(_13294).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13339 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13348 = mem[_13339]
                    if _13293 >= 999999:
                        mem[mem[64] + 4] = mem[_13339]
                        require ext_code.size(address(_13292))
                        call address(_13292).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13348
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13348
                        emit Earn(_13348);
                        _13428 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13428))
                        staticcall address(_13428).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13496 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13496]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13624 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13644 = mem[_13624]
                        _13668 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13692 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13644
                        mem[mem[64] + 36] = 128
                        _13710 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13692 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13668))
                        call address(_13668).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13692 + (32 * _13710) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14275 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14296 = mem[_14275]
                        require mem[_14275] <= test266151307()
                        require _14275 + mem[_14275] + 31 < _14275 + return_data.size
                        _14317 = mem[_14275 + mem[_14275]]
                        if mem[_14275 + mem[_14275]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14275 + mem[_14275]]) + 1 < 0 or _14275 + ceil32(return_data.size) + ceil32(32 * mem[_14275 + mem[_14275]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14275 + ceil32(return_data.size) + ceil32(32 * mem[_14275 + mem[_14275]]) + 1
                        mem[_14275 + ceil32(return_data.size)] = _14317
                        require _14296 + (32 * _14317) + 32 <= return_data.size
                        t = _14275 + ceil32(return_data.size) + 32
                        s = _14275 + _14296 + 32
                        while s < _14275 + _14296 + (32 * _14317) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14991]
                    else:
                        mem[mem[64] + 4] = _13293
                        mem[mem[64] + 36] = _13348
                        require ext_code.size(address(_13292))
                        call address(_13292).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13293, _13348
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13348
                        emit Earn(_13348);
                        _13429 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13429))
                        staticcall address(_13429).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13497 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13497]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13625 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13645 = mem[_13625]
                        _13669 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13693 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13645
                        mem[mem[64] + 36] = 128
                        _13711 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13711:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13693 + 68] = this.address
                        mem[_13693 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13669))
                        call address(_13669).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13693 + (32 * _13711) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14276 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14297 = mem[_14276]
                        require mem[_14276] <= test266151307()
                        require _14276 + mem[_14276] + 31 < _14276 + return_data.size
                        _14318 = mem[_14276 + mem[_14276]]
                        if mem[_14276 + mem[_14276]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14276 + mem[_14276]]) + 1 < 0 or _14276 + ceil32(return_data.size) + ceil32(32 * mem[_14276 + mem[_14276]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14276 + ceil32(return_data.size) + ceil32(32 * mem[_14276 + mem[_14276]]) + 1
                        mem[_14276 + ceil32(return_data.size)] = _14318
                        require _14297 + (32 * _14318) + 32 <= return_data.size
                        t = _14276 + ceil32(return_data.size) + 32
                        s = _14276 + _14297 + 32
                        while s < _14276 + _14297 + (32 * _14318) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14992]
            else:
                if 1 >= mem[_6983]:
                    revert with 0, 50
                mem[_6983 + 64] = address(_6970)
                mem[_6983 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6983 + 100] = eth.balance(this.address) / 2
                mem[_6983 + 132] = 64
                mem[_6983 + 164] = mem[_6983]
                s = 0
                t = _6983 + 32
                u = _6983 + 196
                while s < mem[_6983]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6969))
                staticcall address(_6969).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6983 + (32 * mem[_6983]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8811 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8833 = mem[_8811]
                require mem[_8811] <= test266151307()
                require _8811 + mem[_8811] + 31 < _8811 + return_data.size
                _8853 = mem[_8811 + mem[_8811]]
                if mem[_8811 + mem[_8811]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8811 + mem[_8811]]) + 1 < 0 or _8811 + ceil32(return_data.size) + ceil32(32 * mem[_8811 + mem[_8811]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8811 + ceil32(return_data.size) + ceil32(32 * mem[_8811 + mem[_8811]]) + 1
                mem[_8811 + ceil32(return_data.size)] = _8853
                require _8833 + (32 * _8853) + 32 <= return_data.size
                t = _8811 + ceil32(return_data.size) + 32
                s = _8811 + _8833 + 32
                while s < _8811 + _8833 + (32 * _8853) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8853:
                    revert with 0, 50
                _10256 = mem[_8811 + ceil32(return_data.size) + 64]
                if mem[_8811 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8811 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8811 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8853:
                    revert with 0, 50
                _10325 = mem[_8811 + ceil32(return_data.size) + 64]
                if mem[_8811 + ceil32(return_data.size) + 64] < 100 * mem[_8811 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10354 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10325 - (100 * _10256 / 10000)
                mem[mem[64] + 36] = 128
                _10364 = mem[_6983]
                mem[mem[64] + 132] = mem[_6983]
                s = 0
                t = _6983 + 32
                u = mem[64] + 164
                while s < _10364:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10354 + 68] = this.address
                mem[_10354 + 100] = block.timestamp + 60
                require ext_code.size(address(_6969))
                call address(_6969).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10354 + (32 * _10364) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11689 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11698 = mem[_11689]
                require mem[_11689] <= test266151307()
                require _11689 + mem[_11689] + 31 < _11689 + return_data.size
                _11707 = mem[_11689 + mem[_11689]]
                if mem[_11689 + mem[_11689]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11689 + mem[_11689]]) + 1 < 0 or _11689 + ceil32(return_data.size) + ceil32(32 * mem[_11689 + mem[_11689]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11689 + ceil32(return_data.size) + ceil32(32 * mem[_11689 + mem[_11689]]) + 1
                mem[_11689 + ceil32(return_data.size)] = _11707
                require _11698 + (32 * _11707) + 32 <= return_data.size
                t = _11689 + ceil32(return_data.size) + 32
                s = _11689 + _11698 + 32
                while s < _11689 + _11698 + (32 * _11707) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6971):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6970))
                    staticcall address(_6970).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12993 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13005 = mem[_12993]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6971))
                    staticcall address(_6971).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13039 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13051 = mem[_13039]
                    if not _13005:
                        revert with 0, 'Desired value is zero'
                    if not mem[_13039]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6970))
                    call address(_6970).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13124] == bool(mem[_13124])
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6971))
                    call address(_6971).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13167 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13167] == bool(mem[_13167])
                    if _13005 and 1 > -1 / _13005:
                        revert with 0, 17
                    if _13005 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13005 < 100 * _13005 / 10000:
                        revert with 0, 17
                    if _13051 and 1 > -1 / _13051:
                        revert with 0, 17
                    if _13051 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _13051 < 100 * _13051 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _13005
                    mem[mem[64] + 100] = _13051
                    mem[mem[64] + 132] = _13005 - (100 * _13005 / 10000)
                    mem[mem[64] + 164] = _13051 - (100 * _13051 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6970), address(_6971), _13005, _13051, _13005 - (100 * _13005 / 10000), _13051 - (100 * _13051 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _13308 = mem[_734 + 160]
                    _13309 = mem[_734 + 64]
                    _13310 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13310))
                    staticcall address(_13310).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13343 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13360 = mem[_13343]
                    if _13309 >= 999999:
                        mem[mem[64] + 4] = mem[_13343]
                        require ext_code.size(address(_13308))
                        call address(_13308).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13360
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13360
                        emit Earn(_13360);
                        _13456 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13456))
                        staticcall address(_13456).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13508 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13508]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13652 = mem[_13632]
                        _13676 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13700 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13652
                        mem[mem[64] + 36] = 128
                        _13718 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13700 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13676))
                        call address(_13676).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13700 + (32 * _13718) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14277 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14298 = mem[_14277]
                        require mem[_14277] <= test266151307()
                        require _14277 + mem[_14277] + 31 < _14277 + return_data.size
                        _14319 = mem[_14277 + mem[_14277]]
                        if mem[_14277 + mem[_14277]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14277 + mem[_14277]]) + 1 < 0 or _14277 + ceil32(return_data.size) + ceil32(32 * mem[_14277 + mem[_14277]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14277 + ceil32(return_data.size) + ceil32(32 * mem[_14277 + mem[_14277]]) + 1
                        mem[_14277 + ceil32(return_data.size)] = _14319
                        require _14298 + (32 * _14319) + 32 <= return_data.size
                        t = _14277 + ceil32(return_data.size) + 32
                        s = _14277 + _14298 + 32
                        while s < _14277 + _14298 + (32 * _14319) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14993 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14993]
                    else:
                        mem[mem[64] + 4] = _13309
                        mem[mem[64] + 36] = _13360
                        require ext_code.size(address(_13308))
                        call address(_13308).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13309, _13360
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13360
                        emit Earn(_13360);
                        _13457 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13457))
                        staticcall address(_13457).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13509 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_13509]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13633 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13653 = mem[_13633]
                        _13677 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13701 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13653
                        mem[mem[64] + 36] = 128
                        _13719 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13701 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13677))
                        call address(_13677).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13701 + (32 * _13719) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14278 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14299 = mem[_14278]
                        require mem[_14278] <= test266151307()
                        require _14278 + mem[_14278] + 31 < _14278 + return_data.size
                        _14320 = mem[_14278 + mem[_14278]]
                        if mem[_14278 + mem[_14278]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14278 + mem[_14278]]) + 1 < 0 or _14278 + ceil32(return_data.size) + ceil32(32 * mem[_14278 + mem[_14278]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14278 + ceil32(return_data.size) + ceil32(32 * mem[_14278 + mem[_14278]]) + 1
                        mem[_14278 + ceil32(return_data.size)] = _14320
                        require _14299 + (32 * _14320) + 32 <= return_data.size
                        t = _14278 + ceil32(return_data.size) + 32
                        s = _14278 + _14299 + 32
                        while s < _14278 + _14299 + (32 * _14320) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14994]
                else:
                    if 1 >= mem[_6983]:
                        revert with 0, 50
                    mem[_6983 + 64] = address(_6971)
                    _12998 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _13009 = mem[_6983]
                    mem[mem[64] + 68] = mem[_6983]
                    s = 0
                    t = _6983 + 32
                    u = mem[64] + 100
                    while s < _13009:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6969))
                    staticcall address(_6969).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _12998 + (32 * _13009) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14291 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14312 = mem[_14291]
                    require mem[_14291] <= test266151307()
                    require _14291 + mem[_14291] + 31 < _14291 + return_data.size
                    _14333 = mem[_14291 + mem[_14291]]
                    if mem[_14291 + mem[_14291]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14291 + mem[_14291]]) + 1 < 0 or _14291 + ceil32(return_data.size) + ceil32(32 * mem[_14291 + mem[_14291]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14291 + ceil32(return_data.size) + ceil32(32 * mem[_14291 + mem[_14291]]) + 1
                    mem[_14291 + ceil32(return_data.size)] = _14333
                    require _14312 + (32 * _14333) + 32 <= return_data.size
                    t = _14291 + ceil32(return_data.size) + 32
                    s = _14291 + _14312 + 32
                    while s < _14291 + _14312 + (32 * _14333) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14333:
                        revert with 0, 50
                    _14952 = mem[_14291 + ceil32(return_data.size) + 64]
                    if mem[_14291 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14291 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_14291 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _14333:
                        revert with 0, 50
                    _15031 = mem[_14291 + ceil32(return_data.size) + 64]
                    if mem[_14291 + ceil32(return_data.size) + 64] < 100 * mem[_14291 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _15031 - (100 * _14952 / 10000)
                    mem[mem[64] + 36] = 128
                    _15048 = mem[_6983]
                    mem[mem[64] + 132] = mem[_6983]
                    s = 0
                    t = _6983 + 32
                    u = mem[64] + 164
                    while s < _15048:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _15031 - (100 * _14952 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _15048) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15504 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15508 = mem[_15504]
                    require mem[_15504] <= test266151307()
                    require _15504 + mem[_15504] + 31 < _15504 + return_data.size
                    _15512 = mem[_15504 + mem[_15504]]
                    if mem[_15504 + mem[_15504]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15504 + mem[_15504]]) + 1 < 0 or _15504 + ceil32(return_data.size) + ceil32(32 * mem[_15504 + mem[_15504]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15504 + ceil32(return_data.size) + ceil32(32 * mem[_15504 + mem[_15504]]) + 1
                    mem[_15504 + ceil32(return_data.size)] = _15512
                    require _15508 + (32 * _15512) + 32 <= return_data.size
                    t = _15504 + ceil32(return_data.size) + 32
                    s = _15504 + _15508 + 32
                    while s < _15504 + _15508 + (32 * _15512) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6970))
                    staticcall address(_6970).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15900 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15904 = mem[_15900]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6971))
                    staticcall address(_6971).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15916 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15920 = mem[_15916]
                    if not _15904:
                        revert with 0, 'Desired value is zero'
                    if not mem[_15916]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6970))
                    call address(_6970).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15948 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15948] == bool(mem[_15948])
                    mem[mem[64] + 4] = address(_6969)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6971))
                    call address(_6971).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6969), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15964 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15964] == bool(mem[_15964])
                    if _15904 and 1 > -1 / _15904:
                        revert with 0, 17
                    if _15904 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _15904 < 100 * _15904 / 10000:
                        revert with 0, 17
                    if _15920 and 1 > -1 / _15920:
                        revert with 0, 17
                    if _15920 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if _15920 < 100 * _15920 / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _15904
                    mem[mem[64] + 100] = _15920
                    mem[mem[64] + 132] = _15904 - (100 * _15904 / 10000)
                    mem[mem[64] + 164] = _15920 - (100 * _15920 / 10000)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6969))
                    call address(_6969).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6970), address(_6971), _15904, _15920, _15904 - (100 * _15904 / 10000), _15920 - (100 * _15920 / 10000), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _15996 = mem[_734 + 160]
                    _15997 = mem[_734 + 64]
                    _15998 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15998))
                    staticcall address(_15998).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16016 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16020 = mem[_16016]
                    if _15997 >= 999999:
                        mem[mem[64] + 4] = mem[_16016]
                        require ext_code.size(address(_15996))
                        call address(_15996).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _16020
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _16020
                        emit Earn(_16020);
                        _16056 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16056))
                        staticcall address(_16056).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_16080]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16136 = mem[_16128]
                        _16144 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _16152 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _16136
                        mem[mem[64] + 36] = 128
                        _16160 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_16152 + 100] = block.timestamp + 60
                        require ext_code.size(address(_16144))
                        call address(_16144).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16152 + (32 * _16160) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16272 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16280 = mem[_16272]
                        require mem[_16272] <= test266151307()
                        require _16272 + mem[_16272] + 31 < _16272 + return_data.size
                        _16288 = mem[_16272 + mem[_16272]]
                        if mem[_16272 + mem[_16272]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_16272 + mem[_16272]]) + 1 < 0 or _16272 + ceil32(return_data.size) + ceil32(32 * mem[_16272 + mem[_16272]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _16272 + ceil32(return_data.size) + ceil32(32 * mem[_16272 + mem[_16272]]) + 1
                        mem[_16272 + ceil32(return_data.size)] = _16288
                        require _16280 + (32 * _16288) + 32 <= return_data.size
                        t = _16272 + ceil32(return_data.size) + 32
                        s = _16272 + _16280 + 32
                        while s < _16272 + _16280 + (32 * _16288) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16368 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_16368]
                    else:
                        mem[mem[64] + 4] = _15997
                        mem[mem[64] + 36] = _16020
                        require ext_code.size(address(_15996))
                        call address(_15996).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _15997, _16020
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _16020
                        emit Earn(_16020);
                        _16057 = mem[_734 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16057))
                        staticcall address(_16057).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16081 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_734 + 96] = mem[_16081]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16137 = mem[_16129]
                        _16145 = mem[_734]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _16153 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _16137
                        mem[mem[64] + 36] = 128
                        _16161 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_16153 + 100] = block.timestamp + 60
                        require ext_code.size(address(_16145))
                        call address(_16145).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16153 + (32 * _16161) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16273 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16281 = mem[_16273]
                        require mem[_16273] <= test266151307()
                        require _16273 + mem[_16273] + 31 < _16273 + return_data.size
                        _16289 = mem[_16273 + mem[_16273]]
                        if mem[_16273 + mem[_16273]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_16273 + mem[_16273]]) + 1 < 0 or _16273 + ceil32(return_data.size) + ceil32(32 * mem[_16273 + mem[_16273]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _16273 + ceil32(return_data.size) + ceil32(32 * mem[_16273 + mem[_16273]]) + 1
                        mem[_16273 + ceil32(return_data.size)] = _16289
                        require _16281 + (32 * _16289) + 32 <= return_data.size
                        t = _16273 + ceil32(return_data.size) + 32
                        s = _16273 + _16281 + 32
                        while s < _16273 + _16281 + (32 * _16289) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16369 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_16369]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _734
            s = _3376 - (100 * _3376 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _801
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _801
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _864 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _870 = mem[_864]
        require mem[_864] == mem[_864 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_864 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_870))
        staticcall address(_870).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _927 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _932 = mem[_927]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_870))
        staticcall address(_870).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _940 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _946 = mem[_940]
        if mem[_940] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _932:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _971 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _983 = mem[_971]
        if 10^12 * _946 / _932 and mem[_971] > -1 / 10^12 * _946 / _932:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _946 / _932 * _983 / 10^12
        mem[mem[64] + 36] = 64
        _1035 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len (32 * _1035) + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1739 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1746 = mem[_1739]
        require mem[_1739] <= test266151307()
        require _1739 + mem[_1739] + 31 < _1739 + return_data.size
        _1761 = mem[_1739 + mem[_1739]]
        if mem[_1739 + mem[_1739]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1739 + mem[_1739]]) + 1 < 0 or _1739 + ceil32(return_data.size) + ceil32(32 * mem[_1739 + mem[_1739]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1739 + ceil32(return_data.size) + ceil32(32 * mem[_1739 + mem[_1739]]) + 1
        mem[_1739 + ceil32(return_data.size)] = _1761
        require _1746 + (32 * _1761) + 32 <= return_data.size
        t = _1739 + ceil32(return_data.size) + 32
        s = _1739 + _1746 + 32
        while s < _1739 + _1746 + (32 * _1761) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1761:
            revert with 0, 50
        _3377 = mem[_1739 + ceil32(return_data.size) + 64]
        if mem[_1739 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1739 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1739 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1739 + ceil32(return_data.size) + 64] < 100 * mem[_1739 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _3459 = mem[_734]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_870))
        staticcall address(_870).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3491 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3507 = mem[_3491]
        if 60 > !block.timestamp:
            revert with 0, 17
        _3533 = mem[64]
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3507
        mem[mem[64] + 36] = _3377 - (100 * _3377 / 10000)
        mem[mem[64] + 68] = 160
        _3545 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < _3545:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_3533 + 100] = this.address
        mem[_3533 + 132] = block.timestamp + 60
        require ext_code.size(address(_3459))
        call address(_3459).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3533 + (32 * _3545) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5166 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5182 = mem[_5166]
        require mem[_5166] <= test266151307()
        require _5166 + mem[_5166] + 31 < _5166 + return_data.size
        _5202 = mem[_5166 + mem[_5166]]
        if mem[_5166 + mem[_5166]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5166 + mem[_5166]]) + 1 < 0 or _5166 + ceil32(return_data.size) + ceil32(32 * mem[_5166 + mem[_5166]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5166 + ceil32(return_data.size) + ceil32(32 * mem[_5166 + mem[_5166]]) + 1
        mem[_5166 + ceil32(return_data.size)] = _5202
        require _5182 + (32 * _5202) + 32 <= return_data.size
        t = _5166 + ceil32(return_data.size) + 32
        s = _5166 + _5182 + 32
        while s < _5166 + _5182 + (32 * _5202) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _6972 = mem[_734]
        _6973 = mem[_734 + 192]
        _6974 = mem[_734 + 224]
        _6985 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_6985 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_6985]:
            revert with 0, 50
        mem[_6985 + 32] = stor21
        if stor21 == address(_6973):
            if stor21 == address(_6974):
                mem[_6985 + 100] = this.address
                require ext_code.size(address(_6973))
                staticcall address(_6973).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6985 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_6985 + ceil32(return_data.size) + 100] = this.address
                require ext_code.size(address(_6974))
                staticcall address(_6974).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6985 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                mem[_6985 + (2 * ceil32(return_data.size)) + 100] = address(_6972)
                mem[_6985 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_6973))
                call address(_6973).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[_6985 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_6985 + (4 * ceil32(return_data.size)) + 100] = address(_6972)
                mem[_6985 + (4 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_6974))
                call address(_6974).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[_6985 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                    revert with 0, 17
                if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_6985 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                mem[_6985 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                mem[_6985 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                mem[_6985 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000)
                mem[_6985 + (6 * ceil32(return_data.size)) + 292] = this.address
                mem[_6985 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6973), address(_6974), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
                mem[_6985 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _6985 + (7 * ceil32(return_data.size)) + 96
                require return_data.size >= 96
                _7423 = mem[_734 + 160]
                _7424 = mem[_734 + 64]
                _7425 = mem[_734 + 32]
                mem[_6985 + (7 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_7425))
                staticcall address(_7425).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6985 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _6985 + (8 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _7424 >= 999999:
                    mem[_6985 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_7423))
                    call address(_7423).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6985 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _7559 = mem[_734 + 32]
                    mem[_6985 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7559))
                    staticcall address(_7559).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6985 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_734 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6985 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6985 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6985 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7777 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6985 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6985 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6985 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_6985 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6985 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6985 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6985 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7777))
                    call address(_7777).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6985 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6985 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6985 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8824 = mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6985 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _8844 = mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6985 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6985 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6985 + (12 * ceil32(return_data.size)) + 96] = _8844
                    require _8824 + (32 * _8844) + 32 <= return_data.size
                    t = _6985 + (12 * ceil32(return_data.size)) + 128
                    s = _6985 + (11 * ceil32(return_data.size)) + _8824 + 128
                    while s < _6985 + (11 * ceil32(return_data.size)) + _8824 + (32 * _8844) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10289]
                else:
                    mem[_6985 + (8 * ceil32(return_data.size)) + 100] = _7424
                    mem[_6985 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_7423))
                    call address(_7423).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _7424, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6985 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _7560 = mem[_734 + 32]
                    mem[_6985 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7560))
                    staticcall address(_7560).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6985 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_734 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6985 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6985 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6985 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7778 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6985 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6985 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6985 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_6985 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6985 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6985 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6985 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7778))
                    call address(_7778).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6985 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6985 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6985 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8825 = mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6985 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _8845 = mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6985 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6985 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6985 + (11 * ceil32(return_data.size)) + mem[_6985 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6985 + (12 * ceil32(return_data.size)) + 96] = _8845
                    require _8825 + (32 * _8845) + 32 <= return_data.size
                    t = _6985 + (12 * ceil32(return_data.size)) + 128
                    s = _6985 + (11 * ceil32(return_data.size)) + _8825 + 128
                    while s < _6985 + (11 * ceil32(return_data.size)) + _8825 + (32 * _8845) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10290 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10290]
            else:
                if 1 >= mem[_6985]:
                    revert with 0, 50
                mem[_6985 + 64] = address(_6974)
                mem[_6985 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6985 + 100] = eth.balance(this.address) / 2
                mem[_6985 + 132] = 64
                mem[_6985 + 164] = mem[_6985]
                s = 0
                t = _6985 + 32
                u = _6985 + 196
                while s < mem[_6985]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6972))
                staticcall address(_6972).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6985 + (32 * mem[_6985]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8812 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8834 = mem[_8812]
                require mem[_8812] <= test266151307()
                require _8812 + mem[_8812] + 31 < _8812 + return_data.size
                _8854 = mem[_8812 + mem[_8812]]
                if mem[_8812 + mem[_8812]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8812 + mem[_8812]]) + 1 < 0 or _8812 + ceil32(return_data.size) + ceil32(32 * mem[_8812 + mem[_8812]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8812 + ceil32(return_data.size) + ceil32(32 * mem[_8812 + mem[_8812]]) + 1
                mem[_8812 + ceil32(return_data.size)] = _8854
                require _8834 + (32 * _8854) + 32 <= return_data.size
                t = _8812 + ceil32(return_data.size) + 32
                s = _8812 + _8834 + 32
                while s < _8812 + _8834 + (32 * _8854) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8854:
                    revert with 0, 50
                _10257 = mem[_8812 + ceil32(return_data.size) + 64]
                if mem[_8812 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8812 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8812 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8854:
                    revert with 0, 50
                _10326 = mem[_8812 + ceil32(return_data.size) + 64]
                if mem[_8812 + ceil32(return_data.size) + 64] < 100 * mem[_8812 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10355 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10326 - (100 * _10257 / 10000)
                mem[mem[64] + 36] = 128
                _10365 = mem[_6985]
                mem[mem[64] + 132] = mem[_6985]
                s = 0
                t = _6985 + 32
                u = mem[64] + 164
                while s < _10365:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10355 + 68] = this.address
                mem[_10355 + 100] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10355 + (32 * _10365) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11690 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11699 = mem[_11690]
                require mem[_11690] <= test266151307()
                require _11690 + mem[_11690] + 31 < _11690 + return_data.size
                _11708 = mem[_11690 + mem[_11690]]
                if mem[_11690 + mem[_11690]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11690 + mem[_11690]]) + 1 < 0 or _11690 + ceil32(return_data.size) + ceil32(32 * mem[_11690 + mem[_11690]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11690 + ceil32(return_data.size) + ceil32(32 * mem[_11690 + mem[_11690]]) + 1
                mem[_11690 + ceil32(return_data.size)] = _11708
                require _11699 + (32 * _11708) + 32 <= return_data.size
                t = _11690 + ceil32(return_data.size) + 32
                s = _11690 + _11699 + 32
                while s < _11690 + _11699 + (32 * _11708) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6973))
                staticcall address(_6973).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12990 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12999 = mem[_12990]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6974))
                staticcall address(_6974).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13036 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13045 = mem[_13036]
                if not _12999:
                    revert with 0, 'Desired value is zero'
                if not mem[_13036]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6973))
                call address(_6973).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13118 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13118] == bool(mem[_13118])
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6974))
                call address(_6974).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13161 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13161] == bool(mem[_13161])
                if _12999 and 1 > -1 / _12999:
                    revert with 0, 17
                if _12999 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _12999 < 100 * _12999 / 10000:
                    revert with 0, 17
                if _13045 and 1 > -1 / _13045:
                    revert with 0, 17
                if _13045 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _13045 < 100 * _13045 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _12999
                mem[mem[64] + 100] = _13045
                mem[mem[64] + 132] = _12999 - (100 * _12999 / 10000)
                mem[mem[64] + 164] = _13045 - (100 * _13045 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6973), address(_6974), _12999, _13045, _12999 - (100 * _12999 / 10000), _13045 - (100 * _13045 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _13295 = mem[_734 + 160]
                _13296 = mem[_734 + 64]
                _13297 = mem[_734 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_13297))
                staticcall address(_13297).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13340 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13351 = mem[_13340]
                if _13296 >= 999999:
                    mem[mem[64] + 4] = mem[_13340]
                    require ext_code.size(address(_13295))
                    call address(_13295).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _13351
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13351
                    emit Earn(_13351);
                    _13434 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13434))
                    staticcall address(_13434).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13499 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_13499]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13626 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13646 = mem[_13626]
                    _13670 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13694 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13646
                    mem[mem[64] + 36] = 128
                    _13712 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13694 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13670))
                    call address(_13670).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13694 + (32 * _13712) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14279 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14300 = mem[_14279]
                    require mem[_14279] <= test266151307()
                    require _14279 + mem[_14279] + 31 < _14279 + return_data.size
                    _14321 = mem[_14279 + mem[_14279]]
                    if mem[_14279 + mem[_14279]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14279 + mem[_14279]]) + 1 < 0 or _14279 + ceil32(return_data.size) + ceil32(32 * mem[_14279 + mem[_14279]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14279 + ceil32(return_data.size) + ceil32(32 * mem[_14279 + mem[_14279]]) + 1
                    mem[_14279 + ceil32(return_data.size)] = _14321
                    require _14300 + (32 * _14321) + 32 <= return_data.size
                    t = _14279 + ceil32(return_data.size) + 32
                    s = _14279 + _14300 + 32
                    while s < _14279 + _14300 + (32 * _14321) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14995 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14995]
                else:
                    mem[mem[64] + 4] = _13296
                    mem[mem[64] + 36] = _13351
                    require ext_code.size(address(_13295))
                    call address(_13295).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _13296, _13351
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13351
                    emit Earn(_13351);
                    _13435 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13435))
                    staticcall address(_13435).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_13500]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13627 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13647 = mem[_13627]
                    _13671 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13695 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13647
                    mem[mem[64] + 36] = 128
                    _13713 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13713:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13695 + 68] = this.address
                    mem[_13695 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13671))
                    call address(_13671).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13695 + (32 * _13713) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14280 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14301 = mem[_14280]
                    require mem[_14280] <= test266151307()
                    require _14280 + mem[_14280] + 31 < _14280 + return_data.size
                    _14322 = mem[_14280 + mem[_14280]]
                    if mem[_14280 + mem[_14280]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14280 + mem[_14280]]) + 1 < 0 or _14280 + ceil32(return_data.size) + ceil32(32 * mem[_14280 + mem[_14280]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14280 + ceil32(return_data.size) + ceil32(32 * mem[_14280 + mem[_14280]]) + 1
                    mem[_14280 + ceil32(return_data.size)] = _14322
                    require _14301 + (32 * _14322) + 32 <= return_data.size
                    t = _14280 + ceil32(return_data.size) + 32
                    s = _14280 + _14301 + 32
                    while s < _14280 + _14301 + (32 * _14322) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14996]
        else:
            if 1 >= mem[_6985]:
                revert with 0, 50
            mem[_6985 + 64] = address(_6973)
            mem[_6985 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_6985 + 100] = eth.balance(this.address) / 2
            mem[_6985 + 132] = 64
            mem[_6985 + 164] = mem[_6985]
            s = 0
            t = _6985 + 32
            u = _6985 + 196
            while s < mem[_6985]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_6972))
            staticcall address(_6972).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _6985 + (32 * mem[_6985]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8813 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8835 = mem[_8813]
            require mem[_8813] <= test266151307()
            require _8813 + mem[_8813] + 31 < _8813 + return_data.size
            _8855 = mem[_8813 + mem[_8813]]
            if mem[_8813 + mem[_8813]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8813 + mem[_8813]]) + 1 < 0 or _8813 + ceil32(return_data.size) + ceil32(32 * mem[_8813 + mem[_8813]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8813 + ceil32(return_data.size) + ceil32(32 * mem[_8813 + mem[_8813]]) + 1
            mem[_8813 + ceil32(return_data.size)] = _8855
            require _8835 + (32 * _8855) + 32 <= return_data.size
            t = _8813 + ceil32(return_data.size) + 32
            s = _8813 + _8835 + 32
            while s < _8813 + _8835 + (32 * _8855) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _8855:
                revert with 0, 50
            _10258 = mem[_8813 + ceil32(return_data.size) + 64]
            if mem[_8813 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8813 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_8813 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _8855:
                revert with 0, 50
            _10327 = mem[_8813 + ceil32(return_data.size) + 64]
            if mem[_8813 + ceil32(return_data.size) + 64] < 100 * mem[_8813 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _10327 - (100 * _10258 / 10000)
            mem[mem[64] + 36] = 128
            _10366 = mem[_6985]
            mem[mem[64] + 132] = mem[_6985]
            s = 0
            t = _6985 + 32
            u = mem[64] + 164
            while s < _10366:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 68] = this.address
            mem[mem[64] + 100] = block.timestamp + 60
            require ext_code.size(address(_6972))
            call address(_6972).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args _10327 - (100 * _10258 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10366) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11691 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11700 = mem[_11691]
            require mem[_11691] <= test266151307()
            require _11691 + mem[_11691] + 31 < _11691 + return_data.size
            _11709 = mem[_11691 + mem[_11691]]
            if mem[_11691 + mem[_11691]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11691 + mem[_11691]]) + 1 < 0 or _11691 + ceil32(return_data.size) + ceil32(32 * mem[_11691 + mem[_11691]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11691 + ceil32(return_data.size) + ceil32(32 * mem[_11691 + mem[_11691]]) + 1
            mem[_11691 + ceil32(return_data.size)] = _11709
            require _11700 + (32 * _11709) + 32 <= return_data.size
            t = _11691 + ceil32(return_data.size) + 32
            s = _11691 + _11700 + 32
            while s < _11691 + _11700 + (32 * _11709) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_6974):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6973))
                staticcall address(_6973).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12994 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13006 = mem[_12994]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6974))
                staticcall address(_6974).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13040 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13052 = mem[_13040]
                if not _13006:
                    revert with 0, 'Desired value is zero'
                if not mem[_13040]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6973))
                call address(_6973).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13125 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13125] == bool(mem[_13125])
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6974))
                call address(_6974).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13169 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13169] == bool(mem[_13169])
                if _13006 and 1 > -1 / _13006:
                    revert with 0, 17
                if _13006 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _13006 < 100 * _13006 / 10000:
                    revert with 0, 17
                if _13052 and 1 > -1 / _13052:
                    revert with 0, 17
                if _13052 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _13052 < 100 * _13052 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _13006
                mem[mem[64] + 100] = _13052
                mem[mem[64] + 132] = _13006 - (100 * _13006 / 10000)
                mem[mem[64] + 164] = _13052 - (100 * _13052 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6973), address(_6974), _13006, _13052, _13006 - (100 * _13006 / 10000), _13052 - (100 * _13052 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _13313 = mem[_734 + 160]
                _13314 = mem[_734 + 64]
                _13315 = mem[_734 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_13315))
                staticcall address(_13315).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13344 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13361 = mem[_13344]
                if _13314 >= 999999:
                    mem[mem[64] + 4] = mem[_13344]
                    require ext_code.size(address(_13313))
                    call address(_13313).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _13361
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13361
                    emit Earn(_13361);
                    _13463 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13463))
                    staticcall address(_13463).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13510 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_13510]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13635 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13656 = mem[_13635]
                    _13679 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13702 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13656
                    mem[mem[64] + 36] = 128
                    _13720 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13702 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13679))
                    call address(_13679).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13702 + (32 * _13720) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14281 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14302 = mem[_14281]
                    require mem[_14281] <= test266151307()
                    require _14281 + mem[_14281] + 31 < _14281 + return_data.size
                    _14323 = mem[_14281 + mem[_14281]]
                    if mem[_14281 + mem[_14281]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14281 + mem[_14281]]) + 1 < 0 or _14281 + ceil32(return_data.size) + ceil32(32 * mem[_14281 + mem[_14281]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14281 + ceil32(return_data.size) + ceil32(32 * mem[_14281 + mem[_14281]]) + 1
                    mem[_14281 + ceil32(return_data.size)] = _14323
                    require _14302 + (32 * _14323) + 32 <= return_data.size
                    t = _14281 + ceil32(return_data.size) + 32
                    s = _14281 + _14302 + 32
                    while s < _14281 + _14302 + (32 * _14323) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14997 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14997]
                else:
                    mem[mem[64] + 4] = _13314
                    mem[mem[64] + 36] = _13361
                    require ext_code.size(address(_13313))
                    call address(_13313).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _13314, _13361
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13361
                    emit Earn(_13361);
                    _13464 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13464))
                    staticcall address(_13464).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13511 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_13511]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13636 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13657 = mem[_13636]
                    _13680 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13703 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13657
                    mem[mem[64] + 36] = 128
                    _13721 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13703 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13680))
                    call address(_13680).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13703 + (32 * _13721) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14282 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14303 = mem[_14282]
                    require mem[_14282] <= test266151307()
                    require _14282 + mem[_14282] + 31 < _14282 + return_data.size
                    _14324 = mem[_14282 + mem[_14282]]
                    if mem[_14282 + mem[_14282]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14282 + mem[_14282]]) + 1 < 0 or _14282 + ceil32(return_data.size) + ceil32(32 * mem[_14282 + mem[_14282]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14282 + ceil32(return_data.size) + ceil32(32 * mem[_14282 + mem[_14282]]) + 1
                    mem[_14282 + ceil32(return_data.size)] = _14324
                    require _14303 + (32 * _14324) + 32 <= return_data.size
                    t = _14282 + ceil32(return_data.size) + 32
                    s = _14282 + _14303 + 32
                    while s < _14282 + _14303 + (32 * _14324) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14998 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14998]
            else:
                if 1 >= mem[_6985]:
                    revert with 0, 50
                mem[_6985 + 64] = address(_6974)
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _13010 = mem[_6985]
                mem[mem[64] + 68] = mem[_6985]
                s = 0
                t = _6985 + 32
                u = mem[64] + 100
                while s < _13010:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6972))
                staticcall address(_6972).getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _13010) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14292 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14313 = mem[_14292]
                require mem[_14292] <= test266151307()
                require _14292 + mem[_14292] + 31 < _14292 + return_data.size
                _14334 = mem[_14292 + mem[_14292]]
                if mem[_14292 + mem[_14292]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14292 + mem[_14292]]) + 1 < 0 or _14292 + ceil32(return_data.size) + ceil32(32 * mem[_14292 + mem[_14292]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14292 + ceil32(return_data.size) + ceil32(32 * mem[_14292 + mem[_14292]]) + 1
                mem[_14292 + ceil32(return_data.size)] = _14334
                require _14313 + (32 * _14334) + 32 <= return_data.size
                t = _14292 + ceil32(return_data.size) + 32
                s = _14292 + _14313 + 32
                while s < _14292 + _14313 + (32 * _14334) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _14334:
                    revert with 0, 50
                _14953 = mem[_14292 + ceil32(return_data.size) + 64]
                if mem[_14292 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14292 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_14292 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _14334:
                    revert with 0, 50
                _15032 = mem[_14292 + ceil32(return_data.size) + 64]
                if mem[_14292 + ceil32(return_data.size) + 64] < 100 * mem[_14292 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _15044 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _15032 - (100 * _14953 / 10000)
                mem[mem[64] + 36] = 128
                _15049 = mem[_6985]
                mem[mem[64] + 132] = mem[_6985]
                s = 0
                t = _6985 + 32
                u = mem[64] + 164
                while s < _15049:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_15044 + 68] = this.address
                mem[_15044 + 100] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _15044 + (32 * _15049) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15505 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15509 = mem[_15505]
                require mem[_15505] <= test266151307()
                require _15505 + mem[_15505] + 31 < _15505 + return_data.size
                _15513 = mem[_15505 + mem[_15505]]
                if mem[_15505 + mem[_15505]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_15505 + mem[_15505]]) + 1 < 0 or _15505 + ceil32(return_data.size) + ceil32(32 * mem[_15505 + mem[_15505]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _15505 + ceil32(return_data.size) + ceil32(32 * mem[_15505 + mem[_15505]]) + 1
                mem[_15505 + ceil32(return_data.size)] = _15513
                require _15509 + (32 * _15513) + 32 <= return_data.size
                t = _15505 + ceil32(return_data.size) + 32
                s = _15505 + _15509 + 32
                while s < _15505 + _15509 + (32 * _15513) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6973))
                staticcall address(_6973).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15901 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15905 = mem[_15901]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6974))
                staticcall address(_6974).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15917 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15921 = mem[_15917]
                if not _15905:
                    revert with 0, 'Desired value is zero'
                if not mem[_15917]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6973))
                call address(_6973).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15949] == bool(mem[_15949])
                mem[mem[64] + 4] = address(_6972)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6974))
                call address(_6974).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6972), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15965 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15965] == bool(mem[_15965])
                if _15905 and 1 > -1 / _15905:
                    revert with 0, 17
                if _15905 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _15905 < 100 * _15905 / 10000:
                    revert with 0, 17
                if _15921 and 1 > -1 / _15921:
                    revert with 0, 17
                if _15921 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if _15921 < 100 * _15921 / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _15905
                mem[mem[64] + 100] = _15921
                mem[mem[64] + 132] = _15905 - (100 * _15905 / 10000)
                mem[mem[64] + 164] = _15921 - (100 * _15921 / 10000)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6972))
                call address(_6972).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6973), address(_6974), _15905, _15921, _15905 - (100 * _15905 / 10000), _15921 - (100 * _15921 / 10000), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _15999 = mem[_734 + 160]
                _16000 = mem[_734 + 64]
                _16001 = mem[_734 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16001))
                staticcall address(_16001).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16017 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16021 = mem[_16017]
                if _16000 >= 999999:
                    mem[mem[64] + 4] = mem[_16017]
                    require ext_code.size(address(_15999))
                    call address(_15999).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _16021
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _16021
                    emit Earn(_16021);
                    _16058 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16058))
                    staticcall address(_16058).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16082 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_16082]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16130 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16138 = mem[_16130]
                    _16146 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _16154 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _16138
                    mem[mem[64] + 36] = 128
                    _16162 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_16154 + 100] = block.timestamp + 60
                    require ext_code.size(address(_16146))
                    call address(_16146).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16154 + (32 * _16162) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16274 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16282 = mem[_16274]
                    require mem[_16274] <= test266151307()
                    require _16274 + mem[_16274] + 31 < _16274 + return_data.size
                    _16290 = mem[_16274 + mem[_16274]]
                    if mem[_16274 + mem[_16274]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_16274 + mem[_16274]]) + 1 < 0 or _16274 + ceil32(return_data.size) + ceil32(32 * mem[_16274 + mem[_16274]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _16274 + ceil32(return_data.size) + ceil32(32 * mem[_16274 + mem[_16274]]) + 1
                    mem[_16274 + ceil32(return_data.size)] = _16290
                    require _16282 + (32 * _16290) + 32 <= return_data.size
                    t = _16274 + ceil32(return_data.size) + 32
                    s = _16274 + _16282 + 32
                    while s < _16274 + _16282 + (32 * _16290) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16370 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_16370]
                else:
                    mem[mem[64] + 4] = _16000
                    mem[mem[64] + 36] = _16021
                    require ext_code.size(address(_15999))
                    call address(_15999).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _16000, _16021
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _16021
                    emit Earn(_16021);
                    _16059 = mem[_734 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16059))
                    staticcall address(_16059).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16083 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_734 + 96] = mem[_16083]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16131 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16139 = mem[_16131]
                    _16147 = mem[_734]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _16155 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _16139
                    mem[mem[64] + 36] = 128
                    _16163 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_16155 + 100] = block.timestamp + 60
                    require ext_code.size(address(_16147))
                    call address(_16147).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16155 + (32 * _16163) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16275 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16283 = mem[_16275]
                    require mem[_16275] <= test266151307()
                    require _16275 + mem[_16275] + 31 < _16275 + return_data.size
                    _16291 = mem[_16275 + mem[_16275]]
                    if mem[_16275 + mem[_16275]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_16275 + mem[_16275]]) + 1 < 0 or _16275 + ceil32(return_data.size) + ceil32(32 * mem[_16275 + mem[_16275]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _16275 + ceil32(return_data.size) + ceil32(32 * mem[_16275 + mem[_16275]]) + 1
                    mem[_16275 + ceil32(return_data.size)] = _16291
                    require _16283 + (32 * _16291) + 32 <= return_data.size
                    t = _16275 + ceil32(return_data.size) + 32
                    s = _16275 + _16283 + 32
                    while s < _16275 + _16283 + (32 * _16291) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16371 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_16371]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _734
        s = _3377 - (100 * _3377 / 10000)
        s = stor9[idx].field_0
        continue 
    _735 = mem[64]
    mem[64] = mem[64] + 256
    mem[_735] = 0
    mem[_735 + 32] = 0
    mem[_735 + 64] = 0
    mem[_735 + 96] = 0
    mem[_735 + 128] = 0
    mem[_735 + 160] = 0
    mem[_735 + 192] = 0
    mem[_735 + 224] = 0
    _739 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_739 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _735
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1722 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1722] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1722 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1722 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1722 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1722 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1722 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1722 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1722 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1737 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1743 = mem[_1737]
            if not mem[_1737]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1737]
                v = _1722
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1798 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1817 = mem[_1798]
            require mem[_1798] == mem[_1798 + 18 len 14]
            _1831 = mem[_1798 + 32]
            require mem[_1798 + 32] == mem[_1798 + 50 len 14]
            require mem[_1798 + 64] == mem[_1798 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1862 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1871 = mem[_1862]
            if _1743 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1862]:
                revert with 0, 18
            if 10^12 * _1743 / mem[_1862] and Mask(112, 0, _1817) > -1 / 10^12 * _1743 / mem[_1862]:
                revert with 0, 17
            if 10^12 * _1743 / mem[_1862] and Mask(112, 0, _1831) > -1 / 10^12 * _1743 / mem[_1862]:
                revert with 0, 17
            if 1 >= mem[_739]:
                revert with 0, 50
            mem[_739 + 64] = stor21
            if 0 >= mem[_739]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_739 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12
                mem[mem[64] + 36] = 64
                _1970 = mem[_739]
                mem[mem[64] + 68] = mem[_739]
                s = 0
                t = _739 + 32
                u = mem[64] + 100
                while s < _1970:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12, 64, mem[mem[64] + 68 len (32 * _1970) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3399 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3410 = mem[_3399]
                require mem[_3399] <= test266151307()
                require _3399 + mem[_3399] + 31 < _3399 + return_data.size
                _3422 = mem[_3399 + mem[_3399]]
                if mem[_3399 + mem[_3399]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3399 + mem[_3399]]) + 1 < 0 or _3399 + ceil32(return_data.size) + ceil32(32 * mem[_3399 + mem[_3399]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3399 + ceil32(return_data.size) + ceil32(32 * mem[_3399 + mem[_3399]]) + 1
                mem[_3399 + ceil32(return_data.size)] = _3422
                require _3410 + (32 * _3422) + 32 <= return_data.size
                t = _3399 + ceil32(return_data.size) + 32
                s = _3399 + _3410 + 32
                while s < _3399 + _3410 + (32 * _3422) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3422:
                    revert with 0, 50
                _5152 = mem[_3399 + ceil32(return_data.size) + 64]
                if 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12 > !mem[_3399 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1722 + 128] = (10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12) + mem[_3399 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12) + _5152):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3399 + ceil32(return_data.size)
                t = 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12
                u = 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12
                v = _1743
                v = _1722
                v = stor9[idx].field_0
                v = v + (10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12) + _5152
                continue 
            mem[_739 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12
                mem[mem[64] + 36] = 64
                _1976 = mem[_739]
                mem[mem[64] + 68] = mem[_739]
                s = 0
                t = _739 + 32
                u = mem[64] + 100
                while s < _1976:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12, 64, mem[mem[64] + 68 len (32 * _1976) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3398 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3409 = mem[_3398]
                require mem[_3398] <= test266151307()
                require _3398 + mem[_3398] + 31 < _3398 + return_data.size
                _3421 = mem[_3398 + mem[_3398]]
                if mem[_3398 + mem[_3398]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3398 + mem[_3398]]) + 1 < 0 or _3398 + ceil32(return_data.size) + ceil32(32 * mem[_3398 + mem[_3398]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3398 + ceil32(return_data.size) + ceil32(32 * mem[_3398 + mem[_3398]]) + 1
                mem[_3398 + ceil32(return_data.size)] = _3421
                require _3409 + (32 * _3421) + 32 <= return_data.size
                t = _3398 + ceil32(return_data.size) + 32
                s = _3398 + _3409 + 32
                while s < _3398 + _3409 + (32 * _3421) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3421:
                    revert with 0, 50
                _5151 = mem[_3398 + ceil32(return_data.size) + 64]
                if 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12 > !mem[_3398 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1722 + 128] = (10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12) + mem[_3398 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12) + _5151):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3398 + ceil32(return_data.size)
                t = 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12
                u = 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12
                v = _1743
                v = _1722
                v = stor9[idx].field_0
                v = v + (10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12) + _5151
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1979 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1989 = mem[_1979]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2043 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2063 = mem[_2043]
            if mem[_2043] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1989:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2195 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2216 = mem[_2195]
            if 10^12 * _2063 / _1989 and mem[_2195] > -1 / 10^12 * _2063 / _1989:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _2063 / _1989 * _2216 / 10^12
            mem[mem[64] + 36] = 64
            _2334 = mem[_739]
            mem[mem[64] + 68] = mem[_739]
            t = 0
            u = _739 + 32
            w = mem[64] + 100
            while t < _2334:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _2063 / _1989 * _2216 / 10^12, 64, mem[mem[64] + 68 len (32 * _2334) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3397 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3408 = mem[_3397]
            require mem[_3397] <= test266151307()
            require _3397 + mem[_3397] + 31 < _3397 + return_data.size
            _3420 = mem[_3397 + mem[_3397]]
            if mem[_3397 + mem[_3397]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3397 + mem[_3397]]) + 1 < 0 or _3397 + ceil32(return_data.size) + ceil32(32 * mem[_3397 + mem[_3397]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3397 + ceil32(return_data.size) + ceil32(32 * mem[_3397 + mem[_3397]]) + 1
            mem[_3397 + ceil32(return_data.size)] = _3420
            require _3408 + (32 * _3420) + 32 <= return_data.size
            u = _3397 + ceil32(return_data.size) + 32
            t = _3397 + _3408 + 32
            while t < _3397 + _3408 + (32 * _3420) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3420:
                revert with 0, 50
            _5150 = mem[_3397 + ceil32(return_data.size) + 64]
            mem[_1722 + 128] = mem[_3397 + ceil32(return_data.size) + 64]
            if v > !_5150:
                revert with 0, 17
            if 0 >= mem[_739]:
                revert with 0, 50
            mem[_739 + 32] = mem[_1722 + 236 len 20]
            _5195 = mem[_1722 + 224]
            _5196 = mem[_1722]
            require ext_code.size(mem[_1722 + 236 len 20])
            staticcall mem[_1722 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5214 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5228 = mem[_5214]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5195))
            staticcall address(_5195).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5246 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5276 = mem[_5246]
            if mem[_5246] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _5228:
                revert with 0, 18
            mem[mem[64] + 4] = address(_5196)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_5196)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5350 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5372 = mem[_5350]
            if 10^12 * _5276 / _5228 and mem[_5350] > -1 / 10^12 * _5276 / _5228:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _5276 / _5228 * _5372 / 10^12
            mem[mem[64] + 36] = 64
            _5434 = mem[_739]
            mem[mem[64] + 68] = mem[_739]
            t = 0
            u = _739 + 32
            w = mem[64] + 100
            while t < _5434:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_5196))
            staticcall address(_5196).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _5276 / _5228 * _5372 / 10^12, 64, mem[mem[64] + 68 len (32 * _5434) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6992 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7010 = mem[_6992]
            require mem[_6992] <= test266151307()
            require _6992 + mem[_6992] + 31 < _6992 + return_data.size
            _7024 = mem[_6992 + mem[_6992]]
            if mem[_6992 + mem[_6992]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6992 + mem[_6992]]) + 1 < 0 or _6992 + ceil32(return_data.size) + ceil32(32 * mem[_6992 + mem[_6992]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6992 + ceil32(return_data.size) + ceil32(32 * mem[_6992 + mem[_6992]]) + 1
            mem[_6992 + ceil32(return_data.size)] = _7024
            require _7010 + (32 * _7024) + 32 <= return_data.size
            u = _6992 + ceil32(return_data.size) + 32
            t = _6992 + _7010 + 32
            while t < _6992 + _7010 + (32 * _7024) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7024:
                revert with 0, 50
            if mem[_1722 + 128] > !mem[_6992 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1722 + 128] = mem[_1722 + 128] + mem[_6992 + ceil32(return_data.size) + 64]
            if v + _5150 > !mem[_1722 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1743 / _1871 * Mask(112, 0, _1831) / 10^12
            u = 10^12 * _1743 / _1871 * Mask(112, 0, _1817) / 10^12
            v = _1743
            v = _1722
            v = stor9[idx].field_0
            v = v + _5150 + mem[_1722 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1736 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1742 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1742] = mem[_1736]
        mem[_1742 + 32] = mem[_1736 + 32]
        mem[_1742 + 64] = mem[_1736 + 64]
        require return_data.size - 96 >= 96
        _1768 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1768] = mem[_1736 + 96]
        mem[_1768 + 32] = mem[_1736 + 128]
        mem[_1768 + 64] = mem[_1736 + 160]
        mem[_1742 + 96] = _1768
        mem[_1742 + 128] = mem[_1736 + 192]
        require return_data.size - 224 >= 96
        _1789 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1789] = mem[_1736 + 224]
        mem[_1789 + 32] = mem[_1736 + 256]
        mem[_1789 + 64] = mem[_1736 + 288]
        mem[_1742 + 160] = _1789
        _1807 = mem[_1742 + 64]
        if not mem[_1742 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1742 + 64]
            v = _1722
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1845 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1851 = mem[_1845]
        require mem[_1845] == mem[_1845 + 18 len 14]
        _1868 = mem[_1845 + 32]
        require mem[_1845 + 32] == mem[_1845 + 50 len 14]
        require mem[_1845 + 64] == mem[_1845 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1908 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1915 = mem[_1908]
        if _1807 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1908]:
            revert with 0, 18
        if 10^12 * _1807 / mem[_1908] and Mask(112, 0, _1851) > -1 / 10^12 * _1807 / mem[_1908]:
            revert with 0, 17
        if 10^12 * _1807 / mem[_1908] and Mask(112, 0, _1868) > -1 / 10^12 * _1807 / mem[_1908]:
            revert with 0, 17
        if 1 >= mem[_739]:
            revert with 0, 50
        mem[_739 + 64] = stor21
        if 0 >= mem[_739]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_739 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12
            mem[mem[64] + 36] = 64
            _2058 = mem[_739]
            mem[mem[64] + 68] = mem[_739]
            s = 0
            t = _739 + 32
            u = mem[64] + 100
            while s < _2058:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12, 64, mem[mem[64] + 68 len (32 * _2058) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3396 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3407 = mem[_3396]
            require mem[_3396] <= test266151307()
            require _3396 + mem[_3396] + 31 < _3396 + return_data.size
            _3419 = mem[_3396 + mem[_3396]]
            if mem[_3396 + mem[_3396]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3396 + mem[_3396]]) + 1 < 0 or _3396 + ceil32(return_data.size) + ceil32(32 * mem[_3396 + mem[_3396]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3396 + ceil32(return_data.size) + ceil32(32 * mem[_3396 + mem[_3396]]) + 1
            mem[_3396 + ceil32(return_data.size)] = _3419
            require _3407 + (32 * _3419) + 32 <= return_data.size
            t = _3396 + ceil32(return_data.size) + 32
            s = _3396 + _3407 + 32
            while s < _3396 + _3407 + (32 * _3419) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3419:
                revert with 0, 50
            _5149 = mem[_3396 + ceil32(return_data.size) + 64]
            if 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12 > !mem[_3396 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1722 + 128] = (10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12) + mem[_3396 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12) + _5149):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3396 + ceil32(return_data.size)
            t = 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12
            u = 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12
            v = _1807
            v = _1722
            v = stor9[idx].field_0
            v = v + (10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12) + _5149
            continue 
        mem[_739 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12
            mem[mem[64] + 36] = 64
            _2062 = mem[_739]
            mem[mem[64] + 68] = mem[_739]
            s = 0
            t = _739 + 32
            w = mem[64] + 100
            while s < _2062:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12, 64, mem[mem[64] + 68 len (32 * _2062) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3395 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3406 = mem[_3395]
            require mem[_3395] <= test266151307()
            require _3395 + mem[_3395] + 31 < _3395 + return_data.size
            _3418 = mem[_3395 + mem[_3395]]
            if mem[_3395 + mem[_3395]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3395 + mem[_3395]]) + 1 < 0 or _3395 + ceil32(return_data.size) + ceil32(32 * mem[_3395 + mem[_3395]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3395 + ceil32(return_data.size) + ceil32(32 * mem[_3395 + mem[_3395]]) + 1
            mem[_3395 + ceil32(return_data.size)] = _3418
            require _3406 + (32 * _3418) + 32 <= return_data.size
            t = _3395 + ceil32(return_data.size) + 32
            s = _3395 + _3406 + 32
            while s < _3395 + _3406 + (32 * _3418) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3418:
                revert with 0, 50
            _5148 = mem[_3395 + ceil32(return_data.size) + 64]
            if 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12 > !mem[_3395 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1722 + 128] = (10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12) + mem[_3395 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12) + _5148):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3395 + ceil32(return_data.size)
            t = 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12
            s = 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12
            v = _1807
            v = _1722
            v = stor9[idx].field_0
            v = v + (10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12) + _5148
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2072 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2101 = mem[_2072]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2155 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2175 = mem[_2155]
        if mem[_2155] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _2101:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2300 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2333 = mem[_2300]
        if 10^12 * _2175 / _2101 and mem[_2300] > -1 / 10^12 * _2175 / _2101:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _2175 / _2101 * _2333 / 10^12
        mem[mem[64] + 36] = 64
        _2426 = mem[_739]
        mem[mem[64] + 68] = mem[_739]
        t = 0
        u = _739 + 32
        w = mem[64] + 100
        while t < _2426:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _2175 / _2101 * _2333 / 10^12, 64, mem[mem[64] + 68 len (32 * _2426) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3394 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3405 = mem[_3394]
        require mem[_3394] <= test266151307()
        require _3394 + mem[_3394] + 31 < _3394 + return_data.size
        _3417 = mem[_3394 + mem[_3394]]
        if mem[_3394 + mem[_3394]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3394 + mem[_3394]]) + 1 < 0 or _3394 + ceil32(return_data.size) + ceil32(32 * mem[_3394 + mem[_3394]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3394 + ceil32(return_data.size) + ceil32(32 * mem[_3394 + mem[_3394]]) + 1
        mem[_3394 + ceil32(return_data.size)] = _3417
        require _3405 + (32 * _3417) + 32 <= return_data.size
        u = _3394 + ceil32(return_data.size) + 32
        t = _3394 + _3405 + 32
        while t < _3394 + _3405 + (32 * _3417) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3417:
            revert with 0, 50
        _5147 = mem[_3394 + ceil32(return_data.size) + 64]
        mem[_1722 + 128] = mem[_3394 + ceil32(return_data.size) + 64]
        if v > !_5147:
            revert with 0, 17
        if 0 >= mem[_739]:
            revert with 0, 50
        mem[_739 + 32] = mem[_1722 + 236 len 20]
        _5193 = mem[_1722 + 224]
        _5194 = mem[_1722]
        require ext_code.size(mem[_1722 + 236 len 20])
        staticcall mem[_1722 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5213 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5227 = mem[_5213]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_5193))
        staticcall address(_5193).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5245 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5275 = mem[_5245]
        if mem[_5245] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _5227:
            revert with 0, 18
        mem[mem[64] + 4] = address(_5194)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_5194)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5349 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5371 = mem[_5349]
        if 10^12 * _5275 / _5227 and mem[_5349] > -1 / 10^12 * _5275 / _5227:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _5275 / _5227 * _5371 / 10^12
        mem[mem[64] + 36] = 64
        _5433 = mem[_739]
        mem[mem[64] + 68] = mem[_739]
        t = 0
        u = _739 + 32
        w = mem[64] + 100
        while t < _5433:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_5194))
        staticcall address(_5194).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _5275 / _5227 * _5371 / 10^12, 64, mem[mem[64] + 68 len (32 * _5433) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6991 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7009 = mem[_6991]
        require mem[_6991] <= test266151307()
        require _6991 + mem[_6991] + 31 < _6991 + return_data.size
        _7023 = mem[_6991 + mem[_6991]]
        if mem[_6991 + mem[_6991]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_6991 + mem[_6991]]) + 1 < 0 or _6991 + ceil32(return_data.size) + ceil32(32 * mem[_6991 + mem[_6991]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _6991 + ceil32(return_data.size) + ceil32(32 * mem[_6991 + mem[_6991]]) + 1
        mem[_6991 + ceil32(return_data.size)] = _7023
        require _7009 + (32 * _7023) + 32 <= return_data.size
        u = _6991 + ceil32(return_data.size) + 32
        t = _6991 + _7009 + 32
        while t < _6991 + _7009 + (32 * _7023) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _7023:
            revert with 0, 50
        if mem[_1722 + 128] > !mem[_6991 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1722 + 128] = mem[_1722 + 128] + mem[_6991 + ceil32(return_data.size) + 64]
        if v + _5147 > !mem[_1722 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1807 / _1915 * Mask(112, 0, _1868) / 10^12
        u = 10^12 * _1807 / _1915 * Mask(112, 0, _1851) / 10^12
        v = _1807
        v = _1722
        v = stor9[idx].field_0
        v = v + _5147 + mem[_1722 + 128]
        continue 
    emit 0xf9ede3d1 
    _1734 = mem[64]
    mem[64] = mem[64] + 256
    mem[_1734] = 0
    mem[_1734 + 32] = 0
    mem[_1734 + 64] = 0
    mem[_1734 + 96] = 0
    mem[_1734 + 128] = 0
    mem[_1734 + 160] = 0
    mem[_1734 + 192] = 0
    mem[_1734 + 224] = 0
    _1735 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_1735 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _1734
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _3366 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3366] = strategyInfo[stor9[idx].field_0].field_0
        mem[_3366 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_3366 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_3366 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_3366 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_3366 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_3366 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_3366 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3393 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _3403 = mem[_3393]
            if not mem[_3393]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3393]
                v = _3366
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3450 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3472 = mem[_3450]
            require mem[_3450] == mem[_3450 + 18 len 14]
            _3496 = mem[_3450 + 32]
            require mem[_3450 + 32] == mem[_3450 + 50 len 14]
            require mem[_3450 + 64] == mem[_3450 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3543 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3557 = mem[_3543]
            if _3403 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3543]:
                revert with 0, 18
            if 10^12 * _3403 / mem[_3543] and Mask(112, 0, _3472) > -1 / 10^12 * _3403 / mem[_3543]:
                revert with 0, 17
            if 10^12 * _3403 / mem[_3543] and Mask(112, 0, _3496) > -1 / 10^12 * _3403 / mem[_3543]:
                revert with 0, 17
            if 1 >= mem[_1735]:
                revert with 0, 50
            mem[_1735 + 64] = stor21
            if 0 >= mem[_1735]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1735 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _3662 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12
                mem[mem[64] + 36] = 64
                _3685 = mem[_1735]
                mem[mem[64] + 68] = mem[_1735]
                s = 0
                t = _1735 + 32
                u = mem[64] + 100
                while s < _3685:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3662 + (32 * _3685) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5176 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5192 = mem[_5176]
                require mem[_5176] <= test266151307()
                require _5176 + mem[_5176] + 31 < _5176 + return_data.size
                _5212 = mem[_5176 + mem[_5176]]
                if mem[_5176 + mem[_5176]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5176 + mem[_5176]]) + 1 < 0 or _5176 + ceil32(return_data.size) + ceil32(32 * mem[_5176 + mem[_5176]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5176 + ceil32(return_data.size) + ceil32(32 * mem[_5176 + mem[_5176]]) + 1
                mem[_5176 + ceil32(return_data.size)] = _5212
                require _5192 + (32 * _5212) + 32 <= return_data.size
                t = _5176 + ceil32(return_data.size) + 32
                s = _5176 + _5192 + 32
                while s < _5176 + _5192 + (32 * _5212) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _5212:
                    revert with 0, 50
                _6968 = mem[_5176 + ceil32(return_data.size) + 64]
                if 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12 > !mem[_5176 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3366 + 128] = (10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12) + mem[_5176 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12) + _6968):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _5176 + ceil32(return_data.size)
                t = 10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12
                u = 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12
                v = _3403
                v = _3366
                v = stor9[idx].field_0
                v = v + (10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12) + _6968
                continue 
            mem[_1735 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12
                mem[mem[64] + 36] = 64
                _3697 = mem[_1735]
                mem[mem[64] + 68] = mem[_1735]
                s = 0
                t = _1735 + 32
                u = mem[64] + 100
                while s < _3697:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12, 64, mem[mem[64] + 68 len (32 * _3697) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5175 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5191 = mem[_5175]
                require mem[_5175] <= test266151307()
                require _5175 + mem[_5175] + 31 < _5175 + return_data.size
                _5211 = mem[_5175 + mem[_5175]]
                if mem[_5175 + mem[_5175]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5175 + mem[_5175]]) + 1 < 0 or _5175 + ceil32(return_data.size) + ceil32(32 * mem[_5175 + mem[_5175]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5175 + ceil32(return_data.size) + ceil32(32 * mem[_5175 + mem[_5175]]) + 1
                mem[_5175 + ceil32(return_data.size)] = _5211
                require _5191 + (32 * _5211) + 32 <= return_data.size
                t = _5175 + ceil32(return_data.size) + 32
                s = _5175 + _5191 + 32
                while s < _5175 + _5191 + (32 * _5211) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _5211:
                    revert with 0, 50
                _6967 = mem[_5175 + ceil32(return_data.size) + 64]
                if 10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12 > !mem[_5175 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3366 + 128] = (10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12) + mem[_5175 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12) + _6967):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _5175 + ceil32(return_data.size)
                t = 10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12
                u = 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12
                v = _3403
                v = _3366
                v = stor9[idx].field_0
                v = v + (10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12) + _6967
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3703 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3727 = mem[_3703]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3778 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3798 = mem[_3778]
            if mem[_3778] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _3727:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3921 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3946 = mem[_3921]
            if 10^12 * _3798 / _3727 and mem[_3921] > -1 / 10^12 * _3798 / _3727:
                revert with 0, 17
            _3977 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3798 / _3727 * _3946 / 10^12
            mem[mem[64] + 36] = 64
            _3996 = mem[_1735]
            mem[mem[64] + 68] = mem[_1735]
            t = 0
            u = _1735 + 32
            w = mem[64] + 100
            while t < _3996:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3977 + (32 * _3996) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5174 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5190 = mem[_5174]
            require mem[_5174] <= test266151307()
            require _5174 + mem[_5174] + 31 < _5174 + return_data.size
            _5210 = mem[_5174 + mem[_5174]]
            if mem[_5174 + mem[_5174]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5174 + mem[_5174]]) + 1 < 0 or _5174 + ceil32(return_data.size) + ceil32(32 * mem[_5174 + mem[_5174]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5174 + ceil32(return_data.size) + ceil32(32 * mem[_5174 + mem[_5174]]) + 1
            mem[_5174 + ceil32(return_data.size)] = _5210
            require _5190 + (32 * _5210) + 32 <= return_data.size
            u = _5174 + ceil32(return_data.size) + 32
            t = _5174 + _5190 + 32
            while t < _5174 + _5190 + (32 * _5210) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _5210:
                revert with 0, 50
            _6966 = mem[_5174 + ceil32(return_data.size) + 64]
            mem[_3366 + 128] = mem[_5174 + ceil32(return_data.size) + 64]
            if v > !_6966:
                revert with 0, 17
            if 0 >= mem[_1735]:
                revert with 0, 50
            mem[_1735 + 32] = mem[_3366 + 236 len 20]
            _7007 = mem[_3366 + 224]
            _7008 = mem[_3366]
            require ext_code.size(mem[_3366 + 236 len 20])
            staticcall mem[_3366 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7034 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7054 = mem[_7034]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_7007))
            staticcall address(_7007).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7080 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7098 = mem[_7080]
            if mem[_7080] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _7054:
                revert with 0, 18
            mem[mem[64] + 4] = address(_7008)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_7008)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7182 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7194 = mem[_7182]
            if 10^12 * _7098 / _7054 and mem[_7182] > -1 / 10^12 * _7098 / _7054:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _7098 / _7054 * _7194 / 10^12
            mem[mem[64] + 36] = 64
            _7240 = mem[_1735]
            mem[mem[64] + 68] = mem[_1735]
            t = 0
            u = _1735 + 32
            w = mem[64] + 100
            while t < _7240:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_7008))
            staticcall address(_7008).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _7098 / _7054 * _7194 / 10^12, 64, mem[mem[64] + 68 len (32 * _7240) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8809 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8831 = mem[_8809]
            require mem[_8809] <= test266151307()
            require _8809 + mem[_8809] + 31 < _8809 + return_data.size
            _8851 = mem[_8809 + mem[_8809]]
            if mem[_8809 + mem[_8809]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8809 + mem[_8809]]) + 1 < 0 or _8809 + ceil32(return_data.size) + ceil32(32 * mem[_8809 + mem[_8809]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8809 + ceil32(return_data.size) + ceil32(32 * mem[_8809 + mem[_8809]]) + 1
            mem[_8809 + ceil32(return_data.size)] = _8851
            require _8831 + (32 * _8851) + 32 <= return_data.size
            u = _8809 + ceil32(return_data.size) + 32
            t = _8809 + _8831 + 32
            while t < _8809 + _8831 + (32 * _8851) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _8851:
                revert with 0, 50
            if mem[_3366 + 128] > !mem[_8809 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3366 + 128] = mem[_3366 + 128] + mem[_8809 + ceil32(return_data.size) + 64]
            if v + _6966 > !mem[_3366 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3403 / _3557 * Mask(112, 0, _3496) / 10^12
            u = 10^12 * _3403 / _3557 * Mask(112, 0, _3472) / 10^12
            v = _3403
            v = _3366
            v = stor9[idx].field_0
            v = v + _6966 + mem[_3366 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3392 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _3402 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_3402] = mem[_3392]
        mem[_3402 + 32] = mem[_3392 + 32]
        mem[_3402 + 64] = mem[_3392 + 64]
        require return_data.size - 96 >= 96
        _3425 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3425] = mem[_3392 + 96]
        mem[_3425 + 32] = mem[_3392 + 128]
        mem[_3425 + 64] = mem[_3392 + 160]
        mem[_3402 + 96] = _3425
        mem[_3402 + 128] = mem[_3392 + 192]
        require return_data.size - 224 >= 96
        _3444 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3444] = mem[_3392 + 224]
        mem[_3444 + 32] = mem[_3392 + 256]
        mem[_3444 + 64] = mem[_3392 + 288]
        mem[_3402 + 160] = _3444
        _3464 = mem[_3402 + 64]
        if not mem[_3402 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_3402 + 64]
            v = _3366
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3520 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _3529 = mem[_3520]
        require mem[_3520] == mem[_3520 + 18 len 14]
        _3550 = mem[_3520 + 32]
        require mem[_3520 + 32] == mem[_3520 + 50 len 14]
        require mem[_3520 + 64] == mem[_3520 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3582 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3590 = mem[_3582]
        if _3464 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_3582]:
            revert with 0, 18
        if 10^12 * _3464 / mem[_3582] and Mask(112, 0, _3529) > -1 / 10^12 * _3464 / mem[_3582]:
            revert with 0, 17
        if 10^12 * _3464 / mem[_3582] and Mask(112, 0, _3550) > -1 / 10^12 * _3464 / mem[_3582]:
            revert with 0, 17
        if 1 >= mem[_1735]:
            revert with 0, 50
        mem[_1735 + 64] = stor21
        if 0 >= mem[_1735]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_1735 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12
            mem[mem[64] + 36] = 64
            _3786 = mem[_1735]
            mem[mem[64] + 68] = mem[_1735]
            s = 0
            t = _1735 + 32
            u = mem[64] + 100
            while s < _3786:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12, 64, mem[mem[64] + 68 len (32 * _3786) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5173 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5189 = mem[_5173]
            require mem[_5173] <= test266151307()
            require _5173 + mem[_5173] + 31 < _5173 + return_data.size
            _5209 = mem[_5173 + mem[_5173]]
            if mem[_5173 + mem[_5173]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5173 + mem[_5173]]) + 1 < 0 or _5173 + ceil32(return_data.size) + ceil32(32 * mem[_5173 + mem[_5173]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5173 + ceil32(return_data.size) + ceil32(32 * mem[_5173 + mem[_5173]]) + 1
            mem[_5173 + ceil32(return_data.size)] = _5209
            require _5189 + (32 * _5209) + 32 <= return_data.size
            t = _5173 + ceil32(return_data.size) + 32
            s = _5173 + _5189 + 32
            while s < _5173 + _5189 + (32 * _5209) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _5209:
                revert with 0, 50
            _6965 = mem[_5173 + ceil32(return_data.size) + 64]
            if 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12 > !mem[_5173 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3366 + 128] = (10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12) + mem[_5173 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12) + _6965):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _5173 + ceil32(return_data.size)
            t = 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12
            u = 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12
            v = _3464
            v = _3366
            v = stor9[idx].field_0
            v = v + (10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12) + _6965
            continue 
        mem[_1735 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12
            mem[mem[64] + 36] = 64
            _3797 = mem[_1735]
            mem[mem[64] + 68] = mem[_1735]
            s = 0
            t = _1735 + 32
            w = mem[64] + 100
            while s < _3797:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12, 64, mem[mem[64] + 68 len (32 * _3797) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5172 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5188 = mem[_5172]
            require mem[_5172] <= test266151307()
            require _5172 + mem[_5172] + 31 < _5172 + return_data.size
            _5208 = mem[_5172 + mem[_5172]]
            if mem[_5172 + mem[_5172]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5172 + mem[_5172]]) + 1 < 0 or _5172 + ceil32(return_data.size) + ceil32(32 * mem[_5172 + mem[_5172]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5172 + ceil32(return_data.size) + ceil32(32 * mem[_5172 + mem[_5172]]) + 1
            mem[_5172 + ceil32(return_data.size)] = _5208
            require _5188 + (32 * _5208) + 32 <= return_data.size
            t = _5172 + ceil32(return_data.size) + 32
            s = _5172 + _5188 + 32
            while s < _5172 + _5188 + (32 * _5208) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _5208:
                revert with 0, 50
            _6964 = mem[_5172 + ceil32(return_data.size) + 64]
            if 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12 > !mem[_5172 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3366 + 128] = (10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12) + mem[_5172 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12) + _6964):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _5172 + ceil32(return_data.size)
            t = 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12
            s = 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12
            v = _3464
            v = _3366
            v = stor9[idx].field_0
            v = v + (10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12) + _6964
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3804 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3833 = mem[_3804]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3874 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3896 = mem[_3874]
        if mem[_3874] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _3833:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3974 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3995 = mem[_3974]
        if 10^12 * _3896 / _3833 and mem[_3974] > -1 / 10^12 * _3896 / _3833:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _3896 / _3833 * _3995 / 10^12
        mem[mem[64] + 36] = 64
        _4045 = mem[_1735]
        mem[mem[64] + 68] = mem[_1735]
        t = 0
        u = _1735 + 32
        w = mem[64] + 100
        while t < _4045:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _3896 / _3833 * _3995 / 10^12, 64, mem[mem[64] + 68 len (32 * _4045) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5171 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5187 = mem[_5171]
        require mem[_5171] <= test266151307()
        require _5171 + mem[_5171] + 31 < _5171 + return_data.size
        _5207 = mem[_5171 + mem[_5171]]
        if mem[_5171 + mem[_5171]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5171 + mem[_5171]]) + 1 < 0 or _5171 + ceil32(return_data.size) + ceil32(32 * mem[_5171 + mem[_5171]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5171 + ceil32(return_data.size) + ceil32(32 * mem[_5171 + mem[_5171]]) + 1
        mem[_5171 + ceil32(return_data.size)] = _5207
        require _5187 + (32 * _5207) + 32 <= return_data.size
        u = _5171 + ceil32(return_data.size) + 32
        t = _5171 + _5187 + 32
        while t < _5171 + _5187 + (32 * _5207) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _5207:
            revert with 0, 50
        _6963 = mem[_5171 + ceil32(return_data.size) + 64]
        mem[_3366 + 128] = mem[_5171 + ceil32(return_data.size) + 64]
        if v > !_6963:
            revert with 0, 17
        if 0 >= mem[_1735]:
            revert with 0, 50
        mem[_1735 + 32] = mem[_3366 + 236 len 20]
        _7005 = mem[_3366 + 224]
        _7006 = mem[_3366]
        require ext_code.size(mem[_3366 + 236 len 20])
        staticcall mem[_3366 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7033 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7053 = mem[_7033]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_7005))
        staticcall address(_7005).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7079 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7097 = mem[_7079]
        if mem[_7079] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _7053:
            revert with 0, 18
        mem[mem[64] + 4] = address(_7006)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_7006)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7181 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7193 = mem[_7181]
        if 10^12 * _7097 / _7053 and mem[_7181] > -1 / 10^12 * _7097 / _7053:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _7097 / _7053 * _7193 / 10^12
        mem[mem[64] + 36] = 64
        _7239 = mem[_1735]
        mem[mem[64] + 68] = mem[_1735]
        t = 0
        u = _1735 + 32
        w = mem[64] + 100
        while t < _7239:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_7006))
        staticcall address(_7006).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _7097 / _7053 * _7193 / 10^12, 64, mem[mem[64] + 68 len (32 * _7239) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8808 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8830 = mem[_8808]
        require mem[_8808] <= test266151307()
        require _8808 + mem[_8808] + 31 < _8808 + return_data.size
        _8850 = mem[_8808 + mem[_8808]]
        if mem[_8808 + mem[_8808]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8808 + mem[_8808]]) + 1 < 0 or _8808 + ceil32(return_data.size) + ceil32(32 * mem[_8808 + mem[_8808]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8808 + ceil32(return_data.size) + ceil32(32 * mem[_8808 + mem[_8808]]) + 1
        mem[_8808 + ceil32(return_data.size)] = _8850
        require _8830 + (32 * _8850) + 32 <= return_data.size
        u = _8808 + ceil32(return_data.size) + 32
        t = _8808 + _8830 + 32
        while t < _8808 + _8830 + (32 * _8850) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _8850:
            revert with 0, 50
        if mem[_3366 + 128] > !mem[_8808 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_3366 + 128] = mem[_3366 + 128] + mem[_8808 + ceil32(return_data.size) + 64]
        if v + _6963 > !mem[_3366 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _3464 / _3590 * Mask(112, 0, _3550) / 10^12
        u = 10^12 * _3464 / _3590 * Mask(112, 0, _3529) / 10^12
        v = _3464
        v = _3366
        v = stor9[idx].field_0
        v = v + _6963 + mem[_3366 + 128]
        continue 
    _3371 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    if not mem[_3371]:
        revert with 0, 50
    mem[_3371 + 32] = stor21
    if stor21 == stor19:
        if stor21 == stor20:
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Desired value is zero'
            if not ext_call.return_data[0]:
                revert with 0, 'Desired value is zero'
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                revert with 0, 17
            if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if ext_call.return_data[0] < 100 * ext_call.return_data[0] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), ext_call.return_data[0] - (100 * ext_call.return_data[0] / 10000), address(this.address), block.timestamp + 60
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if not v:
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !msg.value:
                    revert with 0, 17
                totalSupply += msg.value
                if balanceOf[address(msg.sender)] > !msg.value:
                    revert with 0, 17
                balanceOf[address(msg.sender)] += msg.value
                emit Transfer(msg.value, 0, msg.sender);
            else:
                if v > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 100 * msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if not 100 * v:
                    revert with 0, 18
                if 10000 * msg.value / 100 * v and v > -1 / 10000 * msg.value / 100 * v:
                    revert with 0, 17
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                totalSupply += 10000 * msg.value / 100 * v * v
                if balanceOf[address(msg.sender)] > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                balanceOf[address(msg.sender)] += 10000 * msg.value / 100 * v * v
                emit Transfer((10000 * msg.value / 100 * v * v), 0, msg.sender);
            require ext_code.size(stor23)
            staticcall stor23.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor18)
            if stor16 >= 999999:
                call stor18.deposit(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
            else:
                call stor18.0xe2bbb158 with:
                     gas gas_remaining wei
                    args stor16, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            emit Earn(ext_call.return_data[0]);
        else:
            if 1 >= mem[_3371]:
                revert with 0, 50
            mem[_3371 + 64] = stor20
            mem[_3371 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_3371 + 100] = eth.balance(this.address) / 2
            mem[_3371 + 132] = 64
            mem[_3371 + 164] = mem[_3371]
            idx = 0
            s = _3371 + 32
            t = _3371 + 196
            while idx < mem[_3371]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3371 + (32 * mem[_3371]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5169 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5185 = mem[_5169]
            require mem[_5169] <= test266151307()
            require _5169 + mem[_5169] + 31 < _5169 + return_data.size
            _5205 = mem[_5169 + mem[_5169]]
            if mem[_5169 + mem[_5169]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5169 + mem[_5169]]) + 1 < 0 or _5169 + ceil32(return_data.size) + ceil32(32 * mem[_5169 + mem[_5169]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5169 + ceil32(return_data.size) + ceil32(32 * mem[_5169 + mem[_5169]]) + 1
            mem[_5169 + ceil32(return_data.size)] = _5205
            require _5185 + (32 * _5205) + 32 <= return_data.size
            mem[_5169 + ceil32(return_data.size) + 32 len ceil32(32 * _5205)] = mem[_5169 + _5185 + 32 len ceil32(32 * _5205)]
            if 1 >= _5205:
                revert with 0, 50
            _6961 = mem[_5169 + ceil32(return_data.size) + 64]
            if mem[_5169 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5169 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_5169 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _5205:
                revert with 0, 50
            _7051 = mem[_5169 + ceil32(return_data.size) + 64]
            if mem[_5169 + ceil32(return_data.size) + 64] < 100 * mem[_5169 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7051 - (100 * _6961 / 10000)
            mem[mem[64] + 36] = 128
            _7147 = mem[_3371]
            mem[mem[64] + 132] = mem[_3371]
            idx = 0
            s = _3371 + 32
            t = mem[64] + 164
            while idx < _7147:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 68] = this.address
            mem[mem[64] + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args _7051 - (100 * _6961 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7147) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8798 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8818 = mem[_8798]
            require mem[_8798] <= test266151307()
            require _8798 + mem[_8798] + 31 < _8798 + return_data.size
            _8840 = mem[_8798 + mem[_8798]]
            if mem[_8798 + mem[_8798]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8798 + mem[_8798]]) + 1 < 0 or _8798 + ceil32(return_data.size) + ceil32(32 * mem[_8798 + mem[_8798]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8798 + ceil32(return_data.size) + ceil32(32 * mem[_8798 + mem[_8798]]) + 1
            mem[_8798 + ceil32(return_data.size)] = _8840
            require _8818 + (32 * _8840) + 32 <= return_data.size
            mem[_8798 + ceil32(return_data.size) + 32 len ceil32(32 * _8840)] = mem[_8798 + _8818 + 32 len ceil32(32 * _8840)]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10286 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10298 = mem[_10286]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10323 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10333 = mem[_10323]
            if not _10298:
                revert with 0, 'Desired value is zero'
            if not mem[_10323]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10351 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10351] == bool(mem[_10351])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10385 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10385] == bool(mem[_10385])
            if _10298 and 1 > -1 / _10298:
                revert with 0, 17
            if _10298 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _10298 < 100 * _10298 / 10000:
                revert with 0, 17
            if _10333 and 1 > -1 / _10333:
                revert with 0, 17
            if _10333 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _10333 < 100 * _10333 / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64] + 68] = _10298
            mem[mem[64] + 100] = _10333
            mem[mem[64] + 132] = _10298 - (100 * _10298 / 10000)
            mem[mem[64] + 164] = _10333 - (100 * _10333 / 10000)
            mem[mem[64] + 196] = this.address
            mem[mem[64] + 228] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _10298, _10333, _10298 - (100 * _10298 / 10000), _10333 - (100 * _10333 / 10000), address(this.address), block.timestamp + 60
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            if not v:
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !msg.value:
                    revert with 0, 17
                totalSupply += msg.value
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !msg.value:
                    revert with 0, 17
                balanceOf[address(msg.sender)] += msg.value
                emit Transfer(msg.value, 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10694 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_10694]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_10694]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_10694]);
            else:
                if v > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 100 * msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if not 100 * v:
                    revert with 0, 18
                if 10000 * msg.value / 100 * v and v > -1 / 10000 * msg.value / 100 * v:
                    revert with 0, 17
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                totalSupply += 10000 * msg.value / 100 * v * v
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                balanceOf[address(msg.sender)] += 10000 * msg.value / 100 * v * v
                emit Transfer((10000 * msg.value / 100 * v * v), 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10764 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_10764]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_10764]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_10764]);
    else:
        if 1 >= mem[_3371]:
            revert with 0, 50
        mem[_3371 + 64] = stor19
        mem[_3371 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[_3371 + 100] = eth.balance(this.address) / 2
        mem[_3371 + 132] = 64
        mem[_3371 + 164] = mem[_3371]
        idx = 0
        s = _3371 + 32
        t = _3371 + 196
        while idx < mem[_3371]:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require ext_code.size(stor22)
        staticcall stor22.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _3371 + (32 * mem[_3371]) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5170 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5186 = mem[_5170]
        require mem[_5170] <= test266151307()
        require _5170 + mem[_5170] + 31 < _5170 + return_data.size
        _5206 = mem[_5170 + mem[_5170]]
        if mem[_5170 + mem[_5170]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5170 + mem[_5170]]) + 1 < 0 or _5170 + ceil32(return_data.size) + ceil32(32 * mem[_5170 + mem[_5170]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5170 + ceil32(return_data.size) + ceil32(32 * mem[_5170 + mem[_5170]]) + 1
        mem[_5170 + ceil32(return_data.size)] = _5206
        require _5186 + (32 * _5206) + 32 <= return_data.size
        mem[_5170 + ceil32(return_data.size) + 32 len ceil32(32 * _5206)] = mem[_5170 + _5186 + 32 len ceil32(32 * _5206)]
        if 1 >= _5206:
            revert with 0, 50
        _6962 = mem[_5170 + ceil32(return_data.size) + 64]
        if mem[_5170 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5170 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_5170 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if 1 >= _5206:
            revert with 0, 50
        _7052 = mem[_5170 + ceil32(return_data.size) + 64]
        if mem[_5170 + ceil32(return_data.size) + 64] < 100 * mem[_5170 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        if 60 > !block.timestamp:
            revert with 0, 17
        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _7052 - (100 * _6962 / 10000)
        mem[mem[64] + 36] = 128
        _7148 = mem[_3371]
        mem[mem[64] + 132] = mem[_3371]
        idx = 0
        s = _3371 + 32
        t = mem[64] + 164
        while idx < _7148:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 68] = this.address
        mem[mem[64] + 100] = block.timestamp + 60
        require ext_code.size(stor22)
        call stor22.swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
           value eth.balance(this.address) / 2 wei
             gas gas_remaining wei
            args _7052 - (100 * _6962 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _7148) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8799 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8819 = mem[_8799]
        require mem[_8799] <= test266151307()
        require _8799 + mem[_8799] + 31 < _8799 + return_data.size
        _8841 = mem[_8799 + mem[_8799]]
        if mem[_8799 + mem[_8799]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8799 + mem[_8799]]) + 1 < 0 or _8799 + ceil32(return_data.size) + ceil32(32 * mem[_8799 + mem[_8799]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8799 + ceil32(return_data.size) + ceil32(32 * mem[_8799 + mem[_8799]]) + 1
        mem[_8799 + ceil32(return_data.size)] = _8841
        require _8819 + (32 * _8841) + 32 <= return_data.size
        mem[_8799 + ceil32(return_data.size) + 32 len ceil32(32 * _8841)] = mem[_8799 + _8819 + 32 len ceil32(32 * _8841)]
        if stor21 == stor20:
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10295 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10308 = mem[_10295]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10332 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10335 = mem[_10332]
            if not _10308:
                revert with 0, 'Desired value is zero'
            if not mem[_10332]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10361 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10361] == bool(mem[_10361])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10395 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10395] == bool(mem[_10395])
            if _10308 and 1 > -1 / _10308:
                revert with 0, 17
            if _10308 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _10308 < 100 * _10308 / 10000:
                revert with 0, 17
            if _10335 and 1 > -1 / _10335:
                revert with 0, 17
            if _10335 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _10335 < 100 * _10335 / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64] + 68] = _10308
            mem[mem[64] + 100] = _10335
            mem[mem[64] + 132] = _10308 - (100 * _10308 / 10000)
            mem[mem[64] + 164] = _10335 - (100 * _10335 / 10000)
            mem[mem[64] + 196] = this.address
            mem[mem[64] + 228] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _10308, _10335, _10308 - (100 * _10308 / 10000), _10335 - (100 * _10335 / 10000), address(this.address), block.timestamp + 60
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            if not v:
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !msg.value:
                    revert with 0, 17
                totalSupply += msg.value
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !msg.value:
                    revert with 0, 17
                balanceOf[address(msg.sender)] += msg.value
                emit Transfer(msg.value, 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10700 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_10700]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_10700]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_10700]);
            else:
                if v > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 100 * msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if not 100 * v:
                    revert with 0, 18
                if 10000 * msg.value / 100 * v and v > -1 / 10000 * msg.value / 100 * v:
                    revert with 0, 17
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                totalSupply += 10000 * msg.value / 100 * v * v
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                balanceOf[address(msg.sender)] += 10000 * msg.value / 100 * v * v
                emit Transfer((10000 * msg.value / 100 * v * v), 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10770 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_10770]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_10770]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_10770]);
        else:
            if 1 >= mem[_3371]:
                revert with 0, 50
            mem[_3371 + 64] = stor20
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = eth.balance(this.address) / 2
            mem[mem[64] + 36] = 64
            _10309 = mem[_3371]
            mem[mem[64] + 68] = mem[_3371]
            idx = 0
            s = _3371 + 32
            t = mem[64] + 100
            while idx < _10309:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10309) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11696 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11705 = mem[_11696]
            require mem[_11696] <= test266151307()
            require _11696 + mem[_11696] + 31 < _11696 + return_data.size
            _11714 = mem[_11696 + mem[_11696]]
            if mem[_11696 + mem[_11696]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11696 + mem[_11696]]) + 1 < 0 or _11696 + ceil32(return_data.size) + ceil32(32 * mem[_11696 + mem[_11696]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11696 + ceil32(return_data.size) + ceil32(32 * mem[_11696 + mem[_11696]]) + 1
            mem[_11696 + ceil32(return_data.size)] = _11714
            require _11705 + (32 * _11714) + 32 <= return_data.size
            mem[_11696 + ceil32(return_data.size) + 32 len ceil32(32 * _11714)] = mem[_11696 + _11705 + 32 len ceil32(32 * _11714)]
            if 1 >= _11714:
                revert with 0, 50
            _12968 = mem[_11696 + ceil32(return_data.size) + 64]
            if mem[_11696 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11696 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_11696 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _11714:
                revert with 0, 50
            _13034 = mem[_11696 + ceil32(return_data.size) + 64]
            if mem[_11696 + ceil32(return_data.size) + 64] < 100 * mem[_11696 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _13115 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _13034 - (100 * _12968 / 10000)
            mem[mem[64] + 36] = 128
            _13128 = mem[_3371]
            mem[mem[64] + 132] = mem[_3371]
            idx = 0
            s = _3371 + 32
            t = mem[64] + 164
            while idx < _13128:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_13115 + 68] = this.address
            mem[_13115 + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13115 + (32 * _13128) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14274 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14295 = mem[_14274]
            require mem[_14274] <= test266151307()
            require _14274 + mem[_14274] + 31 < _14274 + return_data.size
            _14316 = mem[_14274 + mem[_14274]]
            if mem[_14274 + mem[_14274]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_14274 + mem[_14274]]) + 1 < 0 or _14274 + ceil32(return_data.size) + ceil32(32 * mem[_14274 + mem[_14274]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _14274 + ceil32(return_data.size) + ceil32(32 * mem[_14274 + mem[_14274]]) + 1
            mem[_14274 + ceil32(return_data.size)] = _14316
            require _14295 + (32 * _14316) + 32 <= return_data.size
            mem[_14274 + ceil32(return_data.size) + 32 len ceil32(32 * _14316)] = mem[_14274 + _14295 + 32 len ceil32(32 * _14316)]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14990 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15007 = mem[_14990]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15030 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15035 = mem[_15030]
            if not _15007:
                revert with 0, 'Desired value is zero'
            if not mem[_15030]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15042 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15042] == bool(mem[_15042])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15058 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15058] == bool(mem[_15058])
            if _15007 and 1 > -1 / _15007:
                revert with 0, 17
            if _15007 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _15007 < 100 * _15007 / 10000:
                revert with 0, 17
            if _15035 and 1 > -1 / _15035:
                revert with 0, 17
            if _15035 > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if _15035 < 100 * _15035 / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64] + 68] = _15007
            mem[mem[64] + 100] = _15035
            mem[mem[64] + 132] = _15007 - (100 * _15007 / 10000)
            mem[mem[64] + 164] = _15035 - (100 * _15035 / 10000)
            mem[mem[64] + 196] = this.address
            mem[mem[64] + 228] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _15007, _15035, _15007 - (100 * _15007 / 10000), _15035 - (100 * _15035 / 10000), address(this.address), block.timestamp + 60
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            if not v:
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !msg.value:
                    revert with 0, 17
                totalSupply += msg.value
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !msg.value:
                    revert with 0, 17
                balanceOf[address(msg.sender)] += msg.value
                emit Transfer(msg.value, 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15177 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_15177]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_15177]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_15177]);
            else:
                if v > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 100 * msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if not 100 * v:
                    revert with 0, 18
                if 10000 * msg.value / 100 * v and v > -1 / 10000 * msg.value / 100 * v:
                    revert with 0, 17
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                totalSupply += 10000 * msg.value / 100 * v * v
                mem[0] = msg.sender
                mem[32] = 0
                if balanceOf[address(msg.sender)] > !(10000 * msg.value / 100 * v * v):
                    revert with 0, 17
                balanceOf[address(msg.sender)] += 10000 * msg.value / 100 * v * v
                emit Transfer((10000 * msg.value / 100 * v * v), 0, msg.sender);
                mem[mem[64] + 4] = this.address
                require ext_code.size(stor23)
                staticcall stor23.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15198 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require ext_code.size(stor18)
                if stor16 >= 999999:
                    call stor18.deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args mem[_15198]
                else:
                    call stor18.0xe2bbb158 with:
                         gas gas_remaining wei
                        args stor16, mem[_15198]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Earn(mem[_15198]);
    emit 0x5c77db97: msg.value
}



}
